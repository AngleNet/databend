select * from numbers(1) t, numbers(2) t1 where t.number = t1.number
----
Exchange(Merge)
    HashJoin: INNER, build keys: [t1.number], probe keys: [t.number], join filters: []
        Exchange(Hash): keys: [t.number]
            Scan: default.system.numbers
        Exchange(Hash): keys: [t1.number]
            Scan: default.system.numbers


# Result of t1 join t is distributed on t.number
select * from numbers(1) t, numbers(2) t1, numbers(3) t2 where t.number = t1.number and t.number = t2.number
----
Exchange(Merge)
    HashJoin: INNER, build keys: [t2.number], probe keys: [t.number], join filters: []
        HashJoin: INNER, build keys: [t1.number], probe keys: [t.number], join filters: []
            Exchange(Hash): keys: [t.number]
                Scan: default.system.numbers
            Exchange(Hash): keys: [t1.number]
                Scan: default.system.numbers
        Exchange(Hash): keys: [t2.number]
            Scan: default.system.numbers


select * from (select number as a, number+1 as b from numbers(1)) t, numbers(2) t1, numbers(3) t2 where a = t1.number and b = t2.number
----
Exchange(Merge)
    HashJoin: INNER, build keys: [t2.number], probe keys: [t.b], join filters: []
        Exchange(Hash): keys: [t.b]
            HashJoin: INNER, build keys: [t1.number], probe keys: [t.a], join filters: []
                Exchange(Hash): keys: [t.a]
                    EvalScalar: [+(numbers.number, 1)]
                        Scan: default.system.numbers
                Exchange(Hash): keys: [t1.number]
                    Scan: default.system.numbers
        Exchange(Hash): keys: [t2.number]
            Scan: default.system.numbers


select * from (select sum(number) as number from numbers(1) group by number) t, numbers(2) t1 where t.number = t1.number
----
Exchange(Merge)
    HashJoin: INNER, build keys: [t1.number], probe keys: [t.number], join filters: []
        Exchange(Hash): keys: [t.number]
            Project: [number]
                EvalScalar: [sum(number)]
                    Aggregate(Final): group items: [numbers.number], aggregate functions: [sum(number)]
                        Aggregate(Partial): group items: [numbers.number], aggregate functions: [sum(number)]
                            Exchange(Hash): keys: [numbers.number]
                                Scan: default.system.numbers
        Exchange(Hash): keys: [t1.number]
            Scan: default.system.numbers


