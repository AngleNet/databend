<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1686" onload="init(evt)" viewBox="0 0 1200 1686" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1686" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1669.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1669.00"> </text><svg id="frames" x="10" width="1180" total_samples="956"><g><title>databend-query`&lt;(A,B,C,D) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.10%)</title><rect x="0.0000%" y="1621" width="0.1046%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1631.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="1605" width="0.1046%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1615.50"></text></g><g><title>databend-query`core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="0.0000%" y="1589" width="0.1046%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1599.50"></text></g><g><title>databend-query`common_ast::parser::query::parenthesized_joined_tables (1 samples, 0.10%)</title><rect x="0.0000%" y="1573" width="0.1046%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1583.50"></text></g><g><title>databend-query`nom::combinator::map::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="1557" width="0.1046%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1567.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="1541" width="0.1046%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1551.50"></text></g><g><title>databend-query`nom::sequence::tuple::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="1525" width="0.1046%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1535.50"></text></g><g><title>databend-query`&lt;(FnA,FnB,FnC) as nom::sequence::Tuple&lt;Input,(A,B,C),Error&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="1509" width="0.1046%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1519.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="1493" width="0.1046%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1503.50"></text></g><g><title>databend-query`nom::branch::alt::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="1477" width="0.1046%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1487.50"></text></g><g><title>databend-query`&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.10%)</title><rect x="0.0000%" y="1461" width="0.1046%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1471.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="1445" width="0.1046%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1455.50"></text></g><g><title>databend-query`core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="0.0000%" y="1429" width="0.1046%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1439.50"></text></g><g><title>databend-query`common_ast::parser::query::joined_tables (1 samples, 0.10%)</title><rect x="0.0000%" y="1413" width="0.1046%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1423.50"></text></g><g><title>databend-query`nom::combinator::map::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="1397" width="0.1046%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1407.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="1381" width="0.1046%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1391.50"></text></g><g><title>databend-query`nom::sequence::tuple::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="1365" width="0.1046%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1375.50"></text></g><g><title>databend-query`&lt;(FnA,FnB) as nom::sequence::Tuple&lt;Input,(A,B),Error&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="1349" width="0.1046%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1359.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="1333" width="0.1046%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1343.50"></text></g><g><title>databend-query`common_ast::parser::query::joined_tables::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="1317" width="0.1046%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1327.50"></text></g><g><title>databend-query`nom::branch::alt::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="1301" width="0.1046%" height="15" fill="rgb(249,33,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1311.50"></text></g><g><title>databend-query`&lt;(A,B,C,D) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.10%)</title><rect x="0.0000%" y="1285" width="0.1046%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1295.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="1269" width="0.1046%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1279.50"></text></g><g><title>databend-query`core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="0.0000%" y="1253" width="0.1046%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1263.50"></text></g><g><title>databend-query`common_ast::parser::query::subquery (1 samples, 0.10%)</title><rect x="0.0000%" y="1237" width="0.1046%" height="15" fill="rgb(241,131,45)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1247.50"></text></g><g><title>databend-query`nom::combinator::map::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="1221" width="0.1046%" height="15" fill="rgb(249,31,29)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1231.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="1205" width="0.1046%" height="15" fill="rgb(225,111,53)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1215.50"></text></g><g><title>databend-query`nom::sequence::tuple::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="1189" width="0.1046%" height="15" fill="rgb(238,160,17)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1199.50"></text></g><g><title>databend-query`&lt;(FnA,FnB) as nom::sequence::Tuple&lt;Input,(A,B),Error&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="1173" width="0.1046%" height="15" fill="rgb(214,148,48)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1183.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="1157" width="0.1046%" height="15" fill="rgb(232,36,49)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1167.50"></text></g><g><title>databend-query`nom::branch::alt::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="1141" width="0.1046%" height="15" fill="rgb(209,103,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1151.50"></text></g><g><title>databend-query`&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.10%)</title><rect x="0.0000%" y="1125" width="0.1046%" height="15" fill="rgb(229,88,8)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1135.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="1109" width="0.1046%" height="15" fill="rgb(213,181,19)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1119.50"></text></g><g><title>databend-query`core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="0.0000%" y="1093" width="0.1046%" height="15" fill="rgb(254,191,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1103.50"></text></g><g><title>databend-query`common_ast::parser::query::query (1 samples, 0.10%)</title><rect x="0.0000%" y="1077" width="0.1046%" height="15" fill="rgb(241,83,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1087.50"></text></g><g><title>databend-query`nom::combinator::map::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="1061" width="0.1046%" height="15" fill="rgb(233,36,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1071.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="1045" width="0.1046%" height="15" fill="rgb(226,3,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1055.50"></text></g><g><title>databend-query`nom::combinator::consumed::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="1029" width="0.1046%" height="15" fill="rgb(245,192,40)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1039.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="1013" width="0.1046%" height="15" fill="rgb(238,167,29)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1023.50"></text></g><g><title>databend-query`nom::error::context::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="997" width="0.1046%" height="15" fill="rgb(232,182,51)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1007.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="981" width="0.1046%" height="15" fill="rgb(231,60,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="991.50"></text></g><g><title>databend-query`nom::sequence::tuple::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="965" width="0.1046%" height="15" fill="rgb(208,69,12)" fg:x="0" fg:w="1"/><text x="0.2500%" y="975.50"></text></g><g><title>databend-query`&lt;(FnA,FnB,FnC,FnD,FnE,FnF,FnG,FnH,FnI,FnJ) as nom::sequence::Tuple&lt;Input,(A,B,C,D,E,F,G,H,I,J),Error&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="949" width="0.1046%" height="15" fill="rgb(235,93,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="959.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="933" width="0.1046%" height="15" fill="rgb(213,116,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="943.50"></text></g><g><title>databend-query`nom::combinator::opt::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="917" width="0.1046%" height="15" fill="rgb(222,207,29)" fg:x="0" fg:w="1"/><text x="0.2500%" y="927.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="901" width="0.1046%" height="15" fill="rgb(206,96,30)" fg:x="0" fg:w="1"/><text x="0.2500%" y="911.50"></text></g><g><title>databend-query`nom::sequence::tuple::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="885" width="0.1046%" height="15" fill="rgb(218,138,4)" fg:x="0" fg:w="1"/><text x="0.2500%" y="895.50"></text></g><g><title>databend-query`&lt;(FnA,FnB) as nom::sequence::Tuple&lt;Input,(A,B),Error&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="869" width="0.1046%" height="15" fill="rgb(250,191,14)" fg:x="0" fg:w="1"/><text x="0.2500%" y="879.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="853" width="0.1046%" height="15" fill="rgb(239,60,40)" fg:x="0" fg:w="1"/><text x="0.2500%" y="863.50"></text></g><g><title>databend-query`nom::combinator::cut::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="837" width="0.1046%" height="15" fill="rgb(206,27,48)" fg:x="0" fg:w="1"/><text x="0.2500%" y="847.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="821" width="0.1046%" height="15" fill="rgb(225,35,8)" fg:x="0" fg:w="1"/><text x="0.2500%" y="831.50"></text></g><g><title>databend-query`common_ast::parser::util::separated_list1::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="805" width="0.1046%" height="15" fill="rgb(250,213,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="815.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="789" width="0.1046%" height="15" fill="rgb(247,123,22)" fg:x="0" fg:w="1"/><text x="0.2500%" y="799.50"></text></g><g><title>databend-query`core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="0.0000%" y="773" width="0.1046%" height="15" fill="rgb(231,138,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="783.50"></text></g><g><title>databend-query`common_ast::parser::query::table_reference (1 samples, 0.10%)</title><rect x="0.0000%" y="757" width="0.1046%" height="15" fill="rgb(231,145,46)" fg:x="0" fg:w="1"/><text x="0.2500%" y="767.50"></text></g><g><title>databend-query`nom::branch::alt::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="741" width="0.1046%" height="15" fill="rgb(251,118,11)" fg:x="0" fg:w="1"/><text x="0.2500%" y="751.50"></text></g><g><title>databend-query`&lt;(A,B,C,D,E) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.10%)</title><rect x="0.0000%" y="725" width="0.1046%" height="15" fill="rgb(217,147,25)" fg:x="0" fg:w="1"/><text x="0.2500%" y="735.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="709" width="0.1046%" height="15" fill="rgb(247,81,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="719.50"></text></g><g><title>databend-query`core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="0.0000%" y="693" width="0.1046%" height="15" fill="rgb(209,12,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="703.50"></text></g><g><title>databend-query`common_ast::parser::query::table_function (1 samples, 0.10%)</title><rect x="0.0000%" y="677" width="0.1046%" height="15" fill="rgb(227,1,9)" fg:x="0" fg:w="1"/><text x="0.2500%" y="687.50"></text></g><g><title>databend-query`nom::combinator::map::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="661" width="0.1046%" height="15" fill="rgb(248,47,43)" fg:x="0" fg:w="1"/><text x="0.2500%" y="671.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="645" width="0.1046%" height="15" fill="rgb(221,10,30)" fg:x="0" fg:w="1"/><text x="0.2500%" y="655.50"></text></g><g><title>databend-query`nom::sequence::tuple::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="629" width="0.1046%" height="15" fill="rgb(210,229,1)" fg:x="0" fg:w="1"/><text x="0.2500%" y="639.50"></text></g><g><title>databend-query`&lt;(FnA,FnB,FnC,FnD,FnE) as nom::sequence::Tuple&lt;Input,(A,B,C,D,E),Error&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="613" width="0.1046%" height="15" fill="rgb(222,148,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="623.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="597" width="0.1046%" height="15" fill="rgb(234,67,33)" fg:x="0" fg:w="1"/><text x="0.2500%" y="607.50"></text></g><g><title>databend-query`common_ast::parser::util::separated_list0::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="581" width="0.1046%" height="15" fill="rgb(247,98,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="591.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="565" width="0.1046%" height="15" fill="rgb(247,138,52)" fg:x="0" fg:w="1"/><text x="0.2500%" y="575.50"></text></g><g><title>databend-query`core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="0.0000%" y="549" width="0.1046%" height="15" fill="rgb(213,79,30)" fg:x="0" fg:w="1"/><text x="0.2500%" y="559.50"></text></g><g><title>databend-query`common_ast::parser::expr::expr (1 samples, 0.10%)</title><rect x="0.0000%" y="533" width="0.1046%" height="15" fill="rgb(246,177,23)" fg:x="0" fg:w="1"/><text x="0.2500%" y="543.50"></text></g><g><title>databend-query`nom::error::context::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="517" width="0.1046%" height="15" fill="rgb(230,62,27)" fg:x="0" fg:w="1"/><text x="0.2500%" y="527.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="501" width="0.1046%" height="15" fill="rgb(216,154,8)" fg:x="0" fg:w="1"/><text x="0.2500%" y="511.50"></text></g><g><title>databend-query`common_ast::parser::expr::subexpr::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="485" width="0.1046%" height="15" fill="rgb(244,35,45)" fg:x="0" fg:w="1"/><text x="0.2500%" y="495.50"></text></g><g><title>databend-query`nom::multi::many1::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="469" width="0.1046%" height="15" fill="rgb(251,115,12)" fg:x="0" fg:w="1"/><text x="0.2500%" y="479.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="453" width="0.1046%" height="15" fill="rgb(240,54,50)" fg:x="0" fg:w="1"/><text x="0.2500%" y="463.50"></text></g><g><title>databend-query`common_ast::parser::expr::subexpr::_{{closure}}::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="437" width="0.1046%" height="15" fill="rgb(233,84,52)" fg:x="0" fg:w="1"/><text x="0.2500%" y="447.50"></text></g><g><title>databend-query`common_ast::parser::expr::expr_element (1 samples, 0.10%)</title><rect x="0.0000%" y="421" width="0.1046%" height="15" fill="rgb(207,117,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="431.50"></text></g><g><title>databend-query`nom::combinator::consumed::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="405" width="0.1046%" height="15" fill="rgb(249,43,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="415.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="389" width="0.1046%" height="15" fill="rgb(209,38,44)" fg:x="0" fg:w="1"/><text x="0.2500%" y="399.50"></text></g><g><title>databend-query`nom::branch::alt::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="373" width="0.1046%" height="15" fill="rgb(236,212,23)" fg:x="0" fg:w="1"/><text x="0.2500%" y="383.50"></text></g><g><title>databend-query`&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.10%)</title><rect x="0.0000%" y="357" width="0.1046%" height="15" fill="rgb(242,79,21)" fg:x="0" fg:w="1"/><text x="0.2500%" y="367.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="341" width="0.1046%" height="15" fill="rgb(211,96,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="351.50"></text></g><g><title>databend-query`nom::branch::alt::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="325" width="0.1046%" height="15" fill="rgb(253,215,40)" fg:x="0" fg:w="1"/><text x="0.2500%" y="335.50"></text></g><g><title>databend-query`&lt;(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.10%)</title><rect x="0.0000%" y="309" width="0.1046%" height="15" fill="rgb(211,81,21)" fg:x="0" fg:w="1"/><text x="0.2500%" y="319.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="293" width="0.1046%" height="15" fill="rgb(208,190,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="303.50"></text></g><g><title>databend-query`nom::error::context::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="277" width="0.1046%" height="15" fill="rgb(235,213,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="287.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="261" width="0.1046%" height="15" fill="rgb(237,122,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="271.50"></text></g><g><title>databend-query`nom::combinator::map::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="245" width="0.1046%" height="15" fill="rgb(244,218,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="255.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="229" width="0.1046%" height="15" fill="rgb(240,68,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="239.50"></text></g><g><title>databend-query`core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="0.0000%" y="213" width="0.1046%" height="15" fill="rgb(210,16,53)" fg:x="0" fg:w="1"/><text x="0.2500%" y="223.50"></text></g><g><title>databend-query`common_ast::parser::expr::binary_op (1 samples, 0.10%)</title><rect x="0.0000%" y="197" width="0.1046%" height="15" fill="rgb(235,124,12)" fg:x="0" fg:w="1"/><text x="0.2500%" y="207.50"></text></g><g><title>databend-query`nom::branch::alt::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="181" width="0.1046%" height="15" fill="rgb(224,169,11)" fg:x="0" fg:w="1"/><text x="0.2500%" y="191.50"></text></g><g><title>databend-query`&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.10%)</title><rect x="0.0000%" y="165" width="0.1046%" height="15" fill="rgb(250,166,2)" fg:x="0" fg:w="1"/><text x="0.2500%" y="175.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.0000%" y="149" width="0.1046%" height="15" fill="rgb(242,216,29)" fg:x="0" fg:w="1"/><text x="0.2500%" y="159.50"></text></g><g><title>databend-query`nom::branch::alt::_{{closure}} (1 samples, 0.10%)</title><rect x="0.0000%" y="133" width="0.1046%" height="15" fill="rgb(230,116,27)" fg:x="0" fg:w="1"/><text x="0.2500%" y="143.50"></text></g><g><title>databend-query`&lt;(A,B,C,D,E,F,G,H,I,J,K,L) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.10%)</title><rect x="0.0000%" y="117" width="0.1046%" height="15" fill="rgb(228,99,48)" fg:x="0" fg:w="1"/><text x="0.2500%" y="127.50"></text></g><g><title>databend-query`&lt;common_ast::parser::error::Error as nom::error::ParseError&lt;common_ast::parser::util::Input&gt;&gt;::or (1 samples, 0.10%)</title><rect x="0.0000%" y="101" width="0.1046%" height="15" fill="rgb(253,11,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="111.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::clear (1 samples, 0.10%)</title><rect x="0.0000%" y="85" width="0.1046%" height="15" fill="rgb(247,143,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="95.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1 samples, 0.10%)</title><rect x="0.0000%" y="69" width="0.1046%" height="15" fill="rgb(236,97,10)" fg:x="0" fg:w="1"/><text x="0.2500%" y="79.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.10%)</title><rect x="0.0000%" y="53" width="0.1046%" height="15" fill="rgb(233,208,19)" fg:x="0" fg:w="1"/><text x="0.2500%" y="63.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.10%)</title><rect x="0.0000%" y="37" width="0.1046%" height="15" fill="rgb(216,164,2)" fg:x="0" fg:w="1"/><text x="0.2500%" y="47.50"></text></g><g><title>databend-query`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.1046%" y="1621" width="0.1046%" height="15" fill="rgb(220,129,5)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1631.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Launch::launch::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="1605" width="0.1046%" height="15" fill="rgb(242,17,10)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1615.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::run (1 samples, 0.10%)</title><rect x="0.1046%" y="1589" width="0.1046%" height="15" fill="rgb(242,107,0)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1599.50"></text></g><g><title>databend-query`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (1 samples, 0.10%)</title><rect x="0.1046%" y="1573" width="0.1046%" height="15" fill="rgb(251,28,31)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1583.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::run::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="1557" width="0.1046%" height="15" fill="rgb(233,223,10)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1567.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Context::run (1 samples, 0.10%)</title><rect x="0.1046%" y="1541" width="0.1046%" height="15" fill="rgb(215,21,27)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1551.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Context::run_task (1 samples, 0.10%)</title><rect x="0.1046%" y="1525" width="0.1046%" height="15" fill="rgb(232,23,21)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1535.50"></text></g><g><title>databend-query`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.10%)</title><rect x="0.1046%" y="1509" width="0.1046%" height="15" fill="rgb(244,5,23)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1519.50"></text></g><g><title>databend-query`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.10%)</title><rect x="0.1046%" y="1493" width="0.1046%" height="15" fill="rgb(226,81,46)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1503.50"></text></g><g><title>databend-query`tokio::coop::with_budget::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="1477" width="0.1046%" height="15" fill="rgb(247,70,30)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1487.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Context::run_task::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="1461" width="0.1046%" height="15" fill="rgb(212,68,19)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1471.50"></text></g><g><title>databend-query`tokio::runtime::task::LocalNotified&lt;S&gt;::run (1 samples, 0.10%)</title><rect x="0.1046%" y="1445" width="0.1046%" height="15" fill="rgb(240,187,13)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1455.50"></text></g><g><title>databend-query`tokio::runtime::task::raw::RawTask::poll (1 samples, 0.10%)</title><rect x="0.1046%" y="1429" width="0.1046%" height="15" fill="rgb(223,113,26)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1439.50"></text></g><g><title>databend-query`tokio::runtime::task::raw::poll (1 samples, 0.10%)</title><rect x="0.1046%" y="1413" width="0.1046%" height="15" fill="rgb(206,192,2)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1423.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.10%)</title><rect x="0.1046%" y="1397" width="0.1046%" height="15" fill="rgb(241,108,4)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1407.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1 samples, 0.10%)</title><rect x="0.1046%" y="1381" width="0.1046%" height="15" fill="rgb(247,173,49)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1391.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future (1 samples, 0.10%)</title><rect x="0.1046%" y="1365" width="0.1046%" height="15" fill="rgb(224,114,35)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1375.50"></text></g><g><title>databend-query`std::panic::catch_unwind (1 samples, 0.10%)</title><rect x="0.1046%" y="1349" width="0.1046%" height="15" fill="rgb(245,159,27)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1359.50"></text></g><g><title>databend-query`std::panicking::try (1 samples, 0.10%)</title><rect x="0.1046%" y="1333" width="0.1046%" height="15" fill="rgb(245,172,44)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1343.50"></text></g><g><title>databend-query`__rust_try (1 samples, 0.10%)</title><rect x="0.1046%" y="1317" width="0.1046%" height="15" fill="rgb(236,23,11)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1327.50"></text></g><g><title>databend-query`std::panicking::try::do_call (1 samples, 0.10%)</title><rect x="0.1046%" y="1301" width="0.1046%" height="15" fill="rgb(205,117,38)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1311.50"></text></g><g><title>databend-query`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.10%)</title><rect x="0.1046%" y="1285" width="0.1046%" height="15" fill="rgb(237,72,25)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1295.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="1269" width="0.1046%" height="15" fill="rgb(244,70,9)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1279.50"></text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (1 samples, 0.10%)</title><rect x="0.1046%" y="1253" width="0.1046%" height="15" fill="rgb(217,125,39)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1263.50"></text></g><g><title>databend-query`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.10%)</title><rect x="0.1046%" y="1237" width="0.1046%" height="15" fill="rgb(235,36,10)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1247.50"></text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="1221" width="0.1046%" height="15" fill="rgb(251,123,47)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1231.50"></text></g><g><title>databend-query`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.1046%" y="1205" width="0.1046%" height="15" fill="rgb(221,13,13)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1215.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.1046%" y="1189" width="0.1046%" height="15" fill="rgb(238,131,9)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1199.50"></text></g><g><title>databend-query`databend_query::servers::mysql::mysql_interactive_worker::InteractiveWorkerBase&lt;W&gt;::exec_query::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="1173" width="0.1046%" height="15" fill="rgb(211,50,8)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1183.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.1046%" y="1157" width="0.1046%" height="15" fill="rgb(245,182,24)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1167.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.1046%" y="1141" width="0.1046%" height="15" fill="rgb(242,14,37)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1151.50"></text></g><g><title>databend-query`&lt;databend_query::interpreters::interpreter_select_v2::SelectInterpreterV2 as databend_query::interpreters::interpreter::Interpreter&gt;::execute::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="1125" width="0.1046%" height="15" fill="rgb(246,228,12)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1135.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.1046%" y="1109" width="0.1046%" height="15" fill="rgb(213,55,15)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1119.50"></text></g><g><title>databend-query`&lt;databend_query::interpreters::interpreter_select_v2::SelectInterpreterV2 as databend_query::interpreters::interpreter::Interpreter&gt;::execute::_{{closure}}::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="1093" width="0.1046%" height="15" fill="rgb(209,9,3)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1103.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.1046%" y="1077" width="0.1046%" height="15" fill="rgb(230,59,30)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1087.50"></text></g><g><title>databend-query`databend_query::sql::planner::Planner::plan_sql::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="1061" width="0.1046%" height="15" fill="rgb(209,121,21)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1071.50"></text></g><g><title>databend-query`common_ast::parser::parse_sql (1 samples, 0.10%)</title><rect x="0.1046%" y="1045" width="0.1046%" height="15" fill="rgb(220,109,13)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1055.50"></text></g><g><title>databend-query`common_ast::parser::statement::statements (1 samples, 0.10%)</title><rect x="0.1046%" y="1029" width="0.1046%" height="15" fill="rgb(232,18,1)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1039.50"></text></g><g><title>databend-query`nom::combinator::map::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="1013" width="0.1046%" height="15" fill="rgb(215,41,42)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1023.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.1046%" y="997" width="0.1046%" height="15" fill="rgb(224,123,36)" fg:x="1" fg:w="1"/><text x="0.3546%" y="1007.50"></text></g><g><title>databend-query`nom::sequence::tuple::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="981" width="0.1046%" height="15" fill="rgb(240,125,3)" fg:x="1" fg:w="1"/><text x="0.3546%" y="991.50"></text></g><g><title>databend-query`&lt;(FnA,FnB) as nom::sequence::Tuple&lt;Input,(A,B),Error&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.1046%" y="965" width="0.1046%" height="15" fill="rgb(205,98,50)" fg:x="1" fg:w="1"/><text x="0.3546%" y="975.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.1046%" y="949" width="0.1046%" height="15" fill="rgb(205,185,37)" fg:x="1" fg:w="1"/><text x="0.3546%" y="959.50"></text></g><g><title>databend-query`common_ast::parser::util::separated_list1::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="933" width="0.1046%" height="15" fill="rgb(238,207,15)" fg:x="1" fg:w="1"/><text x="0.3546%" y="943.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.1046%" y="917" width="0.1046%" height="15" fill="rgb(213,199,42)" fg:x="1" fg:w="1"/><text x="0.3546%" y="927.50"></text></g><g><title>databend-query`nom::branch::alt::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="901" width="0.1046%" height="15" fill="rgb(235,201,11)" fg:x="1" fg:w="1"/><text x="0.3546%" y="911.50"></text></g><g><title>databend-query`&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.10%)</title><rect x="0.1046%" y="885" width="0.1046%" height="15" fill="rgb(207,46,11)" fg:x="1" fg:w="1"/><text x="0.3546%" y="895.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.1046%" y="869" width="0.1046%" height="15" fill="rgb(241,35,35)" fg:x="1" fg:w="1"/><text x="0.3546%" y="879.50"></text></g><g><title>databend-query`nom::combinator::map::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="853" width="0.1046%" height="15" fill="rgb(243,32,47)" fg:x="1" fg:w="1"/><text x="0.3546%" y="863.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.1046%" y="837" width="0.1046%" height="15" fill="rgb(247,202,23)" fg:x="1" fg:w="1"/><text x="0.3546%" y="847.50"></text></g><g><title>databend-query`core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="0.1046%" y="821" width="0.1046%" height="15" fill="rgb(219,102,11)" fg:x="1" fg:w="1"/><text x="0.3546%" y="831.50"></text></g><g><title>databend-query`common_ast::parser::statement::statement (1 samples, 0.10%)</title><rect x="0.1046%" y="805" width="0.1046%" height="15" fill="rgb(243,110,44)" fg:x="1" fg:w="1"/><text x="0.3546%" y="815.50"></text></g><g><title>databend-query`nom::branch::alt::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="789" width="0.1046%" height="15" fill="rgb(222,74,54)" fg:x="1" fg:w="1"/><text x="0.3546%" y="799.50"></text></g><g><title>databend-query`&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.10%)</title><rect x="0.1046%" y="773" width="0.1046%" height="15" fill="rgb(216,99,12)" fg:x="1" fg:w="1"/><text x="0.3546%" y="783.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.1046%" y="757" width="0.1046%" height="15" fill="rgb(226,22,26)" fg:x="1" fg:w="1"/><text x="0.3546%" y="767.50"></text></g><g><title>databend-query`nom::branch::alt::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="741" width="0.1046%" height="15" fill="rgb(217,163,10)" fg:x="1" fg:w="1"/><text x="0.3546%" y="751.50"></text></g><g><title>databend-query`&lt;(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.10%)</title><rect x="0.1046%" y="725" width="0.1046%" height="15" fill="rgb(213,25,53)" fg:x="1" fg:w="1"/><text x="0.3546%" y="735.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.1046%" y="709" width="0.1046%" height="15" fill="rgb(252,105,26)" fg:x="1" fg:w="1"/><text x="0.3546%" y="719.50"></text></g><g><title>databend-query`nom::combinator::map::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="693" width="0.1046%" height="15" fill="rgb(220,39,43)" fg:x="1" fg:w="1"/><text x="0.3546%" y="703.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.1046%" y="677" width="0.1046%" height="15" fill="rgb(229,68,48)" fg:x="1" fg:w="1"/><text x="0.3546%" y="687.50"></text></g><g><title>databend-query`core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="0.1046%" y="661" width="0.1046%" height="15" fill="rgb(252,8,32)" fg:x="1" fg:w="1"/><text x="0.3546%" y="671.50"></text></g><g><title>databend-query`common_ast::parser::query::query (1 samples, 0.10%)</title><rect x="0.1046%" y="645" width="0.1046%" height="15" fill="rgb(223,20,43)" fg:x="1" fg:w="1"/><text x="0.3546%" y="655.50"></text></g><g><title>databend-query`nom::combinator::map::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="629" width="0.1046%" height="15" fill="rgb(229,81,49)" fg:x="1" fg:w="1"/><text x="0.3546%" y="639.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.1046%" y="613" width="0.1046%" height="15" fill="rgb(236,28,36)" fg:x="1" fg:w="1"/><text x="0.3546%" y="623.50"></text></g><g><title>databend-query`nom::combinator::consumed::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="597" width="0.1046%" height="15" fill="rgb(249,185,26)" fg:x="1" fg:w="1"/><text x="0.3546%" y="607.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.1046%" y="581" width="0.1046%" height="15" fill="rgb(249,174,33)" fg:x="1" fg:w="1"/><text x="0.3546%" y="591.50"></text></g><g><title>databend-query`nom::error::context::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="565" width="0.1046%" height="15" fill="rgb(233,201,37)" fg:x="1" fg:w="1"/><text x="0.3546%" y="575.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.1046%" y="549" width="0.1046%" height="15" fill="rgb(221,78,26)" fg:x="1" fg:w="1"/><text x="0.3546%" y="559.50"></text></g><g><title>databend-query`nom::sequence::tuple::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="533" width="0.1046%" height="15" fill="rgb(250,127,30)" fg:x="1" fg:w="1"/><text x="0.3546%" y="543.50"></text></g><g><title>databend-query`&lt;(FnA,FnB,FnC,FnD,FnE,FnF,FnG,FnH,FnI,FnJ) as nom::sequence::Tuple&lt;Input,(A,B,C,D,E,F,G,H,I,J),Error&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.1046%" y="517" width="0.1046%" height="15" fill="rgb(230,49,44)" fg:x="1" fg:w="1"/><text x="0.3546%" y="527.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.1046%" y="501" width="0.1046%" height="15" fill="rgb(229,67,23)" fg:x="1" fg:w="1"/><text x="0.3546%" y="511.50"></text></g><g><title>databend-query`common_ast::parser::util::separated_list1::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="485" width="0.1046%" height="15" fill="rgb(249,83,47)" fg:x="1" fg:w="1"/><text x="0.3546%" y="495.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.1046%" y="469" width="0.1046%" height="15" fill="rgb(215,43,3)" fg:x="1" fg:w="1"/><text x="0.3546%" y="479.50"></text></g><g><title>databend-query`core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="0.1046%" y="453" width="0.1046%" height="15" fill="rgb(238,154,13)" fg:x="1" fg:w="1"/><text x="0.3546%" y="463.50"></text></g><g><title>databend-query`common_ast::parser::query::select_target (1 samples, 0.10%)</title><rect x="0.1046%" y="437" width="0.1046%" height="15" fill="rgb(219,56,2)" fg:x="1" fg:w="1"/><text x="0.3546%" y="447.50"></text></g><g><title>databend-query`nom::branch::alt::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="421" width="0.1046%" height="15" fill="rgb(233,0,4)" fg:x="1" fg:w="1"/><text x="0.3546%" y="431.50"></text></g><g><title>databend-query`&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.10%)</title><rect x="0.1046%" y="405" width="0.1046%" height="15" fill="rgb(235,30,7)" fg:x="1" fg:w="1"/><text x="0.3546%" y="415.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.1046%" y="389" width="0.1046%" height="15" fill="rgb(250,79,13)" fg:x="1" fg:w="1"/><text x="0.3546%" y="399.50"></text></g><g><title>databend-query`nom::combinator::map::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="373" width="0.1046%" height="15" fill="rgb(211,146,34)" fg:x="1" fg:w="1"/><text x="0.3546%" y="383.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.1046%" y="357" width="0.1046%" height="15" fill="rgb(228,22,38)" fg:x="1" fg:w="1"/><text x="0.3546%" y="367.50"></text></g><g><title>databend-query`nom::sequence::tuple::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="341" width="0.1046%" height="15" fill="rgb(235,168,5)" fg:x="1" fg:w="1"/><text x="0.3546%" y="351.50"></text></g><g><title>databend-query`&lt;(FnA,FnB) as nom::sequence::Tuple&lt;Input,(A,B),Error&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.1046%" y="325" width="0.1046%" height="15" fill="rgb(221,155,16)" fg:x="1" fg:w="1"/><text x="0.3546%" y="335.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.1046%" y="309" width="0.1046%" height="15" fill="rgb(215,215,53)" fg:x="1" fg:w="1"/><text x="0.3546%" y="319.50"></text></g><g><title>databend-query`core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="0.1046%" y="293" width="0.1046%" height="15" fill="rgb(223,4,10)" fg:x="1" fg:w="1"/><text x="0.3546%" y="303.50"></text></g><g><title>databend-query`common_ast::parser::expr::expr (1 samples, 0.10%)</title><rect x="0.1046%" y="277" width="0.1046%" height="15" fill="rgb(234,103,6)" fg:x="1" fg:w="1"/><text x="0.3546%" y="287.50"></text></g><g><title>databend-query`nom::error::context::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="261" width="0.1046%" height="15" fill="rgb(227,97,0)" fg:x="1" fg:w="1"/><text x="0.3546%" y="271.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.1046%" y="245" width="0.1046%" height="15" fill="rgb(234,150,53)" fg:x="1" fg:w="1"/><text x="0.3546%" y="255.50"></text></g><g><title>databend-query`common_ast::parser::expr::subexpr::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="229" width="0.1046%" height="15" fill="rgb(228,201,54)" fg:x="1" fg:w="1"/><text x="0.3546%" y="239.50"></text></g><g><title>databend-query`nom::multi::many1::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="213" width="0.1046%" height="15" fill="rgb(222,22,37)" fg:x="1" fg:w="1"/><text x="0.3546%" y="223.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.1046%" y="197" width="0.1046%" height="15" fill="rgb(237,53,32)" fg:x="1" fg:w="1"/><text x="0.3546%" y="207.50"></text></g><g><title>databend-query`common_ast::parser::expr::subexpr::_{{closure}}::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="181" width="0.1046%" height="15" fill="rgb(233,25,53)" fg:x="1" fg:w="1"/><text x="0.3546%" y="191.50"></text></g><g><title>databend-query`common_ast::parser::expr::expr_element (1 samples, 0.10%)</title><rect x="0.1046%" y="165" width="0.1046%" height="15" fill="rgb(210,40,34)" fg:x="1" fg:w="1"/><text x="0.3546%" y="175.50"></text></g><g><title>databend-query`nom::combinator::consumed::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="149" width="0.1046%" height="15" fill="rgb(241,220,44)" fg:x="1" fg:w="1"/><text x="0.3546%" y="159.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.1046%" y="133" width="0.1046%" height="15" fill="rgb(235,28,35)" fg:x="1" fg:w="1"/><text x="0.3546%" y="143.50"></text></g><g><title>databend-query`nom::branch::alt::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="117" width="0.1046%" height="15" fill="rgb(210,56,17)" fg:x="1" fg:w="1"/><text x="0.3546%" y="127.50"></text></g><g><title>databend-query`&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.10%)</title><rect x="0.1046%" y="101" width="0.1046%" height="15" fill="rgb(224,130,29)" fg:x="1" fg:w="1"/><text x="0.3546%" y="111.50"></text></g><g><title>databend-query`&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="0.1046%" y="85" width="0.1046%" height="15" fill="rgb(235,212,8)" fg:x="1" fg:w="1"/><text x="0.3546%" y="95.50"></text></g><g><title>databend-query`nom::branch::alt::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="69" width="0.1046%" height="15" fill="rgb(223,33,50)" fg:x="1" fg:w="1"/><text x="0.3546%" y="79.50"></text></g><g><title>databend-query`&lt;(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.10%)</title><rect x="0.1046%" y="53" width="0.1046%" height="15" fill="rgb(219,149,13)" fg:x="1" fg:w="1"/><text x="0.3546%" y="63.50"></text></g><g><title>databend-query`nom::error::context::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1046%" y="37" width="0.1046%" height="15" fill="rgb(250,156,29)" fg:x="1" fg:w="1"/><text x="0.3546%" y="47.50"></text></g><g><title>databend-query`std::thread::Builder::spawn_unchecked_::_{{closure}} (1 samples, 0.10%)</title><rect x="0.2092%" y="1621" width="0.1046%" height="15" fill="rgb(216,193,19)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1631.50"></text></g><g><title>databend-query`std::panic::catch_unwind (1 samples, 0.10%)</title><rect x="0.2092%" y="1605" width="0.1046%" height="15" fill="rgb(216,135,14)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1615.50"></text></g><g><title>databend-query`std::panicking::try (1 samples, 0.10%)</title><rect x="0.2092%" y="1589" width="0.1046%" height="15" fill="rgb(241,47,5)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1599.50"></text></g><g><title>databend-query`__rust_try (1 samples, 0.10%)</title><rect x="0.2092%" y="1573" width="0.1046%" height="15" fill="rgb(233,42,35)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1583.50"></text></g><g><title>databend-query`std::panicking::try::do_call (1 samples, 0.10%)</title><rect x="0.2092%" y="1557" width="0.1046%" height="15" fill="rgb(231,13,6)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1567.50"></text></g><g><title>databend-query`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.10%)</title><rect x="0.2092%" y="1541" width="0.1046%" height="15" fill="rgb(207,181,40)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1551.50"></text></g><g><title>databend-query`std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (1 samples, 0.10%)</title><rect x="0.2092%" y="1525" width="0.1046%" height="15" fill="rgb(254,173,49)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1535.50"></text></g><g><title>databend-query`std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.10%)</title><rect x="0.2092%" y="1509" width="0.1046%" height="15" fill="rgb(221,1,38)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1519.50"></text></g><g><title>databend-query`tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (1 samples, 0.10%)</title><rect x="0.2092%" y="1493" width="0.1046%" height="15" fill="rgb(206,124,46)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1503.50"></text></g><g><title>databend-query`tokio::runtime::blocking::pool::Inner::run (1 samples, 0.10%)</title><rect x="0.2092%" y="1477" width="0.1046%" height="15" fill="rgb(249,21,11)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1487.50"></text></g><g><title>databend-query`tokio::runtime::blocking::pool::Task::run (1 samples, 0.10%)</title><rect x="0.2092%" y="1461" width="0.1046%" height="15" fill="rgb(222,201,40)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1471.50"></text></g><g><title>databend-query`tokio::runtime::task::UnownedTask&lt;S&gt;::run (1 samples, 0.10%)</title><rect x="0.2092%" y="1445" width="0.1046%" height="15" fill="rgb(235,61,29)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1455.50"></text></g><g><title>databend-query`tokio::runtime::task::raw::RawTask::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="1429" width="0.1046%" height="15" fill="rgb(219,207,3)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1439.50"></text></g><g><title>databend-query`tokio::runtime::task::raw::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="1413" width="0.1046%" height="15" fill="rgb(222,56,46)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1423.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="1397" width="0.1046%" height="15" fill="rgb(239,76,54)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1407.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1 samples, 0.10%)</title><rect x="0.2092%" y="1381" width="0.1046%" height="15" fill="rgb(231,124,27)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1391.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future (1 samples, 0.10%)</title><rect x="0.2092%" y="1365" width="0.1046%" height="15" fill="rgb(249,195,6)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1375.50"></text></g><g><title>databend-query`std::panic::catch_unwind (1 samples, 0.10%)</title><rect x="0.2092%" y="1349" width="0.1046%" height="15" fill="rgb(237,174,47)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1359.50"></text></g><g><title>databend-query`std::panicking::try (1 samples, 0.10%)</title><rect x="0.2092%" y="1333" width="0.1046%" height="15" fill="rgb(206,201,31)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1343.50"></text></g><g><title>databend-query`__rust_try (1 samples, 0.10%)</title><rect x="0.2092%" y="1317" width="0.1046%" height="15" fill="rgb(231,57,52)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1327.50"></text></g><g><title>databend-query`std::panicking::try::do_call (1 samples, 0.10%)</title><rect x="0.2092%" y="1301" width="0.1046%" height="15" fill="rgb(248,177,22)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1311.50"></text></g><g><title>databend-query`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.10%)</title><rect x="0.2092%" y="1285" width="0.1046%" height="15" fill="rgb(215,211,37)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1295.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future::_{{closure}} (1 samples, 0.10%)</title><rect x="0.2092%" y="1269" width="0.1046%" height="15" fill="rgb(241,128,51)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1279.50"></text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="1253" width="0.1046%" height="15" fill="rgb(227,165,31)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1263.50"></text></g><g><title>databend-query`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.10%)</title><rect x="0.2092%" y="1237" width="0.1046%" height="15" fill="rgb(228,167,24)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1247.50"></text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (1 samples, 0.10%)</title><rect x="0.2092%" y="1221" width="0.1046%" height="15" fill="rgb(228,143,12)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1231.50"></text></g><g><title>databend-query`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="1205" width="0.1046%" height="15" fill="rgb(249,149,8)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1215.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Launch::launch::_{{closure}} (1 samples, 0.10%)</title><rect x="0.2092%" y="1189" width="0.1046%" height="15" fill="rgb(243,35,44)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1199.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::run (1 samples, 0.10%)</title><rect x="0.2092%" y="1173" width="0.1046%" height="15" fill="rgb(246,89,9)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1183.50"></text></g><g><title>databend-query`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (1 samples, 0.10%)</title><rect x="0.2092%" y="1157" width="0.1046%" height="15" fill="rgb(233,213,13)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1167.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::run::_{{closure}} (1 samples, 0.10%)</title><rect x="0.2092%" y="1141" width="0.1046%" height="15" fill="rgb(233,141,41)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1151.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Context::run (1 samples, 0.10%)</title><rect x="0.2092%" y="1125" width="0.1046%" height="15" fill="rgb(239,167,4)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1135.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Context::run_task (1 samples, 0.10%)</title><rect x="0.2092%" y="1109" width="0.1046%" height="15" fill="rgb(209,217,16)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1119.50"></text></g><g><title>databend-query`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.10%)</title><rect x="0.2092%" y="1093" width="0.1046%" height="15" fill="rgb(219,88,35)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1103.50"></text></g><g><title>databend-query`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.10%)</title><rect x="0.2092%" y="1077" width="0.1046%" height="15" fill="rgb(220,193,23)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1087.50"></text></g><g><title>databend-query`tokio::coop::with_budget::_{{closure}} (1 samples, 0.10%)</title><rect x="0.2092%" y="1061" width="0.1046%" height="15" fill="rgb(230,90,52)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1071.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Context::run_task::_{{closure}} (1 samples, 0.10%)</title><rect x="0.2092%" y="1045" width="0.1046%" height="15" fill="rgb(252,106,19)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1055.50"></text></g><g><title>databend-query`tokio::runtime::task::LocalNotified&lt;S&gt;::run (1 samples, 0.10%)</title><rect x="0.2092%" y="1029" width="0.1046%" height="15" fill="rgb(206,74,20)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1039.50"></text></g><g><title>databend-query`tokio::runtime::task::raw::RawTask::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="1013" width="0.1046%" height="15" fill="rgb(230,138,44)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1023.50"></text></g><g><title>databend-query`tokio::runtime::task::raw::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="997" width="0.1046%" height="15" fill="rgb(235,182,43)" fg:x="2" fg:w="1"/><text x="0.4592%" y="1007.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="981" width="0.1046%" height="15" fill="rgb(242,16,51)" fg:x="2" fg:w="1"/><text x="0.4592%" y="991.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1 samples, 0.10%)</title><rect x="0.2092%" y="965" width="0.1046%" height="15" fill="rgb(248,9,4)" fg:x="2" fg:w="1"/><text x="0.4592%" y="975.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future (1 samples, 0.10%)</title><rect x="0.2092%" y="949" width="0.1046%" height="15" fill="rgb(210,31,22)" fg:x="2" fg:w="1"/><text x="0.4592%" y="959.50"></text></g><g><title>databend-query`std::panic::catch_unwind (1 samples, 0.10%)</title><rect x="0.2092%" y="933" width="0.1046%" height="15" fill="rgb(239,54,39)" fg:x="2" fg:w="1"/><text x="0.4592%" y="943.50"></text></g><g><title>databend-query`std::panicking::try (1 samples, 0.10%)</title><rect x="0.2092%" y="917" width="0.1046%" height="15" fill="rgb(230,99,41)" fg:x="2" fg:w="1"/><text x="0.4592%" y="927.50"></text></g><g><title>databend-query`__rust_try (1 samples, 0.10%)</title><rect x="0.2092%" y="901" width="0.1046%" height="15" fill="rgb(253,106,12)" fg:x="2" fg:w="1"/><text x="0.4592%" y="911.50"></text></g><g><title>databend-query`std::panicking::try::do_call (1 samples, 0.10%)</title><rect x="0.2092%" y="885" width="0.1046%" height="15" fill="rgb(213,46,41)" fg:x="2" fg:w="1"/><text x="0.4592%" y="895.50"></text></g><g><title>databend-query`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.10%)</title><rect x="0.2092%" y="869" width="0.1046%" height="15" fill="rgb(215,133,35)" fg:x="2" fg:w="1"/><text x="0.4592%" y="879.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future::_{{closure}} (1 samples, 0.10%)</title><rect x="0.2092%" y="853" width="0.1046%" height="15" fill="rgb(213,28,5)" fg:x="2" fg:w="1"/><text x="0.4592%" y="863.50"></text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="837" width="0.1046%" height="15" fill="rgb(215,77,49)" fg:x="2" fg:w="1"/><text x="0.4592%" y="847.50"></text></g><g><title>databend-query`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.10%)</title><rect x="0.2092%" y="821" width="0.1046%" height="15" fill="rgb(248,100,22)" fg:x="2" fg:w="1"/><text x="0.4592%" y="831.50"></text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (1 samples, 0.10%)</title><rect x="0.2092%" y="805" width="0.1046%" height="15" fill="rgb(208,67,9)" fg:x="2" fg:w="1"/><text x="0.4592%" y="815.50"></text></g><g><title>databend-query`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="789" width="0.1046%" height="15" fill="rgb(219,133,21)" fg:x="2" fg:w="1"/><text x="0.4592%" y="799.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="773" width="0.1046%" height="15" fill="rgb(246,46,29)" fg:x="2" fg:w="1"/><text x="0.4592%" y="783.50"></text></g><g><title>databend-query`databend_query::servers::mysql::mysql_interactive_worker::InteractiveWorkerBase&lt;W&gt;::exec_query::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.10%)</title><rect x="0.2092%" y="757" width="0.1046%" height="15" fill="rgb(246,185,52)" fg:x="2" fg:w="1"/><text x="0.4592%" y="767.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="741" width="0.1046%" height="15" fill="rgb(252,136,11)" fg:x="2" fg:w="1"/><text x="0.4592%" y="751.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="725" width="0.1046%" height="15" fill="rgb(219,138,53)" fg:x="2" fg:w="1"/><text x="0.4592%" y="735.50"></text></g><g><title>databend-query`&lt;databend_query::interpreters::interpreter_select_v2::SelectInterpreterV2 as databend_query::interpreters::interpreter::Interpreter&gt;::execute::_{{closure}} (1 samples, 0.10%)</title><rect x="0.2092%" y="709" width="0.1046%" height="15" fill="rgb(211,51,23)" fg:x="2" fg:w="1"/><text x="0.4592%" y="719.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="693" width="0.1046%" height="15" fill="rgb(247,221,28)" fg:x="2" fg:w="1"/><text x="0.4592%" y="703.50"></text></g><g><title>databend-query`&lt;databend_query::interpreters::interpreter_select_v2::SelectInterpreterV2 as databend_query::interpreters::interpreter::Interpreter&gt;::execute::_{{closure}}::_{{closure}} (1 samples, 0.10%)</title><rect x="0.2092%" y="677" width="0.1046%" height="15" fill="rgb(251,222,45)" fg:x="2" fg:w="1"/><text x="0.4592%" y="687.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="661" width="0.1046%" height="15" fill="rgb(217,162,53)" fg:x="2" fg:w="1"/><text x="0.4592%" y="671.50"></text></g><g><title>databend-query`databend_query::sql::planner::Planner::plan_sql::_{{closure}} (1 samples, 0.10%)</title><rect x="0.2092%" y="645" width="0.1046%" height="15" fill="rgb(229,93,14)" fg:x="2" fg:w="1"/><text x="0.4592%" y="655.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="629" width="0.1046%" height="15" fill="rgb(209,67,49)" fg:x="2" fg:w="1"/><text x="0.4592%" y="639.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::Binder::bind::_{{closure}} (1 samples, 0.10%)</title><rect x="0.2092%" y="613" width="0.1046%" height="15" fill="rgb(213,87,29)" fg:x="2" fg:w="1"/><text x="0.4592%" y="623.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="597" width="0.1046%" height="15" fill="rgb(205,151,52)" fg:x="2" fg:w="1"/><text x="0.4592%" y="607.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::Binder::bind_statement::_{{closure}} (1 samples, 0.10%)</title><rect x="0.2092%" y="581" width="0.1046%" height="15" fill="rgb(253,215,39)" fg:x="2" fg:w="1"/><text x="0.4592%" y="591.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="565" width="0.1046%" height="15" fill="rgb(221,220,41)" fg:x="2" fg:w="1"/><text x="0.4592%" y="575.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="549" width="0.1046%" height="15" fill="rgb(218,133,21)" fg:x="2" fg:w="1"/><text x="0.4592%" y="559.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::select::_&lt;impl databend_query::sql::planner::binder::Binder&gt;::bind_query::_{{closure}} (1 samples, 0.10%)</title><rect x="0.2092%" y="533" width="0.1046%" height="15" fill="rgb(221,193,43)" fg:x="2" fg:w="1"/><text x="0.4592%" y="543.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="517" width="0.1046%" height="15" fill="rgb(240,128,52)" fg:x="2" fg:w="1"/><text x="0.4592%" y="527.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::select::_&lt;impl databend_query::sql::planner::binder::Binder&gt;::bind_select_stmt::_{{closure}} (1 samples, 0.10%)</title><rect x="0.2092%" y="501" width="0.1046%" height="15" fill="rgb(253,114,12)" fg:x="2" fg:w="1"/><text x="0.4592%" y="511.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="485" width="0.1046%" height="15" fill="rgb(215,223,47)" fg:x="2" fg:w="1"/><text x="0.4592%" y="495.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::select::_&lt;impl databend_query::sql::planner::binder::Binder&gt;::bind_table_reference::_{{closure}} (1 samples, 0.10%)</title><rect x="0.2092%" y="469" width="0.1046%" height="15" fill="rgb(248,225,23)" fg:x="2" fg:w="1"/><text x="0.4592%" y="479.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="453" width="0.1046%" height="15" fill="rgb(250,108,0)" fg:x="2" fg:w="1"/><text x="0.4592%" y="463.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="437" width="0.1046%" height="15" fill="rgb(228,208,7)" fg:x="2" fg:w="1"/><text x="0.4592%" y="447.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::join::_&lt;impl databend_query::sql::planner::binder::Binder&gt;::bind_join::_{{closure}} (1 samples, 0.10%)</title><rect x="0.2092%" y="421" width="0.1046%" height="15" fill="rgb(244,45,10)" fg:x="2" fg:w="1"/><text x="0.4592%" y="431.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="405" width="0.1046%" height="15" fill="rgb(207,125,25)" fg:x="2" fg:w="1"/><text x="0.4592%" y="415.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::join::JoinConditionResolver::resolve::_{{closure}} (1 samples, 0.10%)</title><rect x="0.2092%" y="389" width="0.1046%" height="15" fill="rgb(210,195,18)" fg:x="2" fg:w="1"/><text x="0.4592%" y="399.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="373" width="0.1046%" height="15" fill="rgb(249,80,12)" fg:x="2" fg:w="1"/><text x="0.4592%" y="383.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::join::JoinConditionResolver::resolve_on::_{{closure}} (1 samples, 0.10%)</title><rect x="0.2092%" y="357" width="0.1046%" height="15" fill="rgb(221,65,9)" fg:x="2" fg:w="1"/><text x="0.4592%" y="367.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="341" width="0.1046%" height="15" fill="rgb(235,49,36)" fg:x="2" fg:w="1"/><text x="0.4592%" y="351.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::scalar::ScalarBinder::bind_expr::_{{closure}} (1 samples, 0.10%)</title><rect x="0.2092%" y="325" width="0.1046%" height="15" fill="rgb(225,32,20)" fg:x="2" fg:w="1"/><text x="0.4592%" y="335.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="309" width="0.1046%" height="15" fill="rgb(215,141,46)" fg:x="2" fg:w="1"/><text x="0.4592%" y="319.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="293" width="0.1046%" height="15" fill="rgb(250,160,47)" fg:x="2" fg:w="1"/><text x="0.4592%" y="303.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve::_{{closure}} (1 samples, 0.10%)</title><rect x="0.2092%" y="277" width="0.1046%" height="15" fill="rgb(216,222,40)" fg:x="2" fg:w="1"/><text x="0.4592%" y="287.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="261" width="0.1046%" height="15" fill="rgb(234,217,39)" fg:x="2" fg:w="1"/><text x="0.4592%" y="271.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve_binary_op::_{{closure}} (1 samples, 0.10%)</title><rect x="0.2092%" y="245" width="0.1046%" height="15" fill="rgb(207,178,40)" fg:x="2" fg:w="1"/><text x="0.4592%" y="255.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="229" width="0.1046%" height="15" fill="rgb(221,136,13)" fg:x="2" fg:w="1"/><text x="0.4592%" y="239.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="213" width="0.1046%" height="15" fill="rgb(249,199,10)" fg:x="2" fg:w="1"/><text x="0.4592%" y="223.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve::_{{closure}} (1 samples, 0.10%)</title><rect x="0.2092%" y="197" width="0.1046%" height="15" fill="rgb(249,222,13)" fg:x="2" fg:w="1"/><text x="0.4592%" y="207.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="181" width="0.1046%" height="15" fill="rgb(244,185,38)" fg:x="2" fg:w="1"/><text x="0.4592%" y="191.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve_binary_op::_{{closure}} (1 samples, 0.10%)</title><rect x="0.2092%" y="165" width="0.1046%" height="15" fill="rgb(236,202,9)" fg:x="2" fg:w="1"/><text x="0.4592%" y="175.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.2092%" y="149" width="0.1046%" height="15" fill="rgb(250,229,37)" fg:x="2" fg:w="1"/><text x="0.4592%" y="159.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve_function::_{{closure}} (1 samples, 0.10%)</title><rect x="0.2092%" y="133" width="0.1046%" height="15" fill="rgb(206,174,23)" fg:x="2" fg:w="1"/><text x="0.4592%" y="143.50"></text></g><g><title>databend-query`common_functions::scalars::function_factory::FunctionFactory::get (1 samples, 0.10%)</title><rect x="0.2092%" y="117" width="0.1046%" height="15" fill="rgb(211,33,43)" fg:x="2" fg:w="1"/><text x="0.4592%" y="127.50"></text></g><g><title>databend-query`common_functions::scalars::function_adapter::FunctionAdapter::try_create (1 samples, 0.10%)</title><rect x="0.2092%" y="101" width="0.1046%" height="15" fill="rgb(245,58,50)" fg:x="2" fg:w="1"/><text x="0.4592%" y="111.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;common_datavalues::types::data_type::DataTypeImpl&gt;&gt; (1 samples, 0.10%)</title><rect x="0.2092%" y="85" width="0.1046%" height="15" fill="rgb(244,68,36)" fg:x="2" fg:w="1"/><text x="0.4592%" y="95.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;common_datavalues::types::data_type::DataTypeImpl&gt;&gt; (1 samples, 0.10%)</title><rect x="0.2092%" y="69" width="0.1046%" height="15" fill="rgb(232,229,15)" fg:x="2" fg:w="1"/><text x="0.4592%" y="79.50"></text></g><g><title>databend-query`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="0.2092%" y="53" width="0.1046%" height="15" fill="rgb(254,30,23)" fg:x="2" fg:w="1"/><text x="0.4592%" y="63.50"></text></g><g><title>databend-query`core::ptr::unique::Unique&lt;T&gt;::cast (1 samples, 0.10%)</title><rect x="0.2092%" y="37" width="0.1046%" height="15" fill="rgb(235,160,14)" fg:x="2" fg:w="1"/><text x="0.4592%" y="47.50"></text></g><g><title>databend-query`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.10%)</title><rect x="0.3138%" y="1621" width="0.1046%" height="15" fill="rgb(212,155,44)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1631.50"></text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="1605" width="0.1046%" height="15" fill="rgb(226,2,50)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1615.50"></text></g><g><title>databend-query`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.3138%" y="1589" width="0.1046%" height="15" fill="rgb(234,177,6)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1599.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Launch::launch::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="1573" width="0.1046%" height="15" fill="rgb(217,24,9)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1583.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::run (1 samples, 0.10%)</title><rect x="0.3138%" y="1557" width="0.1046%" height="15" fill="rgb(220,13,46)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1567.50"></text></g><g><title>databend-query`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (1 samples, 0.10%)</title><rect x="0.3138%" y="1541" width="0.1046%" height="15" fill="rgb(239,221,27)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1551.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::run::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="1525" width="0.1046%" height="15" fill="rgb(222,198,25)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1535.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Context::run (1 samples, 0.10%)</title><rect x="0.3138%" y="1509" width="0.1046%" height="15" fill="rgb(211,99,13)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1519.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Context::run_task (1 samples, 0.10%)</title><rect x="0.3138%" y="1493" width="0.1046%" height="15" fill="rgb(232,111,31)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1503.50"></text></g><g><title>databend-query`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.10%)</title><rect x="0.3138%" y="1477" width="0.1046%" height="15" fill="rgb(245,82,37)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1487.50"></text></g><g><title>databend-query`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.10%)</title><rect x="0.3138%" y="1461" width="0.1046%" height="15" fill="rgb(227,149,46)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1471.50"></text></g><g><title>databend-query`tokio::coop::with_budget::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="1445" width="0.1046%" height="15" fill="rgb(218,36,50)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1455.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Context::run_task::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="1429" width="0.1046%" height="15" fill="rgb(226,80,48)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1439.50"></text></g><g><title>databend-query`tokio::runtime::task::LocalNotified&lt;S&gt;::run (1 samples, 0.10%)</title><rect x="0.3138%" y="1413" width="0.1046%" height="15" fill="rgb(238,224,15)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1423.50"></text></g><g><title>databend-query`tokio::runtime::task::raw::RawTask::poll (1 samples, 0.10%)</title><rect x="0.3138%" y="1397" width="0.1046%" height="15" fill="rgb(241,136,10)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1407.50"></text></g><g><title>databend-query`tokio::runtime::task::raw::poll (1 samples, 0.10%)</title><rect x="0.3138%" y="1381" width="0.1046%" height="15" fill="rgb(208,32,45)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1391.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.10%)</title><rect x="0.3138%" y="1365" width="0.1046%" height="15" fill="rgb(207,135,9)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1375.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1 samples, 0.10%)</title><rect x="0.3138%" y="1349" width="0.1046%" height="15" fill="rgb(206,86,44)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1359.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future (1 samples, 0.10%)</title><rect x="0.3138%" y="1333" width="0.1046%" height="15" fill="rgb(245,177,15)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1343.50"></text></g><g><title>databend-query`std::panic::catch_unwind (1 samples, 0.10%)</title><rect x="0.3138%" y="1317" width="0.1046%" height="15" fill="rgb(206,64,50)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1327.50"></text></g><g><title>databend-query`std::panicking::try (1 samples, 0.10%)</title><rect x="0.3138%" y="1301" width="0.1046%" height="15" fill="rgb(234,36,40)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1311.50"></text></g><g><title>databend-query`__rust_try (1 samples, 0.10%)</title><rect x="0.3138%" y="1285" width="0.1046%" height="15" fill="rgb(213,64,8)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1295.50"></text></g><g><title>databend-query`std::panicking::try::do_call (1 samples, 0.10%)</title><rect x="0.3138%" y="1269" width="0.1046%" height="15" fill="rgb(210,75,36)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1279.50"></text></g><g><title>databend-query`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.10%)</title><rect x="0.3138%" y="1253" width="0.1046%" height="15" fill="rgb(229,88,21)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1263.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="1237" width="0.1046%" height="15" fill="rgb(252,204,47)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1247.50"></text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (1 samples, 0.10%)</title><rect x="0.3138%" y="1221" width="0.1046%" height="15" fill="rgb(208,77,27)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1231.50"></text></g><g><title>databend-query`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.10%)</title><rect x="0.3138%" y="1205" width="0.1046%" height="15" fill="rgb(221,76,26)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1215.50"></text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="1189" width="0.1046%" height="15" fill="rgb(225,139,18)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1199.50"></text></g><g><title>databend-query`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.3138%" y="1173" width="0.1046%" height="15" fill="rgb(230,137,11)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1183.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.3138%" y="1157" width="0.1046%" height="15" fill="rgb(212,28,1)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1167.50"></text></g><g><title>databend-query`databend_query::servers::mysql::mysql_interactive_worker::InteractiveWorkerBase&lt;W&gt;::exec_query::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="1141" width="0.1046%" height="15" fill="rgb(248,164,17)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1151.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.3138%" y="1125" width="0.1046%" height="15" fill="rgb(222,171,42)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1135.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.3138%" y="1109" width="0.1046%" height="15" fill="rgb(243,84,45)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1119.50"></text></g><g><title>databend-query`&lt;databend_query::interpreters::interpreter_select_v2::SelectInterpreterV2 as databend_query::interpreters::interpreter::Interpreter&gt;::execute::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="1093" width="0.1046%" height="15" fill="rgb(252,49,23)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1103.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.3138%" y="1077" width="0.1046%" height="15" fill="rgb(215,19,7)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1087.50"></text></g><g><title>databend-query`&lt;databend_query::interpreters::interpreter_select_v2::SelectInterpreterV2 as databend_query::interpreters::interpreter::Interpreter&gt;::execute::_{{closure}}::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="1061" width="0.1046%" height="15" fill="rgb(238,81,41)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1071.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.3138%" y="1045" width="0.1046%" height="15" fill="rgb(210,199,37)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1055.50"></text></g><g><title>databend-query`databend_query::sql::planner::Planner::plan_sql::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="1029" width="0.1046%" height="15" fill="rgb(244,192,49)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1039.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.3138%" y="1013" width="0.1046%" height="15" fill="rgb(226,211,11)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1023.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::Binder::bind::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="997" width="0.1046%" height="15" fill="rgb(236,162,54)" fg:x="3" fg:w="1"/><text x="0.5638%" y="1007.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.3138%" y="981" width="0.1046%" height="15" fill="rgb(220,229,9)" fg:x="3" fg:w="1"/><text x="0.5638%" y="991.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::Binder::bind_statement::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="965" width="0.1046%" height="15" fill="rgb(250,87,22)" fg:x="3" fg:w="1"/><text x="0.5638%" y="975.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.3138%" y="949" width="0.1046%" height="15" fill="rgb(239,43,17)" fg:x="3" fg:w="1"/><text x="0.5638%" y="959.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.3138%" y="933" width="0.1046%" height="15" fill="rgb(231,177,25)" fg:x="3" fg:w="1"/><text x="0.5638%" y="943.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::select::_&lt;impl databend_query::sql::planner::binder::Binder&gt;::bind_query::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="917" width="0.1046%" height="15" fill="rgb(219,179,1)" fg:x="3" fg:w="1"/><text x="0.5638%" y="927.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.3138%" y="901" width="0.1046%" height="15" fill="rgb(238,219,53)" fg:x="3" fg:w="1"/><text x="0.5638%" y="911.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::select::_&lt;impl databend_query::sql::planner::binder::Binder&gt;::bind_select_stmt::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="885" width="0.1046%" height="15" fill="rgb(232,167,36)" fg:x="3" fg:w="1"/><text x="0.5638%" y="895.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.3138%" y="869" width="0.1046%" height="15" fill="rgb(244,19,51)" fg:x="3" fg:w="1"/><text x="0.5638%" y="879.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::select::_&lt;impl databend_query::sql::planner::binder::Binder&gt;::bind_table_reference::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="853" width="0.1046%" height="15" fill="rgb(224,6,22)" fg:x="3" fg:w="1"/><text x="0.5638%" y="863.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.3138%" y="837" width="0.1046%" height="15" fill="rgb(224,145,5)" fg:x="3" fg:w="1"/><text x="0.5638%" y="847.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.3138%" y="821" width="0.1046%" height="15" fill="rgb(234,130,49)" fg:x="3" fg:w="1"/><text x="0.5638%" y="831.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::join::_&lt;impl databend_query::sql::planner::binder::Binder&gt;::bind_join::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="805" width="0.1046%" height="15" fill="rgb(254,6,2)" fg:x="3" fg:w="1"/><text x="0.5638%" y="815.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.3138%" y="789" width="0.1046%" height="15" fill="rgb(208,96,46)" fg:x="3" fg:w="1"/><text x="0.5638%" y="799.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::join::JoinConditionResolver::resolve::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="773" width="0.1046%" height="15" fill="rgb(239,3,39)" fg:x="3" fg:w="1"/><text x="0.5638%" y="783.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.3138%" y="757" width="0.1046%" height="15" fill="rgb(233,210,1)" fg:x="3" fg:w="1"/><text x="0.5638%" y="767.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::join::JoinConditionResolver::resolve_on::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="741" width="0.1046%" height="15" fill="rgb(244,137,37)" fg:x="3" fg:w="1"/><text x="0.5638%" y="751.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.3138%" y="725" width="0.1046%" height="15" fill="rgb(240,136,2)" fg:x="3" fg:w="1"/><text x="0.5638%" y="735.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::scalar::ScalarBinder::bind_expr::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="709" width="0.1046%" height="15" fill="rgb(239,18,37)" fg:x="3" fg:w="1"/><text x="0.5638%" y="719.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.3138%" y="693" width="0.1046%" height="15" fill="rgb(218,185,22)" fg:x="3" fg:w="1"/><text x="0.5638%" y="703.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.3138%" y="677" width="0.1046%" height="15" fill="rgb(225,218,4)" fg:x="3" fg:w="1"/><text x="0.5638%" y="687.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="661" width="0.1046%" height="15" fill="rgb(230,182,32)" fg:x="3" fg:w="1"/><text x="0.5638%" y="671.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.3138%" y="645" width="0.1046%" height="15" fill="rgb(242,56,43)" fg:x="3" fg:w="1"/><text x="0.5638%" y="655.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve_binary_op::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="629" width="0.1046%" height="15" fill="rgb(233,99,24)" fg:x="3" fg:w="1"/><text x="0.5638%" y="639.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.3138%" y="613" width="0.1046%" height="15" fill="rgb(234,209,42)" fg:x="3" fg:w="1"/><text x="0.5638%" y="623.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.3138%" y="597" width="0.1046%" height="15" fill="rgb(227,7,12)" fg:x="3" fg:w="1"/><text x="0.5638%" y="607.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="581" width="0.1046%" height="15" fill="rgb(245,203,43)" fg:x="3" fg:w="1"/><text x="0.5638%" y="591.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.3138%" y="565" width="0.1046%" height="15" fill="rgb(238,205,33)" fg:x="3" fg:w="1"/><text x="0.5638%" y="575.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve_binary_op::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="549" width="0.1046%" height="15" fill="rgb(231,56,7)" fg:x="3" fg:w="1"/><text x="0.5638%" y="559.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.3138%" y="533" width="0.1046%" height="15" fill="rgb(244,186,29)" fg:x="3" fg:w="1"/><text x="0.5638%" y="543.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve_function::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="517" width="0.1046%" height="15" fill="rgb(234,111,31)" fg:x="3" fg:w="1"/><text x="0.5638%" y="527.50"></text></g><g><title>databend-query`common_functions::scalars::function_factory::FunctionFactory::instance (1 samples, 0.10%)</title><rect x="0.3138%" y="501" width="0.1046%" height="15" fill="rgb(241,149,10)" fg:x="3" fg:w="1"/><text x="0.5638%" y="511.50"></text></g><g><title>databend-query`&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="0.3138%" y="485" width="0.1046%" height="15" fill="rgb(249,206,44)" fg:x="3" fg:w="1"/><text x="0.5638%" y="495.50"></text></g><g><title>databend-query`once_cell::sync::Lazy&lt;T,F&gt;::force (1 samples, 0.10%)</title><rect x="0.3138%" y="469" width="0.1046%" height="15" fill="rgb(251,153,30)" fg:x="3" fg:w="1"/><text x="0.5638%" y="479.50"></text></g><g><title>databend-query`once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.10%)</title><rect x="0.3138%" y="453" width="0.1046%" height="15" fill="rgb(239,152,38)" fg:x="3" fg:w="1"/><text x="0.5638%" y="463.50"></text></g><g><title>databend-query`once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.10%)</title><rect x="0.3138%" y="437" width="0.1046%" height="15" fill="rgb(249,139,47)" fg:x="3" fg:w="1"/><text x="0.5638%" y="447.50"></text></g><g><title>databend-query`once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.10%)</title><rect x="0.3138%" y="421" width="0.1046%" height="15" fill="rgb(244,64,35)" fg:x="3" fg:w="1"/><text x="0.5638%" y="431.50"></text></g><g><title>databend-query`once_cell::imp::initialize_inner (1 samples, 0.10%)</title><rect x="0.3138%" y="405" width="0.1046%" height="15" fill="rgb(216,46,15)" fg:x="3" fg:w="1"/><text x="0.5638%" y="415.50"></text></g><g><title>databend-query`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="389" width="0.1046%" height="15" fill="rgb(250,74,19)" fg:x="3" fg:w="1"/><text x="0.5638%" y="399.50"></text></g><g><title>databend-query`once_cell::sync::OnceCell&lt;T&gt;::get_or_init::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="373" width="0.1046%" height="15" fill="rgb(249,42,33)" fg:x="3" fg:w="1"/><text x="0.5638%" y="383.50"></text></g><g><title>databend-query`once_cell::sync::Lazy&lt;T,F&gt;::force::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="357" width="0.1046%" height="15" fill="rgb(242,149,17)" fg:x="3" fg:w="1"/><text x="0.5638%" y="367.50"></text></g><g><title>databend-query`core::ops::function::FnOnce::call_once (1 samples, 0.10%)</title><rect x="0.3138%" y="341" width="0.1046%" height="15" fill="rgb(244,29,21)" fg:x="3" fg:w="1"/><text x="0.5638%" y="351.50"></text></g><g><title>databend-query`core::ops::function::FnOnce::call_once (1 samples, 0.10%)</title><rect x="0.3138%" y="325" width="0.1046%" height="15" fill="rgb(220,130,37)" fg:x="3" fg:w="1"/><text x="0.5638%" y="335.50"></text></g><g><title>databend-query`common_functions::scalars::function_factory::FUNCTION_FACTORY::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="309" width="0.1046%" height="15" fill="rgb(211,67,2)" fg:x="3" fg:w="1"/><text x="0.5638%" y="319.50"></text></g><g><title>databend-query`common_functions::scalars::expressions::expression::ToCastFunction::register (1 samples, 0.10%)</title><rect x="0.3138%" y="293" width="0.1046%" height="15" fill="rgb(235,68,52)" fg:x="3" fg:w="1"/><text x="0.5638%" y="303.50"></text></g><g><title>databend-query`common_datavalues::types::type_factory::TypeFactory::instance (1 samples, 0.10%)</title><rect x="0.3138%" y="277" width="0.1046%" height="15" fill="rgb(246,142,3)" fg:x="3" fg:w="1"/><text x="0.5638%" y="287.50"></text></g><g><title>databend-query`&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="0.3138%" y="261" width="0.1046%" height="15" fill="rgb(241,25,7)" fg:x="3" fg:w="1"/><text x="0.5638%" y="271.50"></text></g><g><title>databend-query`once_cell::sync::Lazy&lt;T,F&gt;::force (1 samples, 0.10%)</title><rect x="0.3138%" y="245" width="0.1046%" height="15" fill="rgb(242,119,39)" fg:x="3" fg:w="1"/><text x="0.5638%" y="255.50"></text></g><g><title>databend-query`once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.10%)</title><rect x="0.3138%" y="229" width="0.1046%" height="15" fill="rgb(241,98,45)" fg:x="3" fg:w="1"/><text x="0.5638%" y="239.50"></text></g><g><title>databend-query`once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.10%)</title><rect x="0.3138%" y="213" width="0.1046%" height="15" fill="rgb(254,28,30)" fg:x="3" fg:w="1"/><text x="0.5638%" y="223.50"></text></g><g><title>databend-query`once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.10%)</title><rect x="0.3138%" y="197" width="0.1046%" height="15" fill="rgb(241,142,54)" fg:x="3" fg:w="1"/><text x="0.5638%" y="207.50"></text></g><g><title>databend-query`once_cell::imp::initialize_inner (1 samples, 0.10%)</title><rect x="0.3138%" y="181" width="0.1046%" height="15" fill="rgb(222,85,15)" fg:x="3" fg:w="1"/><text x="0.5638%" y="191.50"></text></g><g><title>databend-query`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="165" width="0.1046%" height="15" fill="rgb(210,85,47)" fg:x="3" fg:w="1"/><text x="0.5638%" y="175.50"></text></g><g><title>databend-query`once_cell::sync::OnceCell&lt;T&gt;::get_or_init::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="149" width="0.1046%" height="15" fill="rgb(224,206,25)" fg:x="3" fg:w="1"/><text x="0.5638%" y="159.50"></text></g><g><title>databend-query`once_cell::sync::Lazy&lt;T,F&gt;::force::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="133" width="0.1046%" height="15" fill="rgb(243,201,19)" fg:x="3" fg:w="1"/><text x="0.5638%" y="143.50"></text></g><g><title>databend-query`core::ops::function::FnOnce::call_once (1 samples, 0.10%)</title><rect x="0.3138%" y="117" width="0.1046%" height="15" fill="rgb(236,59,4)" fg:x="3" fg:w="1"/><text x="0.5638%" y="127.50"></text></g><g><title>databend-query`core::ops::function::FnOnce::call_once (1 samples, 0.10%)</title><rect x="0.3138%" y="101" width="0.1046%" height="15" fill="rgb(254,179,45)" fg:x="3" fg:w="1"/><text x="0.5638%" y="111.50"></text></g><g><title>databend-query`common_datavalues::types::type_factory::TYPE_FACTORY::_{{closure}} (1 samples, 0.10%)</title><rect x="0.3138%" y="85" width="0.1046%" height="15" fill="rgb(226,14,10)" fg:x="3" fg:w="1"/><text x="0.5638%" y="95.50"></text></g><g><title>databend-query`common_datavalues::types::type_factory::TypeFactory::add_nullable_wrapper (1 samples, 0.10%)</title><rect x="0.3138%" y="69" width="0.1046%" height="15" fill="rgb(244,27,41)" fg:x="3" fg:w="1"/><text x="0.5638%" y="79.50"></text></g><g><title>databend-query`common_datavalues::types::type_nullable::NullableType::new_impl (1 samples, 0.10%)</title><rect x="0.3138%" y="53" width="0.1046%" height="15" fill="rgb(235,35,32)" fg:x="3" fg:w="1"/><text x="0.5638%" y="63.50"></text></g><g><title>databend-query`common_datavalues::types::type_nullable::NullableType::create (1 samples, 0.10%)</title><rect x="0.3138%" y="37" width="0.1046%" height="15" fill="rgb(218,68,31)" fg:x="3" fg:w="1"/><text x="0.5638%" y="47.50"></text></g><g><title>databend-query`tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (1 samples, 0.10%)</title><rect x="0.4184%" y="1621" width="0.1046%" height="15" fill="rgb(207,120,37)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1631.50"></text></g><g><title>databend-query`tokio::runtime::blocking::pool::Inner::run (1 samples, 0.10%)</title><rect x="0.4184%" y="1605" width="0.1046%" height="15" fill="rgb(227,98,0)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1615.50"></text></g><g><title>databend-query`tokio::runtime::blocking::pool::Task::run (1 samples, 0.10%)</title><rect x="0.4184%" y="1589" width="0.1046%" height="15" fill="rgb(207,7,3)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1599.50"></text></g><g><title>databend-query`tokio::runtime::task::UnownedTask&lt;S&gt;::run (1 samples, 0.10%)</title><rect x="0.4184%" y="1573" width="0.1046%" height="15" fill="rgb(206,98,19)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1583.50"></text></g><g><title>databend-query`tokio::runtime::task::raw::RawTask::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="1557" width="0.1046%" height="15" fill="rgb(217,5,26)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1567.50"></text></g><g><title>databend-query`tokio::runtime::task::raw::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="1541" width="0.1046%" height="15" fill="rgb(235,190,38)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1551.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="1525" width="0.1046%" height="15" fill="rgb(247,86,24)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1535.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1 samples, 0.10%)</title><rect x="0.4184%" y="1509" width="0.1046%" height="15" fill="rgb(205,101,16)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1519.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future (1 samples, 0.10%)</title><rect x="0.4184%" y="1493" width="0.1046%" height="15" fill="rgb(246,168,33)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1503.50"></text></g><g><title>databend-query`std::panic::catch_unwind (1 samples, 0.10%)</title><rect x="0.4184%" y="1477" width="0.1046%" height="15" fill="rgb(231,114,1)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1487.50"></text></g><g><title>databend-query`std::panicking::try (1 samples, 0.10%)</title><rect x="0.4184%" y="1461" width="0.1046%" height="15" fill="rgb(207,184,53)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1471.50"></text></g><g><title>databend-query`__rust_try (1 samples, 0.10%)</title><rect x="0.4184%" y="1445" width="0.1046%" height="15" fill="rgb(224,95,51)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1455.50"></text></g><g><title>databend-query`std::panicking::try::do_call (1 samples, 0.10%)</title><rect x="0.4184%" y="1429" width="0.1046%" height="15" fill="rgb(212,188,45)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1439.50"></text></g><g><title>databend-query`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.10%)</title><rect x="0.4184%" y="1413" width="0.1046%" height="15" fill="rgb(223,154,38)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1423.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future::_{{closure}} (1 samples, 0.10%)</title><rect x="0.4184%" y="1397" width="0.1046%" height="15" fill="rgb(251,22,52)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1407.50"></text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="1381" width="0.1046%" height="15" fill="rgb(229,209,22)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1391.50"></text></g><g><title>databend-query`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.10%)</title><rect x="0.4184%" y="1365" width="0.1046%" height="15" fill="rgb(234,138,34)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1375.50"></text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (1 samples, 0.10%)</title><rect x="0.4184%" y="1349" width="0.1046%" height="15" fill="rgb(212,95,11)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1359.50"></text></g><g><title>databend-query`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="1333" width="0.1046%" height="15" fill="rgb(240,179,47)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1343.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Launch::launch::_{{closure}} (1 samples, 0.10%)</title><rect x="0.4184%" y="1317" width="0.1046%" height="15" fill="rgb(240,163,11)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1327.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::run (1 samples, 0.10%)</title><rect x="0.4184%" y="1301" width="0.1046%" height="15" fill="rgb(236,37,12)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1311.50"></text></g><g><title>databend-query`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (1 samples, 0.10%)</title><rect x="0.4184%" y="1285" width="0.1046%" height="15" fill="rgb(232,164,16)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1295.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::run::_{{closure}} (1 samples, 0.10%)</title><rect x="0.4184%" y="1269" width="0.1046%" height="15" fill="rgb(244,205,15)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1279.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Context::run (1 samples, 0.10%)</title><rect x="0.4184%" y="1253" width="0.1046%" height="15" fill="rgb(223,117,47)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1263.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Context::run_task (1 samples, 0.10%)</title><rect x="0.4184%" y="1237" width="0.1046%" height="15" fill="rgb(244,107,35)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1247.50"></text></g><g><title>databend-query`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.10%)</title><rect x="0.4184%" y="1221" width="0.1046%" height="15" fill="rgb(205,140,8)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1231.50"></text></g><g><title>databend-query`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.10%)</title><rect x="0.4184%" y="1205" width="0.1046%" height="15" fill="rgb(228,84,46)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1215.50"></text></g><g><title>databend-query`tokio::coop::with_budget::_{{closure}} (1 samples, 0.10%)</title><rect x="0.4184%" y="1189" width="0.1046%" height="15" fill="rgb(254,188,9)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1199.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Context::run_task::_{{closure}} (1 samples, 0.10%)</title><rect x="0.4184%" y="1173" width="0.1046%" height="15" fill="rgb(206,112,54)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1183.50"></text></g><g><title>databend-query`tokio::runtime::task::LocalNotified&lt;S&gt;::run (1 samples, 0.10%)</title><rect x="0.4184%" y="1157" width="0.1046%" height="15" fill="rgb(216,84,49)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1167.50"></text></g><g><title>databend-query`tokio::runtime::task::raw::RawTask::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="1141" width="0.1046%" height="15" fill="rgb(214,194,35)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1151.50"></text></g><g><title>databend-query`tokio::runtime::task::raw::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="1125" width="0.1046%" height="15" fill="rgb(249,28,3)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1135.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="1109" width="0.1046%" height="15" fill="rgb(222,56,52)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1119.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1 samples, 0.10%)</title><rect x="0.4184%" y="1093" width="0.1046%" height="15" fill="rgb(245,217,50)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1103.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future (1 samples, 0.10%)</title><rect x="0.4184%" y="1077" width="0.1046%" height="15" fill="rgb(213,201,24)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1087.50"></text></g><g><title>databend-query`std::panic::catch_unwind (1 samples, 0.10%)</title><rect x="0.4184%" y="1061" width="0.1046%" height="15" fill="rgb(248,116,28)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1071.50"></text></g><g><title>databend-query`std::panicking::try (1 samples, 0.10%)</title><rect x="0.4184%" y="1045" width="0.1046%" height="15" fill="rgb(219,72,43)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1055.50"></text></g><g><title>databend-query`__rust_try (1 samples, 0.10%)</title><rect x="0.4184%" y="1029" width="0.1046%" height="15" fill="rgb(209,138,14)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1039.50"></text></g><g><title>databend-query`std::panicking::try::do_call (1 samples, 0.10%)</title><rect x="0.4184%" y="1013" width="0.1046%" height="15" fill="rgb(222,18,33)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1023.50"></text></g><g><title>databend-query`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.10%)</title><rect x="0.4184%" y="997" width="0.1046%" height="15" fill="rgb(213,199,7)" fg:x="4" fg:w="1"/><text x="0.6684%" y="1007.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future::_{{closure}} (1 samples, 0.10%)</title><rect x="0.4184%" y="981" width="0.1046%" height="15" fill="rgb(250,110,10)" fg:x="4" fg:w="1"/><text x="0.6684%" y="991.50"></text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="965" width="0.1046%" height="15" fill="rgb(248,123,6)" fg:x="4" fg:w="1"/><text x="0.6684%" y="975.50"></text></g><g><title>databend-query`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.10%)</title><rect x="0.4184%" y="949" width="0.1046%" height="15" fill="rgb(206,91,31)" fg:x="4" fg:w="1"/><text x="0.6684%" y="959.50"></text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (1 samples, 0.10%)</title><rect x="0.4184%" y="933" width="0.1046%" height="15" fill="rgb(211,154,13)" fg:x="4" fg:w="1"/><text x="0.6684%" y="943.50"></text></g><g><title>databend-query`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="917" width="0.1046%" height="15" fill="rgb(225,148,7)" fg:x="4" fg:w="1"/><text x="0.6684%" y="927.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="901" width="0.1046%" height="15" fill="rgb(220,160,43)" fg:x="4" fg:w="1"/><text x="0.6684%" y="911.50"></text></g><g><title>databend-query`databend_query::servers::mysql::mysql_interactive_worker::InteractiveWorkerBase&lt;W&gt;::exec_query::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.10%)</title><rect x="0.4184%" y="885" width="0.1046%" height="15" fill="rgb(213,52,39)" fg:x="4" fg:w="1"/><text x="0.6684%" y="895.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="869" width="0.1046%" height="15" fill="rgb(243,137,7)" fg:x="4" fg:w="1"/><text x="0.6684%" y="879.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="853" width="0.1046%" height="15" fill="rgb(230,79,13)" fg:x="4" fg:w="1"/><text x="0.6684%" y="863.50"></text></g><g><title>databend-query`&lt;databend_query::interpreters::interpreter_select_v2::SelectInterpreterV2 as databend_query::interpreters::interpreter::Interpreter&gt;::execute::_{{closure}} (1 samples, 0.10%)</title><rect x="0.4184%" y="837" width="0.1046%" height="15" fill="rgb(247,105,23)" fg:x="4" fg:w="1"/><text x="0.6684%" y="847.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="821" width="0.1046%" height="15" fill="rgb(223,179,41)" fg:x="4" fg:w="1"/><text x="0.6684%" y="831.50"></text></g><g><title>databend-query`&lt;databend_query::interpreters::interpreter_select_v2::SelectInterpreterV2 as databend_query::interpreters::interpreter::Interpreter&gt;::execute::_{{closure}}::_{{closure}} (1 samples, 0.10%)</title><rect x="0.4184%" y="805" width="0.1046%" height="15" fill="rgb(218,9,34)" fg:x="4" fg:w="1"/><text x="0.6684%" y="815.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="789" width="0.1046%" height="15" fill="rgb(222,106,8)" fg:x="4" fg:w="1"/><text x="0.6684%" y="799.50"></text></g><g><title>databend-query`databend_query::sql::planner::Planner::plan_sql::_{{closure}} (1 samples, 0.10%)</title><rect x="0.4184%" y="773" width="0.1046%" height="15" fill="rgb(211,220,0)" fg:x="4" fg:w="1"/><text x="0.6684%" y="783.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="757" width="0.1046%" height="15" fill="rgb(229,52,16)" fg:x="4" fg:w="1"/><text x="0.6684%" y="767.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::Binder::bind::_{{closure}} (1 samples, 0.10%)</title><rect x="0.4184%" y="741" width="0.1046%" height="15" fill="rgb(212,155,18)" fg:x="4" fg:w="1"/><text x="0.6684%" y="751.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="725" width="0.1046%" height="15" fill="rgb(242,21,14)" fg:x="4" fg:w="1"/><text x="0.6684%" y="735.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::Binder::bind_statement::_{{closure}} (1 samples, 0.10%)</title><rect x="0.4184%" y="709" width="0.1046%" height="15" fill="rgb(222,19,48)" fg:x="4" fg:w="1"/><text x="0.6684%" y="719.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="693" width="0.1046%" height="15" fill="rgb(232,45,27)" fg:x="4" fg:w="1"/><text x="0.6684%" y="703.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="677" width="0.1046%" height="15" fill="rgb(249,103,42)" fg:x="4" fg:w="1"/><text x="0.6684%" y="687.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::select::_&lt;impl databend_query::sql::planner::binder::Binder&gt;::bind_query::_{{closure}} (1 samples, 0.10%)</title><rect x="0.4184%" y="661" width="0.1046%" height="15" fill="rgb(246,81,33)" fg:x="4" fg:w="1"/><text x="0.6684%" y="671.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="645" width="0.1046%" height="15" fill="rgb(252,33,42)" fg:x="4" fg:w="1"/><text x="0.6684%" y="655.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::select::_&lt;impl databend_query::sql::planner::binder::Binder&gt;::bind_select_stmt::_{{closure}} (1 samples, 0.10%)</title><rect x="0.4184%" y="629" width="0.1046%" height="15" fill="rgb(209,212,41)" fg:x="4" fg:w="1"/><text x="0.6684%" y="639.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="613" width="0.1046%" height="15" fill="rgb(207,154,6)" fg:x="4" fg:w="1"/><text x="0.6684%" y="623.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::select::_&lt;impl databend_query::sql::planner::binder::Binder&gt;::bind_table_reference::_{{closure}} (1 samples, 0.10%)</title><rect x="0.4184%" y="597" width="0.1046%" height="15" fill="rgb(223,64,47)" fg:x="4" fg:w="1"/><text x="0.6684%" y="607.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="581" width="0.1046%" height="15" fill="rgb(211,161,38)" fg:x="4" fg:w="1"/><text x="0.6684%" y="591.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="565" width="0.1046%" height="15" fill="rgb(219,138,40)" fg:x="4" fg:w="1"/><text x="0.6684%" y="575.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::join::_&lt;impl databend_query::sql::planner::binder::Binder&gt;::bind_join::_{{closure}} (1 samples, 0.10%)</title><rect x="0.4184%" y="549" width="0.1046%" height="15" fill="rgb(241,228,46)" fg:x="4" fg:w="1"/><text x="0.6684%" y="559.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="533" width="0.1046%" height="15" fill="rgb(223,209,38)" fg:x="4" fg:w="1"/><text x="0.6684%" y="543.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::join::JoinConditionResolver::resolve::_{{closure}} (1 samples, 0.10%)</title><rect x="0.4184%" y="517" width="0.1046%" height="15" fill="rgb(236,164,45)" fg:x="4" fg:w="1"/><text x="0.6684%" y="527.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="501" width="0.1046%" height="15" fill="rgb(231,15,5)" fg:x="4" fg:w="1"/><text x="0.6684%" y="511.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::join::JoinConditionResolver::resolve_on::_{{closure}} (1 samples, 0.10%)</title><rect x="0.4184%" y="485" width="0.1046%" height="15" fill="rgb(252,35,15)" fg:x="4" fg:w="1"/><text x="0.6684%" y="495.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="469" width="0.1046%" height="15" fill="rgb(248,181,18)" fg:x="4" fg:w="1"/><text x="0.6684%" y="479.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::scalar::ScalarBinder::bind_expr::_{{closure}} (1 samples, 0.10%)</title><rect x="0.4184%" y="453" width="0.1046%" height="15" fill="rgb(233,39,42)" fg:x="4" fg:w="1"/><text x="0.6684%" y="463.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="437" width="0.1046%" height="15" fill="rgb(238,110,33)" fg:x="4" fg:w="1"/><text x="0.6684%" y="447.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="421" width="0.1046%" height="15" fill="rgb(233,195,10)" fg:x="4" fg:w="1"/><text x="0.6684%" y="431.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve::_{{closure}} (1 samples, 0.10%)</title><rect x="0.4184%" y="405" width="0.1046%" height="15" fill="rgb(254,105,3)" fg:x="4" fg:w="1"/><text x="0.6684%" y="415.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="389" width="0.1046%" height="15" fill="rgb(221,225,9)" fg:x="4" fg:w="1"/><text x="0.6684%" y="399.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve_binary_op::_{{closure}} (1 samples, 0.10%)</title><rect x="0.4184%" y="373" width="0.1046%" height="15" fill="rgb(224,227,45)" fg:x="4" fg:w="1"/><text x="0.6684%" y="383.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="357" width="0.1046%" height="15" fill="rgb(229,198,43)" fg:x="4" fg:w="1"/><text x="0.6684%" y="367.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="341" width="0.1046%" height="15" fill="rgb(206,209,35)" fg:x="4" fg:w="1"/><text x="0.6684%" y="351.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve::_{{closure}} (1 samples, 0.10%)</title><rect x="0.4184%" y="325" width="0.1046%" height="15" fill="rgb(245,195,53)" fg:x="4" fg:w="1"/><text x="0.6684%" y="335.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="309" width="0.1046%" height="15" fill="rgb(240,92,26)" fg:x="4" fg:w="1"/><text x="0.6684%" y="319.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve_binary_op::_{{closure}} (1 samples, 0.10%)</title><rect x="0.4184%" y="293" width="0.1046%" height="15" fill="rgb(207,40,23)" fg:x="4" fg:w="1"/><text x="0.6684%" y="303.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.4184%" y="277" width="0.1046%" height="15" fill="rgb(223,111,35)" fg:x="4" fg:w="1"/><text x="0.6684%" y="287.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve_function::_{{closure}} (1 samples, 0.10%)</title><rect x="0.4184%" y="261" width="0.1046%" height="15" fill="rgb(229,147,28)" fg:x="4" fg:w="1"/><text x="0.6684%" y="271.50"></text></g><g><title>databend-query`common_functions::scalars::function_factory::FunctionFactory::instance (1 samples, 0.10%)</title><rect x="0.4184%" y="245" width="0.1046%" height="15" fill="rgb(211,29,28)" fg:x="4" fg:w="1"/><text x="0.6684%" y="255.50"></text></g><g><title>databend-query`&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="0.4184%" y="229" width="0.1046%" height="15" fill="rgb(228,72,33)" fg:x="4" fg:w="1"/><text x="0.6684%" y="239.50"></text></g><g><title>databend-query`once_cell::sync::Lazy&lt;T,F&gt;::force (1 samples, 0.10%)</title><rect x="0.4184%" y="213" width="0.1046%" height="15" fill="rgb(205,214,31)" fg:x="4" fg:w="1"/><text x="0.6684%" y="223.50"></text></g><g><title>databend-query`once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.10%)</title><rect x="0.4184%" y="197" width="0.1046%" height="15" fill="rgb(224,111,15)" fg:x="4" fg:w="1"/><text x="0.6684%" y="207.50"></text></g><g><title>databend-query`once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.10%)</title><rect x="0.4184%" y="181" width="0.1046%" height="15" fill="rgb(253,21,26)" fg:x="4" fg:w="1"/><text x="0.6684%" y="191.50"></text></g><g><title>databend-query`once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.10%)</title><rect x="0.4184%" y="165" width="0.1046%" height="15" fill="rgb(245,139,43)" fg:x="4" fg:w="1"/><text x="0.6684%" y="175.50"></text></g><g><title>databend-query`once_cell::imp::initialize_inner (1 samples, 0.10%)</title><rect x="0.4184%" y="149" width="0.1046%" height="15" fill="rgb(252,170,7)" fg:x="4" fg:w="1"/><text x="0.6684%" y="159.50"></text></g><g><title>databend-query`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (1 samples, 0.10%)</title><rect x="0.4184%" y="133" width="0.1046%" height="15" fill="rgb(231,118,14)" fg:x="4" fg:w="1"/><text x="0.6684%" y="143.50"></text></g><g><title>databend-query`once_cell::sync::OnceCell&lt;T&gt;::get_or_init::_{{closure}} (1 samples, 0.10%)</title><rect x="0.4184%" y="117" width="0.1046%" height="15" fill="rgb(238,83,0)" fg:x="4" fg:w="1"/><text x="0.6684%" y="127.50"></text></g><g><title>databend-query`once_cell::sync::Lazy&lt;T,F&gt;::force::_{{closure}} (1 samples, 0.10%)</title><rect x="0.4184%" y="101" width="0.1046%" height="15" fill="rgb(221,39,39)" fg:x="4" fg:w="1"/><text x="0.6684%" y="111.50"></text></g><g><title>databend-query`core::ops::function::FnOnce::call_once (1 samples, 0.10%)</title><rect x="0.4184%" y="85" width="0.1046%" height="15" fill="rgb(222,119,46)" fg:x="4" fg:w="1"/><text x="0.6684%" y="95.50"></text></g><g><title>databend-query`core::ops::function::FnOnce::call_once (1 samples, 0.10%)</title><rect x="0.4184%" y="69" width="0.1046%" height="15" fill="rgb(222,165,49)" fg:x="4" fg:w="1"/><text x="0.6684%" y="79.50"></text></g><g><title>databend-query`common_functions::scalars::function_factory::FUNCTION_FACTORY::_{{closure}} (1 samples, 0.10%)</title><rect x="0.4184%" y="53" width="0.1046%" height="15" fill="rgb(219,113,52)" fg:x="4" fg:w="1"/><text x="0.6684%" y="63.50"></text></g><g><title>databend-query`common_functions::scalars::arithmetics::arithmetic_intdiv::ArithmeticIntDivFunction::desc (1 samples, 0.10%)</title><rect x="0.4184%" y="37" width="0.1046%" height="15" fill="rgb(214,7,15)" fg:x="4" fg:w="1"/><text x="0.6684%" y="47.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.10%)</title><rect x="0.5230%" y="1621" width="0.1046%" height="15" fill="rgb(235,32,4)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1631.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1 samples, 0.10%)</title><rect x="0.5230%" y="1605" width="0.1046%" height="15" fill="rgb(238,90,54)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1615.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future (1 samples, 0.10%)</title><rect x="0.5230%" y="1589" width="0.1046%" height="15" fill="rgb(213,208,19)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1599.50"></text></g><g><title>databend-query`std::panic::catch_unwind (1 samples, 0.10%)</title><rect x="0.5230%" y="1573" width="0.1046%" height="15" fill="rgb(233,156,4)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1583.50"></text></g><g><title>databend-query`std::panicking::try (1 samples, 0.10%)</title><rect x="0.5230%" y="1557" width="0.1046%" height="15" fill="rgb(207,194,5)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1567.50"></text></g><g><title>databend-query`__rust_try (1 samples, 0.10%)</title><rect x="0.5230%" y="1541" width="0.1046%" height="15" fill="rgb(206,111,30)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1551.50"></text></g><g><title>databend-query`std::panicking::try::do_call (1 samples, 0.10%)</title><rect x="0.5230%" y="1525" width="0.1046%" height="15" fill="rgb(243,70,54)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1535.50"></text></g><g><title>databend-query`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.10%)</title><rect x="0.5230%" y="1509" width="0.1046%" height="15" fill="rgb(242,28,8)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1519.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future::_{{closure}} (1 samples, 0.10%)</title><rect x="0.5230%" y="1493" width="0.1046%" height="15" fill="rgb(219,106,18)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1503.50"></text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (1 samples, 0.10%)</title><rect x="0.5230%" y="1477" width="0.1046%" height="15" fill="rgb(244,222,10)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1487.50"></text></g><g><title>databend-query`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.10%)</title><rect x="0.5230%" y="1461" width="0.1046%" height="15" fill="rgb(236,179,52)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1471.50"></text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (1 samples, 0.10%)</title><rect x="0.5230%" y="1445" width="0.1046%" height="15" fill="rgb(213,23,39)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1455.50"></text></g><g><title>databend-query`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.5230%" y="1429" width="0.1046%" height="15" fill="rgb(238,48,10)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1439.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Launch::launch::_{{closure}} (1 samples, 0.10%)</title><rect x="0.5230%" y="1413" width="0.1046%" height="15" fill="rgb(251,196,23)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1423.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::run (1 samples, 0.10%)</title><rect x="0.5230%" y="1397" width="0.1046%" height="15" fill="rgb(250,152,24)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1407.50"></text></g><g><title>databend-query`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (1 samples, 0.10%)</title><rect x="0.5230%" y="1381" width="0.1046%" height="15" fill="rgb(209,150,17)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1391.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::run::_{{closure}} (1 samples, 0.10%)</title><rect x="0.5230%" y="1365" width="0.1046%" height="15" fill="rgb(234,202,34)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1375.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Context::run (1 samples, 0.10%)</title><rect x="0.5230%" y="1349" width="0.1046%" height="15" fill="rgb(253,148,53)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1359.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Context::run_task (1 samples, 0.10%)</title><rect x="0.5230%" y="1333" width="0.1046%" height="15" fill="rgb(218,129,16)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1343.50"></text></g><g><title>databend-query`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.10%)</title><rect x="0.5230%" y="1317" width="0.1046%" height="15" fill="rgb(216,85,19)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1327.50"></text></g><g><title>databend-query`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.10%)</title><rect x="0.5230%" y="1301" width="0.1046%" height="15" fill="rgb(235,228,7)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1311.50"></text></g><g><title>databend-query`tokio::coop::with_budget::_{{closure}} (1 samples, 0.10%)</title><rect x="0.5230%" y="1285" width="0.1046%" height="15" fill="rgb(245,175,0)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1295.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Context::run_task::_{{closure}} (1 samples, 0.10%)</title><rect x="0.5230%" y="1269" width="0.1046%" height="15" fill="rgb(208,168,36)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1279.50"></text></g><g><title>databend-query`tokio::runtime::task::LocalNotified&lt;S&gt;::run (1 samples, 0.10%)</title><rect x="0.5230%" y="1253" width="0.1046%" height="15" fill="rgb(246,171,24)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1263.50"></text></g><g><title>databend-query`tokio::runtime::task::raw::RawTask::poll (1 samples, 0.10%)</title><rect x="0.5230%" y="1237" width="0.1046%" height="15" fill="rgb(215,142,24)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1247.50"></text></g><g><title>databend-query`tokio::runtime::task::raw::poll (1 samples, 0.10%)</title><rect x="0.5230%" y="1221" width="0.1046%" height="15" fill="rgb(250,187,7)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1231.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.10%)</title><rect x="0.5230%" y="1205" width="0.1046%" height="15" fill="rgb(228,66,33)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1215.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1 samples, 0.10%)</title><rect x="0.5230%" y="1189" width="0.1046%" height="15" fill="rgb(234,215,21)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1199.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future (1 samples, 0.10%)</title><rect x="0.5230%" y="1173" width="0.1046%" height="15" fill="rgb(222,191,20)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1183.50"></text></g><g><title>databend-query`std::panic::catch_unwind (1 samples, 0.10%)</title><rect x="0.5230%" y="1157" width="0.1046%" height="15" fill="rgb(245,79,54)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1167.50"></text></g><g><title>databend-query`std::panicking::try (1 samples, 0.10%)</title><rect x="0.5230%" y="1141" width="0.1046%" height="15" fill="rgb(240,10,37)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1151.50"></text></g><g><title>databend-query`__rust_try (1 samples, 0.10%)</title><rect x="0.5230%" y="1125" width="0.1046%" height="15" fill="rgb(214,192,32)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1135.50"></text></g><g><title>databend-query`std::panicking::try::do_call (1 samples, 0.10%)</title><rect x="0.5230%" y="1109" width="0.1046%" height="15" fill="rgb(209,36,54)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1119.50"></text></g><g><title>databend-query`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.10%)</title><rect x="0.5230%" y="1093" width="0.1046%" height="15" fill="rgb(220,10,11)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1103.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future::_{{closure}} (1 samples, 0.10%)</title><rect x="0.5230%" y="1077" width="0.1046%" height="15" fill="rgb(221,106,17)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1087.50"></text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (1 samples, 0.10%)</title><rect x="0.5230%" y="1061" width="0.1046%" height="15" fill="rgb(251,142,44)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1071.50"></text></g><g><title>databend-query`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.10%)</title><rect x="0.5230%" y="1045" width="0.1046%" height="15" fill="rgb(238,13,15)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1055.50"></text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (1 samples, 0.10%)</title><rect x="0.5230%" y="1029" width="0.1046%" height="15" fill="rgb(208,107,27)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1039.50"></text></g><g><title>databend-query`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.5230%" y="1013" width="0.1046%" height="15" fill="rgb(205,136,37)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1023.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.5230%" y="997" width="0.1046%" height="15" fill="rgb(250,205,27)" fg:x="5" fg:w="1"/><text x="0.7730%" y="1007.50"></text></g><g><title>databend-query`databend_query::servers::mysql::mysql_interactive_worker::InteractiveWorkerBase&lt;W&gt;::exec_query::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.10%)</title><rect x="0.5230%" y="981" width="0.1046%" height="15" fill="rgb(210,80,43)" fg:x="5" fg:w="1"/><text x="0.7730%" y="991.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.5230%" y="965" width="0.1046%" height="15" fill="rgb(247,160,36)" fg:x="5" fg:w="1"/><text x="0.7730%" y="975.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.5230%" y="949" width="0.1046%" height="15" fill="rgb(234,13,49)" fg:x="5" fg:w="1"/><text x="0.7730%" y="959.50"></text></g><g><title>databend-query`&lt;databend_query::interpreters::interpreter_select_v2::SelectInterpreterV2 as databend_query::interpreters::interpreter::Interpreter&gt;::execute::_{{closure}} (1 samples, 0.10%)</title><rect x="0.5230%" y="933" width="0.1046%" height="15" fill="rgb(234,122,0)" fg:x="5" fg:w="1"/><text x="0.7730%" y="943.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.5230%" y="917" width="0.1046%" height="15" fill="rgb(207,146,38)" fg:x="5" fg:w="1"/><text x="0.7730%" y="927.50"></text></g><g><title>databend-query`&lt;databend_query::interpreters::interpreter_select_v2::SelectInterpreterV2 as databend_query::interpreters::interpreter::Interpreter&gt;::execute::_{{closure}}::_{{closure}} (1 samples, 0.10%)</title><rect x="0.5230%" y="901" width="0.1046%" height="15" fill="rgb(207,177,25)" fg:x="5" fg:w="1"/><text x="0.7730%" y="911.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.5230%" y="885" width="0.1046%" height="15" fill="rgb(211,178,42)" fg:x="5" fg:w="1"/><text x="0.7730%" y="895.50"></text></g><g><title>databend-query`databend_query::sql::planner::Planner::plan_sql::_{{closure}} (1 samples, 0.10%)</title><rect x="0.5230%" y="869" width="0.1046%" height="15" fill="rgb(230,69,54)" fg:x="5" fg:w="1"/><text x="0.7730%" y="879.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.5230%" y="853" width="0.1046%" height="15" fill="rgb(214,135,41)" fg:x="5" fg:w="1"/><text x="0.7730%" y="863.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::Binder::bind::_{{closure}} (1 samples, 0.10%)</title><rect x="0.5230%" y="837" width="0.1046%" height="15" fill="rgb(237,67,25)" fg:x="5" fg:w="1"/><text x="0.7730%" y="847.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.5230%" y="821" width="0.1046%" height="15" fill="rgb(222,189,50)" fg:x="5" fg:w="1"/><text x="0.7730%" y="831.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::Binder::bind_statement::_{{closure}} (1 samples, 0.10%)</title><rect x="0.5230%" y="805" width="0.1046%" height="15" fill="rgb(245,148,34)" fg:x="5" fg:w="1"/><text x="0.7730%" y="815.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.5230%" y="789" width="0.1046%" height="15" fill="rgb(222,29,6)" fg:x="5" fg:w="1"/><text x="0.7730%" y="799.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.5230%" y="773" width="0.1046%" height="15" fill="rgb(221,189,43)" fg:x="5" fg:w="1"/><text x="0.7730%" y="783.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::select::_&lt;impl databend_query::sql::planner::binder::Binder&gt;::bind_query::_{{closure}} (1 samples, 0.10%)</title><rect x="0.5230%" y="757" width="0.1046%" height="15" fill="rgb(207,36,27)" fg:x="5" fg:w="1"/><text x="0.7730%" y="767.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.5230%" y="741" width="0.1046%" height="15" fill="rgb(217,90,24)" fg:x="5" fg:w="1"/><text x="0.7730%" y="751.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::select::_&lt;impl databend_query::sql::planner::binder::Binder&gt;::bind_select_stmt::_{{closure}} (1 samples, 0.10%)</title><rect x="0.5230%" y="725" width="0.1046%" height="15" fill="rgb(224,66,35)" fg:x="5" fg:w="1"/><text x="0.7730%" y="735.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.5230%" y="709" width="0.1046%" height="15" fill="rgb(221,13,50)" fg:x="5" fg:w="1"/><text x="0.7730%" y="719.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::select::_&lt;impl databend_query::sql::planner::binder::Binder&gt;::bind_table_reference::_{{closure}} (1 samples, 0.10%)</title><rect x="0.5230%" y="693" width="0.1046%" height="15" fill="rgb(236,68,49)" fg:x="5" fg:w="1"/><text x="0.7730%" y="703.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.5230%" y="677" width="0.1046%" height="15" fill="rgb(229,146,28)" fg:x="5" fg:w="1"/><text x="0.7730%" y="687.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.5230%" y="661" width="0.1046%" height="15" fill="rgb(225,31,38)" fg:x="5" fg:w="1"/><text x="0.7730%" y="671.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::join::_&lt;impl databend_query::sql::planner::binder::Binder&gt;::bind_join::_{{closure}} (1 samples, 0.10%)</title><rect x="0.5230%" y="645" width="0.1046%" height="15" fill="rgb(250,208,3)" fg:x="5" fg:w="1"/><text x="0.7730%" y="655.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.5230%" y="629" width="0.1046%" height="15" fill="rgb(246,54,23)" fg:x="5" fg:w="1"/><text x="0.7730%" y="639.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::join::JoinConditionResolver::resolve::_{{closure}} (1 samples, 0.10%)</title><rect x="0.5230%" y="613" width="0.1046%" height="15" fill="rgb(243,76,11)" fg:x="5" fg:w="1"/><text x="0.7730%" y="623.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.5230%" y="597" width="0.1046%" height="15" fill="rgb(245,21,50)" fg:x="5" fg:w="1"/><text x="0.7730%" y="607.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::join::JoinConditionResolver::resolve_on::_{{closure}} (1 samples, 0.10%)</title><rect x="0.5230%" y="581" width="0.1046%" height="15" fill="rgb(228,9,43)" fg:x="5" fg:w="1"/><text x="0.7730%" y="591.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.5230%" y="565" width="0.1046%" height="15" fill="rgb(208,100,47)" fg:x="5" fg:w="1"/><text x="0.7730%" y="575.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::scalar::ScalarBinder::bind_expr::_{{closure}} (1 samples, 0.10%)</title><rect x="0.5230%" y="549" width="0.1046%" height="15" fill="rgb(232,26,8)" fg:x="5" fg:w="1"/><text x="0.7730%" y="559.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.5230%" y="533" width="0.1046%" height="15" fill="rgb(216,166,38)" fg:x="5" fg:w="1"/><text x="0.7730%" y="543.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.5230%" y="517" width="0.1046%" height="15" fill="rgb(251,202,51)" fg:x="5" fg:w="1"/><text x="0.7730%" y="527.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve::_{{closure}} (1 samples, 0.10%)</title><rect x="0.5230%" y="501" width="0.1046%" height="15" fill="rgb(254,216,34)" fg:x="5" fg:w="1"/><text x="0.7730%" y="511.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.5230%" y="485" width="0.1046%" height="15" fill="rgb(251,32,27)" fg:x="5" fg:w="1"/><text x="0.7730%" y="495.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve_binary_op::_{{closure}} (1 samples, 0.10%)</title><rect x="0.5230%" y="469" width="0.1046%" height="15" fill="rgb(208,127,28)" fg:x="5" fg:w="1"/><text x="0.7730%" y="479.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.5230%" y="453" width="0.1046%" height="15" fill="rgb(224,137,22)" fg:x="5" fg:w="1"/><text x="0.7730%" y="463.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.5230%" y="437" width="0.1046%" height="15" fill="rgb(254,70,32)" fg:x="5" fg:w="1"/><text x="0.7730%" y="447.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve::_{{closure}} (1 samples, 0.10%)</title><rect x="0.5230%" y="421" width="0.1046%" height="15" fill="rgb(229,75,37)" fg:x="5" fg:w="1"/><text x="0.7730%" y="431.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.5230%" y="405" width="0.1046%" height="15" fill="rgb(252,64,23)" fg:x="5" fg:w="1"/><text x="0.7730%" y="415.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve_binary_op::_{{closure}} (1 samples, 0.10%)</title><rect x="0.5230%" y="389" width="0.1046%" height="15" fill="rgb(232,162,48)" fg:x="5" fg:w="1"/><text x="0.7730%" y="399.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.5230%" y="373" width="0.1046%" height="15" fill="rgb(246,160,12)" fg:x="5" fg:w="1"/><text x="0.7730%" y="383.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve_function::_{{closure}} (1 samples, 0.10%)</title><rect x="0.5230%" y="357" width="0.1046%" height="15" fill="rgb(247,166,0)" fg:x="5" fg:w="1"/><text x="0.7730%" y="367.50"></text></g><g><title>databend-query`common_functions::scalars::function_factory::FunctionFactory::instance (1 samples, 0.10%)</title><rect x="0.5230%" y="341" width="0.1046%" height="15" fill="rgb(249,219,21)" fg:x="5" fg:w="1"/><text x="0.7730%" y="351.50"></text></g><g><title>databend-query`&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="0.5230%" y="325" width="0.1046%" height="15" fill="rgb(205,209,3)" fg:x="5" fg:w="1"/><text x="0.7730%" y="335.50"></text></g><g><title>databend-query`once_cell::sync::Lazy&lt;T,F&gt;::force (1 samples, 0.10%)</title><rect x="0.5230%" y="309" width="0.1046%" height="15" fill="rgb(243,44,1)" fg:x="5" fg:w="1"/><text x="0.7730%" y="319.50"></text></g><g><title>databend-query`once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.10%)</title><rect x="0.5230%" y="293" width="0.1046%" height="15" fill="rgb(206,159,16)" fg:x="5" fg:w="1"/><text x="0.7730%" y="303.50"></text></g><g><title>databend-query`once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.10%)</title><rect x="0.5230%" y="277" width="0.1046%" height="15" fill="rgb(244,77,30)" fg:x="5" fg:w="1"/><text x="0.7730%" y="287.50"></text></g><g><title>databend-query`once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.10%)</title><rect x="0.5230%" y="261" width="0.1046%" height="15" fill="rgb(218,69,12)" fg:x="5" fg:w="1"/><text x="0.7730%" y="271.50"></text></g><g><title>databend-query`once_cell::imp::initialize_inner (1 samples, 0.10%)</title><rect x="0.5230%" y="245" width="0.1046%" height="15" fill="rgb(212,87,7)" fg:x="5" fg:w="1"/><text x="0.7730%" y="255.50"></text></g><g><title>databend-query`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (1 samples, 0.10%)</title><rect x="0.5230%" y="229" width="0.1046%" height="15" fill="rgb(245,114,25)" fg:x="5" fg:w="1"/><text x="0.7730%" y="239.50"></text></g><g><title>databend-query`once_cell::sync::OnceCell&lt;T&gt;::get_or_init::_{{closure}} (1 samples, 0.10%)</title><rect x="0.5230%" y="213" width="0.1046%" height="15" fill="rgb(210,61,42)" fg:x="5" fg:w="1"/><text x="0.7730%" y="223.50"></text></g><g><title>databend-query`once_cell::sync::Lazy&lt;T,F&gt;::force::_{{closure}} (1 samples, 0.10%)</title><rect x="0.5230%" y="197" width="0.1046%" height="15" fill="rgb(211,52,33)" fg:x="5" fg:w="1"/><text x="0.7730%" y="207.50"></text></g><g><title>databend-query`core::ops::function::FnOnce::call_once (1 samples, 0.10%)</title><rect x="0.5230%" y="181" width="0.1046%" height="15" fill="rgb(234,58,33)" fg:x="5" fg:w="1"/><text x="0.7730%" y="191.50"></text></g><g><title>databend-query`core::ops::function::FnOnce::call_once (1 samples, 0.10%)</title><rect x="0.5230%" y="165" width="0.1046%" height="15" fill="rgb(220,115,36)" fg:x="5" fg:w="1"/><text x="0.7730%" y="175.50"></text></g><g><title>databend-query`common_functions::scalars::function_factory::FUNCTION_FACTORY::_{{closure}} (1 samples, 0.10%)</title><rect x="0.5230%" y="149" width="0.1046%" height="15" fill="rgb(243,153,54)" fg:x="5" fg:w="1"/><text x="0.7730%" y="159.50"></text></g><g><title>databend-query`common_functions::scalars::expressions::expression::ToCastFunction::register (1 samples, 0.10%)</title><rect x="0.5230%" y="133" width="0.1046%" height="15" fill="rgb(251,47,18)" fg:x="5" fg:w="1"/><text x="0.7730%" y="143.50"></text></g><g><title>databend-query`common_datavalues::types::type_factory::TypeFactory::register_names (1 samples, 0.10%)</title><rect x="0.5230%" y="117" width="0.1046%" height="15" fill="rgb(242,102,42)" fg:x="5" fg:w="1"/><text x="0.7730%" y="127.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::collect (1 samples, 0.10%)</title><rect x="0.5230%" y="101" width="0.1046%" height="15" fill="rgb(234,31,38)" fg:x="5" fg:w="1"/><text x="0.7730%" y="111.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="0.5230%" y="85" width="0.1046%" height="15" fill="rgb(221,117,51)" fg:x="5" fg:w="1"/><text x="0.7730%" y="95.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="0.5230%" y="69" width="0.1046%" height="15" fill="rgb(212,20,18)" fg:x="5" fg:w="1"/><text x="0.7730%" y="79.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="0.5230%" y="53" width="0.1046%" height="15" fill="rgb(245,133,36)" fg:x="5" fg:w="1"/><text x="0.7730%" y="63.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.10%)</title><rect x="0.5230%" y="37" width="0.1046%" height="15" fill="rgb(212,6,19)" fg:x="5" fg:w="1"/><text x="0.7730%" y="47.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1 samples, 0.10%)</title><rect x="0.6276%" y="1621" width="0.1046%" height="15" fill="rgb(218,1,36)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1631.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future (1 samples, 0.10%)</title><rect x="0.6276%" y="1605" width="0.1046%" height="15" fill="rgb(246,84,54)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1615.50"></text></g><g><title>databend-query`std::panic::catch_unwind (1 samples, 0.10%)</title><rect x="0.6276%" y="1589" width="0.1046%" height="15" fill="rgb(242,110,6)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1599.50"></text></g><g><title>databend-query`std::panicking::try (1 samples, 0.10%)</title><rect x="0.6276%" y="1573" width="0.1046%" height="15" fill="rgb(214,47,5)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1583.50"></text></g><g><title>databend-query`__rust_try (1 samples, 0.10%)</title><rect x="0.6276%" y="1557" width="0.1046%" height="15" fill="rgb(218,159,25)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1567.50"></text></g><g><title>databend-query`std::panicking::try::do_call (1 samples, 0.10%)</title><rect x="0.6276%" y="1541" width="0.1046%" height="15" fill="rgb(215,211,28)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1551.50"></text></g><g><title>databend-query`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.10%)</title><rect x="0.6276%" y="1525" width="0.1046%" height="15" fill="rgb(238,59,32)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1535.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future::_{{closure}} (1 samples, 0.10%)</title><rect x="0.6276%" y="1509" width="0.1046%" height="15" fill="rgb(226,82,3)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1519.50"></text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (1 samples, 0.10%)</title><rect x="0.6276%" y="1493" width="0.1046%" height="15" fill="rgb(240,164,32)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1503.50"></text></g><g><title>databend-query`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.10%)</title><rect x="0.6276%" y="1477" width="0.1046%" height="15" fill="rgb(232,46,7)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1487.50"></text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (1 samples, 0.10%)</title><rect x="0.6276%" y="1461" width="0.1046%" height="15" fill="rgb(229,129,53)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1471.50"></text></g><g><title>databend-query`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.6276%" y="1445" width="0.1046%" height="15" fill="rgb(234,188,29)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1455.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Launch::launch::_{{closure}} (1 samples, 0.10%)</title><rect x="0.6276%" y="1429" width="0.1046%" height="15" fill="rgb(246,141,4)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1439.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::run (1 samples, 0.10%)</title><rect x="0.6276%" y="1413" width="0.1046%" height="15" fill="rgb(229,23,39)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1423.50"></text></g><g><title>databend-query`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (1 samples, 0.10%)</title><rect x="0.6276%" y="1397" width="0.1046%" height="15" fill="rgb(206,12,3)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1407.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::run::_{{closure}} (1 samples, 0.10%)</title><rect x="0.6276%" y="1381" width="0.1046%" height="15" fill="rgb(252,226,20)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1391.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Context::run (1 samples, 0.10%)</title><rect x="0.6276%" y="1365" width="0.1046%" height="15" fill="rgb(216,123,35)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1375.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Context::run_task (1 samples, 0.10%)</title><rect x="0.6276%" y="1349" width="0.1046%" height="15" fill="rgb(212,68,40)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1359.50"></text></g><g><title>databend-query`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.10%)</title><rect x="0.6276%" y="1333" width="0.1046%" height="15" fill="rgb(254,125,32)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1343.50"></text></g><g><title>databend-query`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.10%)</title><rect x="0.6276%" y="1317" width="0.1046%" height="15" fill="rgb(253,97,22)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1327.50"></text></g><g><title>databend-query`tokio::coop::with_budget::_{{closure}} (1 samples, 0.10%)</title><rect x="0.6276%" y="1301" width="0.1046%" height="15" fill="rgb(241,101,14)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1311.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Context::run_task::_{{closure}} (1 samples, 0.10%)</title><rect x="0.6276%" y="1285" width="0.1046%" height="15" fill="rgb(238,103,29)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1295.50"></text></g><g><title>databend-query`tokio::runtime::task::LocalNotified&lt;S&gt;::run (1 samples, 0.10%)</title><rect x="0.6276%" y="1269" width="0.1046%" height="15" fill="rgb(233,195,47)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1279.50"></text></g><g><title>databend-query`tokio::runtime::task::raw::RawTask::poll (1 samples, 0.10%)</title><rect x="0.6276%" y="1253" width="0.1046%" height="15" fill="rgb(246,218,30)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1263.50"></text></g><g><title>databend-query`tokio::runtime::task::raw::poll (1 samples, 0.10%)</title><rect x="0.6276%" y="1237" width="0.1046%" height="15" fill="rgb(219,145,47)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1247.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.10%)</title><rect x="0.6276%" y="1221" width="0.1046%" height="15" fill="rgb(243,12,26)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1231.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1 samples, 0.10%)</title><rect x="0.6276%" y="1205" width="0.1046%" height="15" fill="rgb(214,87,16)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1215.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future (1 samples, 0.10%)</title><rect x="0.6276%" y="1189" width="0.1046%" height="15" fill="rgb(208,99,42)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1199.50"></text></g><g><title>databend-query`std::panic::catch_unwind (1 samples, 0.10%)</title><rect x="0.6276%" y="1173" width="0.1046%" height="15" fill="rgb(253,99,2)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1183.50"></text></g><g><title>databend-query`std::panicking::try (1 samples, 0.10%)</title><rect x="0.6276%" y="1157" width="0.1046%" height="15" fill="rgb(220,168,23)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1167.50"></text></g><g><title>databend-query`__rust_try (1 samples, 0.10%)</title><rect x="0.6276%" y="1141" width="0.1046%" height="15" fill="rgb(242,38,24)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1151.50"></text></g><g><title>databend-query`std::panicking::try::do_call (1 samples, 0.10%)</title><rect x="0.6276%" y="1125" width="0.1046%" height="15" fill="rgb(225,182,9)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1135.50"></text></g><g><title>databend-query`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.10%)</title><rect x="0.6276%" y="1109" width="0.1046%" height="15" fill="rgb(243,178,37)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1119.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future::_{{closure}} (1 samples, 0.10%)</title><rect x="0.6276%" y="1093" width="0.1046%" height="15" fill="rgb(232,139,19)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1103.50"></text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (1 samples, 0.10%)</title><rect x="0.6276%" y="1077" width="0.1046%" height="15" fill="rgb(225,201,24)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1087.50"></text></g><g><title>databend-query`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.10%)</title><rect x="0.6276%" y="1061" width="0.1046%" height="15" fill="rgb(221,47,46)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1071.50"></text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (1 samples, 0.10%)</title><rect x="0.6276%" y="1045" width="0.1046%" height="15" fill="rgb(249,23,13)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1055.50"></text></g><g><title>databend-query`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.6276%" y="1029" width="0.1046%" height="15" fill="rgb(219,9,5)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1039.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.6276%" y="1013" width="0.1046%" height="15" fill="rgb(254,171,16)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1023.50"></text></g><g><title>databend-query`databend_query::servers::mysql::mysql_interactive_worker::InteractiveWorkerBase&lt;W&gt;::exec_query::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.10%)</title><rect x="0.6276%" y="997" width="0.1046%" height="15" fill="rgb(230,171,20)" fg:x="6" fg:w="1"/><text x="0.8776%" y="1007.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.6276%" y="981" width="0.1046%" height="15" fill="rgb(210,71,41)" fg:x="6" fg:w="1"/><text x="0.8776%" y="991.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.6276%" y="965" width="0.1046%" height="15" fill="rgb(206,173,20)" fg:x="6" fg:w="1"/><text x="0.8776%" y="975.50"></text></g><g><title>databend-query`&lt;databend_query::interpreters::interpreter_select_v2::SelectInterpreterV2 as databend_query::interpreters::interpreter::Interpreter&gt;::execute::_{{closure}} (1 samples, 0.10%)</title><rect x="0.6276%" y="949" width="0.1046%" height="15" fill="rgb(233,88,34)" fg:x="6" fg:w="1"/><text x="0.8776%" y="959.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.6276%" y="933" width="0.1046%" height="15" fill="rgb(223,209,46)" fg:x="6" fg:w="1"/><text x="0.8776%" y="943.50"></text></g><g><title>databend-query`&lt;databend_query::interpreters::interpreter_select_v2::SelectInterpreterV2 as databend_query::interpreters::interpreter::Interpreter&gt;::execute::_{{closure}}::_{{closure}} (1 samples, 0.10%)</title><rect x="0.6276%" y="917" width="0.1046%" height="15" fill="rgb(250,43,18)" fg:x="6" fg:w="1"/><text x="0.8776%" y="927.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.6276%" y="901" width="0.1046%" height="15" fill="rgb(208,13,10)" fg:x="6" fg:w="1"/><text x="0.8776%" y="911.50"></text></g><g><title>databend-query`databend_query::sql::planner::Planner::plan_sql::_{{closure}} (1 samples, 0.10%)</title><rect x="0.6276%" y="885" width="0.1046%" height="15" fill="rgb(212,200,36)" fg:x="6" fg:w="1"/><text x="0.8776%" y="895.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.6276%" y="869" width="0.1046%" height="15" fill="rgb(225,90,30)" fg:x="6" fg:w="1"/><text x="0.8776%" y="879.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::Binder::bind::_{{closure}} (1 samples, 0.10%)</title><rect x="0.6276%" y="853" width="0.1046%" height="15" fill="rgb(236,182,39)" fg:x="6" fg:w="1"/><text x="0.8776%" y="863.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.6276%" y="837" width="0.1046%" height="15" fill="rgb(212,144,35)" fg:x="6" fg:w="1"/><text x="0.8776%" y="847.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::Binder::bind_statement::_{{closure}} (1 samples, 0.10%)</title><rect x="0.6276%" y="821" width="0.1046%" height="15" fill="rgb(228,63,44)" fg:x="6" fg:w="1"/><text x="0.8776%" y="831.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.6276%" y="805" width="0.1046%" height="15" fill="rgb(228,109,6)" fg:x="6" fg:w="1"/><text x="0.8776%" y="815.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.6276%" y="789" width="0.1046%" height="15" fill="rgb(238,117,24)" fg:x="6" fg:w="1"/><text x="0.8776%" y="799.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::select::_&lt;impl databend_query::sql::planner::binder::Binder&gt;::bind_query::_{{closure}} (1 samples, 0.10%)</title><rect x="0.6276%" y="773" width="0.1046%" height="15" fill="rgb(242,26,26)" fg:x="6" fg:w="1"/><text x="0.8776%" y="783.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.6276%" y="757" width="0.1046%" height="15" fill="rgb(221,92,48)" fg:x="6" fg:w="1"/><text x="0.8776%" y="767.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::select::_&lt;impl databend_query::sql::planner::binder::Binder&gt;::bind_select_stmt::_{{closure}} (1 samples, 0.10%)</title><rect x="0.6276%" y="741" width="0.1046%" height="15" fill="rgb(209,209,32)" fg:x="6" fg:w="1"/><text x="0.8776%" y="751.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.6276%" y="725" width="0.1046%" height="15" fill="rgb(221,70,22)" fg:x="6" fg:w="1"/><text x="0.8776%" y="735.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::select::_&lt;impl databend_query::sql::planner::binder::Binder&gt;::bind_table_reference::_{{closure}} (1 samples, 0.10%)</title><rect x="0.6276%" y="709" width="0.1046%" height="15" fill="rgb(248,145,5)" fg:x="6" fg:w="1"/><text x="0.8776%" y="719.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.6276%" y="693" width="0.1046%" height="15" fill="rgb(226,116,26)" fg:x="6" fg:w="1"/><text x="0.8776%" y="703.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.6276%" y="677" width="0.1046%" height="15" fill="rgb(244,5,17)" fg:x="6" fg:w="1"/><text x="0.8776%" y="687.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::join::_&lt;impl databend_query::sql::planner::binder::Binder&gt;::bind_join::_{{closure}} (1 samples, 0.10%)</title><rect x="0.6276%" y="661" width="0.1046%" height="15" fill="rgb(252,159,33)" fg:x="6" fg:w="1"/><text x="0.8776%" y="671.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.6276%" y="645" width="0.1046%" height="15" fill="rgb(206,71,0)" fg:x="6" fg:w="1"/><text x="0.8776%" y="655.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::join::JoinConditionResolver::resolve::_{{closure}} (1 samples, 0.10%)</title><rect x="0.6276%" y="629" width="0.1046%" height="15" fill="rgb(233,118,54)" fg:x="6" fg:w="1"/><text x="0.8776%" y="639.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.6276%" y="613" width="0.1046%" height="15" fill="rgb(234,83,48)" fg:x="6" fg:w="1"/><text x="0.8776%" y="623.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::join::JoinConditionResolver::resolve_on::_{{closure}} (1 samples, 0.10%)</title><rect x="0.6276%" y="597" width="0.1046%" height="15" fill="rgb(228,3,54)" fg:x="6" fg:w="1"/><text x="0.8776%" y="607.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.6276%" y="581" width="0.1046%" height="15" fill="rgb(226,155,13)" fg:x="6" fg:w="1"/><text x="0.8776%" y="591.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::scalar::ScalarBinder::bind_expr::_{{closure}} (1 samples, 0.10%)</title><rect x="0.6276%" y="565" width="0.1046%" height="15" fill="rgb(241,28,37)" fg:x="6" fg:w="1"/><text x="0.8776%" y="575.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.6276%" y="549" width="0.1046%" height="15" fill="rgb(233,93,10)" fg:x="6" fg:w="1"/><text x="0.8776%" y="559.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.6276%" y="533" width="0.1046%" height="15" fill="rgb(225,113,19)" fg:x="6" fg:w="1"/><text x="0.8776%" y="543.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve::_{{closure}} (1 samples, 0.10%)</title><rect x="0.6276%" y="517" width="0.1046%" height="15" fill="rgb(241,2,18)" fg:x="6" fg:w="1"/><text x="0.8776%" y="527.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.6276%" y="501" width="0.1046%" height="15" fill="rgb(228,207,21)" fg:x="6" fg:w="1"/><text x="0.8776%" y="511.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve_binary_op::_{{closure}} (1 samples, 0.10%)</title><rect x="0.6276%" y="485" width="0.1046%" height="15" fill="rgb(213,211,35)" fg:x="6" fg:w="1"/><text x="0.8776%" y="495.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.6276%" y="469" width="0.1046%" height="15" fill="rgb(209,83,10)" fg:x="6" fg:w="1"/><text x="0.8776%" y="479.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.6276%" y="453" width="0.1046%" height="15" fill="rgb(209,164,1)" fg:x="6" fg:w="1"/><text x="0.8776%" y="463.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve::_{{closure}} (1 samples, 0.10%)</title><rect x="0.6276%" y="437" width="0.1046%" height="15" fill="rgb(213,184,43)" fg:x="6" fg:w="1"/><text x="0.8776%" y="447.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.6276%" y="421" width="0.1046%" height="15" fill="rgb(231,61,34)" fg:x="6" fg:w="1"/><text x="0.8776%" y="431.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve_binary_op::_{{closure}} (1 samples, 0.10%)</title><rect x="0.6276%" y="405" width="0.1046%" height="15" fill="rgb(235,75,3)" fg:x="6" fg:w="1"/><text x="0.8776%" y="415.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.6276%" y="389" width="0.1046%" height="15" fill="rgb(220,106,47)" fg:x="6" fg:w="1"/><text x="0.8776%" y="399.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve_function::_{{closure}} (1 samples, 0.10%)</title><rect x="0.6276%" y="373" width="0.1046%" height="15" fill="rgb(210,196,33)" fg:x="6" fg:w="1"/><text x="0.8776%" y="383.50"></text></g><g><title>databend-query`common_functions::scalars::function_factory::FunctionFactory::instance (1 samples, 0.10%)</title><rect x="0.6276%" y="357" width="0.1046%" height="15" fill="rgb(229,154,42)" fg:x="6" fg:w="1"/><text x="0.8776%" y="367.50"></text></g><g><title>databend-query`&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="0.6276%" y="341" width="0.1046%" height="15" fill="rgb(228,114,26)" fg:x="6" fg:w="1"/><text x="0.8776%" y="351.50"></text></g><g><title>databend-query`once_cell::sync::Lazy&lt;T,F&gt;::force (1 samples, 0.10%)</title><rect x="0.6276%" y="325" width="0.1046%" height="15" fill="rgb(208,144,1)" fg:x="6" fg:w="1"/><text x="0.8776%" y="335.50"></text></g><g><title>databend-query`once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.10%)</title><rect x="0.6276%" y="309" width="0.1046%" height="15" fill="rgb(239,112,37)" fg:x="6" fg:w="1"/><text x="0.8776%" y="319.50"></text></g><g><title>databend-query`once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.10%)</title><rect x="0.6276%" y="293" width="0.1046%" height="15" fill="rgb(210,96,50)" fg:x="6" fg:w="1"/><text x="0.8776%" y="303.50"></text></g><g><title>databend-query`once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.10%)</title><rect x="0.6276%" y="277" width="0.1046%" height="15" fill="rgb(222,178,2)" fg:x="6" fg:w="1"/><text x="0.8776%" y="287.50"></text></g><g><title>databend-query`once_cell::imp::initialize_inner (1 samples, 0.10%)</title><rect x="0.6276%" y="261" width="0.1046%" height="15" fill="rgb(226,74,18)" fg:x="6" fg:w="1"/><text x="0.8776%" y="271.50"></text></g><g><title>databend-query`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (1 samples, 0.10%)</title><rect x="0.6276%" y="245" width="0.1046%" height="15" fill="rgb(225,67,54)" fg:x="6" fg:w="1"/><text x="0.8776%" y="255.50"></text></g><g><title>databend-query`once_cell::sync::OnceCell&lt;T&gt;::get_or_init::_{{closure}} (1 samples, 0.10%)</title><rect x="0.6276%" y="229" width="0.1046%" height="15" fill="rgb(251,92,32)" fg:x="6" fg:w="1"/><text x="0.8776%" y="239.50"></text></g><g><title>databend-query`once_cell::sync::Lazy&lt;T,F&gt;::force::_{{closure}} (1 samples, 0.10%)</title><rect x="0.6276%" y="213" width="0.1046%" height="15" fill="rgb(228,149,22)" fg:x="6" fg:w="1"/><text x="0.8776%" y="223.50"></text></g><g><title>databend-query`core::ops::function::FnOnce::call_once (1 samples, 0.10%)</title><rect x="0.6276%" y="197" width="0.1046%" height="15" fill="rgb(243,54,13)" fg:x="6" fg:w="1"/><text x="0.8776%" y="207.50"></text></g><g><title>databend-query`core::ops::function::FnOnce::call_once (1 samples, 0.10%)</title><rect x="0.6276%" y="181" width="0.1046%" height="15" fill="rgb(243,180,28)" fg:x="6" fg:w="1"/><text x="0.8776%" y="191.50"></text></g><g><title>databend-query`common_functions::scalars::function_factory::FUNCTION_FACTORY::_{{closure}} (1 samples, 0.10%)</title><rect x="0.6276%" y="165" width="0.1046%" height="15" fill="rgb(208,167,24)" fg:x="6" fg:w="1"/><text x="0.8776%" y="175.50"></text></g><g><title>databend-query`common_functions::scalars::expressions::expression::ToCastFunction::register (1 samples, 0.10%)</title><rect x="0.6276%" y="149" width="0.1046%" height="15" fill="rgb(245,73,45)" fg:x="6" fg:w="1"/><text x="0.8776%" y="159.50"></text></g><g><title>databend-query`common_functions::scalars::function_factory::FunctionFactory::register (1 samples, 0.10%)</title><rect x="0.6276%" y="133" width="0.1046%" height="15" fill="rgb(237,203,48)" fg:x="6" fg:w="1"/><text x="0.8776%" y="143.50"></text></g><g><title>databend-query`std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.10%)</title><rect x="0.6276%" y="117" width="0.1046%" height="15" fill="rgb(211,197,16)" fg:x="6" fg:w="1"/><text x="0.8776%" y="127.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.10%)</title><rect x="0.6276%" y="101" width="0.1046%" height="15" fill="rgb(243,99,51)" fg:x="6" fg:w="1"/><text x="0.8776%" y="111.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.10%)</title><rect x="0.6276%" y="85" width="0.1046%" height="15" fill="rgb(215,123,29)" fg:x="6" fg:w="1"/><text x="0.8776%" y="95.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="0.6276%" y="69" width="0.1046%" height="15" fill="rgb(239,186,37)" fg:x="6" fg:w="1"/><text x="0.8776%" y="79.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.10%)</title><rect x="0.6276%" y="53" width="0.1046%" height="15" fill="rgb(252,136,39)" fg:x="6" fg:w="1"/><text x="0.8776%" y="63.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.10%)</title><rect x="0.6276%" y="37" width="0.1046%" height="15" fill="rgb(223,213,32)" fg:x="6" fg:w="1"/><text x="0.8776%" y="47.50"></text></g><g><title>databend-query`tokio::runtime::task::raw::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="1621" width="0.1046%" height="15" fill="rgb(233,115,5)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1631.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="1605" width="0.1046%" height="15" fill="rgb(207,226,44)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1615.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1 samples, 0.10%)</title><rect x="0.7322%" y="1589" width="0.1046%" height="15" fill="rgb(208,126,0)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1599.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future (1 samples, 0.10%)</title><rect x="0.7322%" y="1573" width="0.1046%" height="15" fill="rgb(244,66,21)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1583.50"></text></g><g><title>databend-query`std::panic::catch_unwind (1 samples, 0.10%)</title><rect x="0.7322%" y="1557" width="0.1046%" height="15" fill="rgb(222,97,12)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1567.50"></text></g><g><title>databend-query`std::panicking::try (1 samples, 0.10%)</title><rect x="0.7322%" y="1541" width="0.1046%" height="15" fill="rgb(219,213,19)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1551.50"></text></g><g><title>databend-query`__rust_try (1 samples, 0.10%)</title><rect x="0.7322%" y="1525" width="0.1046%" height="15" fill="rgb(252,169,30)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1535.50"></text></g><g><title>databend-query`std::panicking::try::do_call (1 samples, 0.10%)</title><rect x="0.7322%" y="1509" width="0.1046%" height="15" fill="rgb(206,32,51)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1519.50"></text></g><g><title>databend-query`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.10%)</title><rect x="0.7322%" y="1493" width="0.1046%" height="15" fill="rgb(250,172,42)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1503.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future::_{{closure}} (1 samples, 0.10%)</title><rect x="0.7322%" y="1477" width="0.1046%" height="15" fill="rgb(209,34,43)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1487.50"></text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="1461" width="0.1046%" height="15" fill="rgb(223,11,35)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1471.50"></text></g><g><title>databend-query`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.10%)</title><rect x="0.7322%" y="1445" width="0.1046%" height="15" fill="rgb(251,219,26)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1455.50"></text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (1 samples, 0.10%)</title><rect x="0.7322%" y="1429" width="0.1046%" height="15" fill="rgb(231,119,3)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1439.50"></text></g><g><title>databend-query`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="1413" width="0.1046%" height="15" fill="rgb(216,97,11)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1423.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Launch::launch::_{{closure}} (1 samples, 0.10%)</title><rect x="0.7322%" y="1397" width="0.1046%" height="15" fill="rgb(223,59,9)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1407.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::run (1 samples, 0.10%)</title><rect x="0.7322%" y="1381" width="0.1046%" height="15" fill="rgb(233,93,31)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1391.50"></text></g><g><title>databend-query`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (1 samples, 0.10%)</title><rect x="0.7322%" y="1365" width="0.1046%" height="15" fill="rgb(239,81,33)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1375.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::run::_{{closure}} (1 samples, 0.10%)</title><rect x="0.7322%" y="1349" width="0.1046%" height="15" fill="rgb(213,120,34)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1359.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Context::run (1 samples, 0.10%)</title><rect x="0.7322%" y="1333" width="0.1046%" height="15" fill="rgb(243,49,53)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1343.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Context::run_task (1 samples, 0.10%)</title><rect x="0.7322%" y="1317" width="0.1046%" height="15" fill="rgb(247,216,33)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1327.50"></text></g><g><title>databend-query`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.10%)</title><rect x="0.7322%" y="1301" width="0.1046%" height="15" fill="rgb(226,26,14)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1311.50"></text></g><g><title>databend-query`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.10%)</title><rect x="0.7322%" y="1285" width="0.1046%" height="15" fill="rgb(215,49,53)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1295.50"></text></g><g><title>databend-query`tokio::coop::with_budget::_{{closure}} (1 samples, 0.10%)</title><rect x="0.7322%" y="1269" width="0.1046%" height="15" fill="rgb(245,162,40)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1279.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Context::run_task::_{{closure}} (1 samples, 0.10%)</title><rect x="0.7322%" y="1253" width="0.1046%" height="15" fill="rgb(229,68,17)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1263.50"></text></g><g><title>databend-query`tokio::runtime::task::LocalNotified&lt;S&gt;::run (1 samples, 0.10%)</title><rect x="0.7322%" y="1237" width="0.1046%" height="15" fill="rgb(213,182,10)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1247.50"></text></g><g><title>databend-query`tokio::runtime::task::raw::RawTask::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="1221" width="0.1046%" height="15" fill="rgb(245,125,30)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1231.50"></text></g><g><title>databend-query`tokio::runtime::task::raw::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="1205" width="0.1046%" height="15" fill="rgb(232,202,2)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1215.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="1189" width="0.1046%" height="15" fill="rgb(237,140,51)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1199.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1 samples, 0.10%)</title><rect x="0.7322%" y="1173" width="0.1046%" height="15" fill="rgb(236,157,25)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1183.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future (1 samples, 0.10%)</title><rect x="0.7322%" y="1157" width="0.1046%" height="15" fill="rgb(219,209,0)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1167.50"></text></g><g><title>databend-query`std::panic::catch_unwind (1 samples, 0.10%)</title><rect x="0.7322%" y="1141" width="0.1046%" height="15" fill="rgb(240,116,54)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1151.50"></text></g><g><title>databend-query`std::panicking::try (1 samples, 0.10%)</title><rect x="0.7322%" y="1125" width="0.1046%" height="15" fill="rgb(216,10,36)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1135.50"></text></g><g><title>databend-query`__rust_try (1 samples, 0.10%)</title><rect x="0.7322%" y="1109" width="0.1046%" height="15" fill="rgb(222,72,44)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1119.50"></text></g><g><title>databend-query`std::panicking::try::do_call (1 samples, 0.10%)</title><rect x="0.7322%" y="1093" width="0.1046%" height="15" fill="rgb(232,159,9)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1103.50"></text></g><g><title>databend-query`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.10%)</title><rect x="0.7322%" y="1077" width="0.1046%" height="15" fill="rgb(210,39,32)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1087.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future::_{{closure}} (1 samples, 0.10%)</title><rect x="0.7322%" y="1061" width="0.1046%" height="15" fill="rgb(216,194,45)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1071.50"></text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="1045" width="0.1046%" height="15" fill="rgb(218,18,35)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1055.50"></text></g><g><title>databend-query`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.10%)</title><rect x="0.7322%" y="1029" width="0.1046%" height="15" fill="rgb(207,83,51)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1039.50"></text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (1 samples, 0.10%)</title><rect x="0.7322%" y="1013" width="0.1046%" height="15" fill="rgb(225,63,43)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1023.50"></text></g><g><title>databend-query`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="997" width="0.1046%" height="15" fill="rgb(207,57,36)" fg:x="7" fg:w="1"/><text x="0.9822%" y="1007.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="981" width="0.1046%" height="15" fill="rgb(216,99,33)" fg:x="7" fg:w="1"/><text x="0.9822%" y="991.50"></text></g><g><title>databend-query`databend_query::servers::mysql::mysql_interactive_worker::InteractiveWorkerBase&lt;W&gt;::exec_query::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.10%)</title><rect x="0.7322%" y="965" width="0.1046%" height="15" fill="rgb(225,42,16)" fg:x="7" fg:w="1"/><text x="0.9822%" y="975.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="949" width="0.1046%" height="15" fill="rgb(220,201,45)" fg:x="7" fg:w="1"/><text x="0.9822%" y="959.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="933" width="0.1046%" height="15" fill="rgb(225,33,4)" fg:x="7" fg:w="1"/><text x="0.9822%" y="943.50"></text></g><g><title>databend-query`&lt;databend_query::interpreters::interpreter_select_v2::SelectInterpreterV2 as databend_query::interpreters::interpreter::Interpreter&gt;::execute::_{{closure}} (1 samples, 0.10%)</title><rect x="0.7322%" y="917" width="0.1046%" height="15" fill="rgb(224,33,50)" fg:x="7" fg:w="1"/><text x="0.9822%" y="927.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="901" width="0.1046%" height="15" fill="rgb(246,198,51)" fg:x="7" fg:w="1"/><text x="0.9822%" y="911.50"></text></g><g><title>databend-query`&lt;databend_query::interpreters::interpreter_select_v2::SelectInterpreterV2 as databend_query::interpreters::interpreter::Interpreter&gt;::execute::_{{closure}}::_{{closure}} (1 samples, 0.10%)</title><rect x="0.7322%" y="885" width="0.1046%" height="15" fill="rgb(205,22,4)" fg:x="7" fg:w="1"/><text x="0.9822%" y="895.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="869" width="0.1046%" height="15" fill="rgb(206,3,8)" fg:x="7" fg:w="1"/><text x="0.9822%" y="879.50"></text></g><g><title>databend-query`databend_query::sql::planner::Planner::plan_sql::_{{closure}} (1 samples, 0.10%)</title><rect x="0.7322%" y="853" width="0.1046%" height="15" fill="rgb(251,23,15)" fg:x="7" fg:w="1"/><text x="0.9822%" y="863.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="837" width="0.1046%" height="15" fill="rgb(252,88,28)" fg:x="7" fg:w="1"/><text x="0.9822%" y="847.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::Binder::bind::_{{closure}} (1 samples, 0.10%)</title><rect x="0.7322%" y="821" width="0.1046%" height="15" fill="rgb(212,127,14)" fg:x="7" fg:w="1"/><text x="0.9822%" y="831.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="805" width="0.1046%" height="15" fill="rgb(247,145,37)" fg:x="7" fg:w="1"/><text x="0.9822%" y="815.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::Binder::bind_statement::_{{closure}} (1 samples, 0.10%)</title><rect x="0.7322%" y="789" width="0.1046%" height="15" fill="rgb(209,117,53)" fg:x="7" fg:w="1"/><text x="0.9822%" y="799.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="773" width="0.1046%" height="15" fill="rgb(212,90,42)" fg:x="7" fg:w="1"/><text x="0.9822%" y="783.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="757" width="0.1046%" height="15" fill="rgb(218,164,37)" fg:x="7" fg:w="1"/><text x="0.9822%" y="767.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::select::_&lt;impl databend_query::sql::planner::binder::Binder&gt;::bind_query::_{{closure}} (1 samples, 0.10%)</title><rect x="0.7322%" y="741" width="0.1046%" height="15" fill="rgb(246,65,34)" fg:x="7" fg:w="1"/><text x="0.9822%" y="751.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="725" width="0.1046%" height="15" fill="rgb(231,100,33)" fg:x="7" fg:w="1"/><text x="0.9822%" y="735.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::select::_&lt;impl databend_query::sql::planner::binder::Binder&gt;::bind_select_stmt::_{{closure}} (1 samples, 0.10%)</title><rect x="0.7322%" y="709" width="0.1046%" height="15" fill="rgb(228,126,14)" fg:x="7" fg:w="1"/><text x="0.9822%" y="719.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="693" width="0.1046%" height="15" fill="rgb(215,173,21)" fg:x="7" fg:w="1"/><text x="0.9822%" y="703.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::select::_&lt;impl databend_query::sql::planner::binder::Binder&gt;::bind_table_reference::_{{closure}} (1 samples, 0.10%)</title><rect x="0.7322%" y="677" width="0.1046%" height="15" fill="rgb(210,6,40)" fg:x="7" fg:w="1"/><text x="0.9822%" y="687.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="661" width="0.1046%" height="15" fill="rgb(212,48,18)" fg:x="7" fg:w="1"/><text x="0.9822%" y="671.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="645" width="0.1046%" height="15" fill="rgb(230,214,11)" fg:x="7" fg:w="1"/><text x="0.9822%" y="655.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::join::_&lt;impl databend_query::sql::planner::binder::Binder&gt;::bind_join::_{{closure}} (1 samples, 0.10%)</title><rect x="0.7322%" y="629" width="0.1046%" height="15" fill="rgb(254,105,39)" fg:x="7" fg:w="1"/><text x="0.9822%" y="639.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="613" width="0.1046%" height="15" fill="rgb(245,158,5)" fg:x="7" fg:w="1"/><text x="0.9822%" y="623.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::join::JoinConditionResolver::resolve::_{{closure}} (1 samples, 0.10%)</title><rect x="0.7322%" y="597" width="0.1046%" height="15" fill="rgb(249,208,11)" fg:x="7" fg:w="1"/><text x="0.9822%" y="607.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="581" width="0.1046%" height="15" fill="rgb(210,39,28)" fg:x="7" fg:w="1"/><text x="0.9822%" y="591.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::join::JoinConditionResolver::resolve_on::_{{closure}} (1 samples, 0.10%)</title><rect x="0.7322%" y="565" width="0.1046%" height="15" fill="rgb(211,56,53)" fg:x="7" fg:w="1"/><text x="0.9822%" y="575.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="549" width="0.1046%" height="15" fill="rgb(226,201,30)" fg:x="7" fg:w="1"/><text x="0.9822%" y="559.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::scalar::ScalarBinder::bind_expr::_{{closure}} (1 samples, 0.10%)</title><rect x="0.7322%" y="533" width="0.1046%" height="15" fill="rgb(239,101,34)" fg:x="7" fg:w="1"/><text x="0.9822%" y="543.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="517" width="0.1046%" height="15" fill="rgb(226,209,5)" fg:x="7" fg:w="1"/><text x="0.9822%" y="527.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="501" width="0.1046%" height="15" fill="rgb(250,105,47)" fg:x="7" fg:w="1"/><text x="0.9822%" y="511.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve::_{{closure}} (1 samples, 0.10%)</title><rect x="0.7322%" y="485" width="0.1046%" height="15" fill="rgb(230,72,3)" fg:x="7" fg:w="1"/><text x="0.9822%" y="495.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="469" width="0.1046%" height="15" fill="rgb(232,218,39)" fg:x="7" fg:w="1"/><text x="0.9822%" y="479.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve_binary_op::_{{closure}} (1 samples, 0.10%)</title><rect x="0.7322%" y="453" width="0.1046%" height="15" fill="rgb(248,166,6)" fg:x="7" fg:w="1"/><text x="0.9822%" y="463.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="437" width="0.1046%" height="15" fill="rgb(247,89,20)" fg:x="7" fg:w="1"/><text x="0.9822%" y="447.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="421" width="0.1046%" height="15" fill="rgb(248,130,54)" fg:x="7" fg:w="1"/><text x="0.9822%" y="431.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve::_{{closure}} (1 samples, 0.10%)</title><rect x="0.7322%" y="405" width="0.1046%" height="15" fill="rgb(234,196,4)" fg:x="7" fg:w="1"/><text x="0.9822%" y="415.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="389" width="0.1046%" height="15" fill="rgb(250,143,31)" fg:x="7" fg:w="1"/><text x="0.9822%" y="399.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve_binary_op::_{{closure}} (1 samples, 0.10%)</title><rect x="0.7322%" y="373" width="0.1046%" height="15" fill="rgb(211,110,34)" fg:x="7" fg:w="1"/><text x="0.9822%" y="383.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.7322%" y="357" width="0.1046%" height="15" fill="rgb(215,124,48)" fg:x="7" fg:w="1"/><text x="0.9822%" y="367.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve_function::_{{closure}} (1 samples, 0.10%)</title><rect x="0.7322%" y="341" width="0.1046%" height="15" fill="rgb(216,46,13)" fg:x="7" fg:w="1"/><text x="0.9822%" y="351.50"></text></g><g><title>databend-query`common_functions::scalars::function_factory::FunctionFactory::instance (1 samples, 0.10%)</title><rect x="0.7322%" y="325" width="0.1046%" height="15" fill="rgb(205,184,25)" fg:x="7" fg:w="1"/><text x="0.9822%" y="335.50"></text></g><g><title>databend-query`&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="0.7322%" y="309" width="0.1046%" height="15" fill="rgb(228,1,10)" fg:x="7" fg:w="1"/><text x="0.9822%" y="319.50"></text></g><g><title>databend-query`once_cell::sync::Lazy&lt;T,F&gt;::force (1 samples, 0.10%)</title><rect x="0.7322%" y="293" width="0.1046%" height="15" fill="rgb(213,116,27)" fg:x="7" fg:w="1"/><text x="0.9822%" y="303.50"></text></g><g><title>databend-query`once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.10%)</title><rect x="0.7322%" y="277" width="0.1046%" height="15" fill="rgb(241,95,50)" fg:x="7" fg:w="1"/><text x="0.9822%" y="287.50"></text></g><g><title>databend-query`once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.10%)</title><rect x="0.7322%" y="261" width="0.1046%" height="15" fill="rgb(238,48,32)" fg:x="7" fg:w="1"/><text x="0.9822%" y="271.50"></text></g><g><title>databend-query`once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.10%)</title><rect x="0.7322%" y="245" width="0.1046%" height="15" fill="rgb(235,113,49)" fg:x="7" fg:w="1"/><text x="0.9822%" y="255.50"></text></g><g><title>databend-query`once_cell::imp::initialize_inner (1 samples, 0.10%)</title><rect x="0.7322%" y="229" width="0.1046%" height="15" fill="rgb(205,127,43)" fg:x="7" fg:w="1"/><text x="0.9822%" y="239.50"></text></g><g><title>databend-query`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (1 samples, 0.10%)</title><rect x="0.7322%" y="213" width="0.1046%" height="15" fill="rgb(250,162,2)" fg:x="7" fg:w="1"/><text x="0.9822%" y="223.50"></text></g><g><title>databend-query`once_cell::sync::OnceCell&lt;T&gt;::get_or_init::_{{closure}} (1 samples, 0.10%)</title><rect x="0.7322%" y="197" width="0.1046%" height="15" fill="rgb(220,13,41)" fg:x="7" fg:w="1"/><text x="0.9822%" y="207.50"></text></g><g><title>databend-query`once_cell::sync::Lazy&lt;T,F&gt;::force::_{{closure}} (1 samples, 0.10%)</title><rect x="0.7322%" y="181" width="0.1046%" height="15" fill="rgb(249,221,25)" fg:x="7" fg:w="1"/><text x="0.9822%" y="191.50"></text></g><g><title>databend-query`core::ops::function::FnOnce::call_once (1 samples, 0.10%)</title><rect x="0.7322%" y="165" width="0.1046%" height="15" fill="rgb(215,208,19)" fg:x="7" fg:w="1"/><text x="0.9822%" y="175.50"></text></g><g><title>databend-query`core::ops::function::FnOnce::call_once (1 samples, 0.10%)</title><rect x="0.7322%" y="149" width="0.1046%" height="15" fill="rgb(236,175,2)" fg:x="7" fg:w="1"/><text x="0.9822%" y="159.50"></text></g><g><title>databend-query`common_functions::scalars::function_factory::FUNCTION_FACTORY::_{{closure}} (1 samples, 0.10%)</title><rect x="0.7322%" y="133" width="0.1046%" height="15" fill="rgb(241,52,2)" fg:x="7" fg:w="1"/><text x="0.9822%" y="143.50"></text></g><g><title>databend-query`common_functions::scalars::others::other::OtherFunction::register (1 samples, 0.10%)</title><rect x="0.7322%" y="117" width="0.1046%" height="15" fill="rgb(248,140,14)" fg:x="7" fg:w="1"/><text x="0.9822%" y="127.50"></text></g><g><title>databend-query`common_functions::scalars::others::type_of::TypeOfFunction::desc (1 samples, 0.10%)</title><rect x="0.7322%" y="101" width="0.1046%" height="15" fill="rgb(253,22,42)" fg:x="7" fg:w="1"/><text x="0.9822%" y="111.50"></text></g><g><title>databend-query`alloc::alloc::exchange_malloc (1 samples, 0.10%)</title><rect x="0.7322%" y="85" width="0.1046%" height="15" fill="rgb(234,61,47)" fg:x="7" fg:w="1"/><text x="0.9822%" y="95.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="0.7322%" y="69" width="0.1046%" height="15" fill="rgb(208,226,15)" fg:x="7" fg:w="1"/><text x="0.9822%" y="79.50"></text></g><g><title>databend-query`alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="0.7322%" y="53" width="0.1046%" height="15" fill="rgb(217,221,4)" fg:x="7" fg:w="1"/><text x="0.9822%" y="63.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.10%)</title><rect x="0.7322%" y="37" width="0.1046%" height="15" fill="rgb(212,174,34)" fg:x="7" fg:w="1"/><text x="0.9822%" y="47.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.8368%" y="1269" width="0.1046%" height="15" fill="rgb(253,83,4)" fg:x="8" fg:w="1"/><text x="1.0868%" y="1279.50"></text></g><g><title>databend-query`common_meta_raft_store::state_machine::sm::StateMachine::open::_{{closure}} (1 samples, 0.10%)</title><rect x="0.8368%" y="1253" width="0.1046%" height="15" fill="rgb(250,195,49)" fg:x="8" fg:w="1"/><text x="1.0868%" y="1263.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.8368%" y="1237" width="0.1046%" height="15" fill="rgb(241,192,25)" fg:x="8" fg:w="1"/><text x="1.0868%" y="1247.50"></text></g><g><title>databend-query`common_meta_raft_store::state_machine::sm::StateMachine::open::_{{closure}}::_{{closure}} (1 samples, 0.10%)</title><rect x="0.8368%" y="1221" width="0.1046%" height="15" fill="rgb(208,124,10)" fg:x="8" fg:w="1"/><text x="1.0868%" y="1231.50"></text></g><g><title>databend-query`common_meta_sled_store::sled_tree::AsKeySpace&lt;KV&gt;::get (1 samples, 0.10%)</title><rect x="0.8368%" y="1205" width="0.1046%" height="15" fill="rgb(222,33,0)" fg:x="8" fg:w="1"/><text x="1.0868%" y="1215.50"></text></g><g><title>databend-query`common_meta_sled_store::sled_tree::SledTree::get (1 samples, 0.10%)</title><rect x="0.8368%" y="1189" width="0.1046%" height="15" fill="rgb(234,209,28)" fg:x="8" fg:w="1"/><text x="1.0868%" y="1199.50"></text></g><g><title>databend-query`sled::tree::Tree::get (1 samples, 0.10%)</title><rect x="0.8368%" y="1173" width="0.1046%" height="15" fill="rgb(224,11,23)" fg:x="8" fg:w="1"/><text x="1.0868%" y="1183.50"></text></g><g><title>databend-query`sled::tree::Tree::get_inner (1 samples, 0.10%)</title><rect x="0.8368%" y="1157" width="0.1046%" height="15" fill="rgb(232,99,1)" fg:x="8" fg:w="1"/><text x="1.0868%" y="1167.50"></text></g><g><title>databend-query`sled::tree::Tree::view_for_key (1 samples, 0.10%)</title><rect x="0.8368%" y="1141" width="0.1046%" height="15" fill="rgb(237,95,45)" fg:x="8" fg:w="1"/><text x="1.0868%" y="1151.50"></text></g><g><title>databend-query`sled::tree::Tree::view_for_pid (1 samples, 0.10%)</title><rect x="0.8368%" y="1125" width="0.1046%" height="15" fill="rgb(208,109,11)" fg:x="8" fg:w="1"/><text x="1.0868%" y="1135.50"></text></g><g><title>databend-query`sled::pagecache::PageCacheInner::get (1 samples, 0.10%)</title><rect x="0.8368%" y="1109" width="0.1046%" height="15" fill="rgb(216,190,48)" fg:x="8" fg:w="1"/><text x="1.0868%" y="1119.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::collect (1 samples, 0.10%)</title><rect x="0.8368%" y="1093" width="0.1046%" height="15" fill="rgb(251,171,36)" fg:x="8" fg:w="1"/><text x="1.0868%" y="1103.50"></text></g><g><title>databend-query`&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="0.8368%" y="1077" width="0.1046%" height="15" fill="rgb(230,62,22)" fg:x="8" fg:w="1"/><text x="1.0868%" y="1087.50"></text></g><g><title>databend-query`core::iter::adapters::try_process (1 samples, 0.10%)</title><rect x="0.8368%" y="1061" width="0.1046%" height="15" fill="rgb(225,114,35)" fg:x="8" fg:w="1"/><text x="1.0868%" y="1071.50"></text></g><g><title>databend-query`&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::_{{closure}} (1 samples, 0.10%)</title><rect x="0.8368%" y="1045" width="0.1046%" height="15" fill="rgb(215,118,42)" fg:x="8" fg:w="1"/><text x="1.0868%" y="1055.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::collect (1 samples, 0.10%)</title><rect x="0.8368%" y="1029" width="0.1046%" height="15" fill="rgb(243,119,21)" fg:x="8" fg:w="1"/><text x="1.0868%" y="1039.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="0.8368%" y="1013" width="0.1046%" height="15" fill="rgb(252,177,53)" fg:x="8" fg:w="1"/><text x="1.0868%" y="1023.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="0.8368%" y="997" width="0.1046%" height="15" fill="rgb(237,209,29)" fg:x="8" fg:w="1"/><text x="1.0868%" y="1007.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="0.8368%" y="981" width="0.1046%" height="15" fill="rgb(212,65,23)" fg:x="8" fg:w="1"/><text x="1.0868%" y="991.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="0.8368%" y="965" width="0.1046%" height="15" fill="rgb(230,222,46)" fg:x="8" fg:w="1"/><text x="1.0868%" y="975.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.10%)</title><rect x="0.8368%" y="949" width="0.1046%" height="15" fill="rgb(215,135,32)" fg:x="8" fg:w="1"/><text x="1.0868%" y="959.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.10%)</title><rect x="0.8368%" y="933" width="0.1046%" height="15" fill="rgb(246,101,22)" fg:x="8" fg:w="1"/><text x="1.0868%" y="943.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.21%)</title><rect x="0.8368%" y="1301" width="0.2092%" height="15" fill="rgb(206,107,13)" fg:x="8" fg:w="2"/><text x="1.0868%" y="1311.50"></text></g><g><title>databend-query`common_meta_embedded::meta_embedded::MetaEmbedded::new::_{{closure}} (2 samples, 0.21%)</title><rect x="0.8368%" y="1285" width="0.2092%" height="15" fill="rgb(250,100,44)" fg:x="8" fg:w="2"/><text x="1.0868%" y="1295.50"></text></g><g><title>databend-query`common_meta_raft_store::config::RaftConfig::empty (1 samples, 0.10%)</title><rect x="0.9414%" y="1269" width="0.1046%" height="15" fill="rgb(231,147,38)" fg:x="9" fg:w="1"/><text x="1.1914%" y="1279.50"></text></g><g><title>databend-query`clap::derive::Parser::parse_from (1 samples, 0.10%)</title><rect x="0.9414%" y="1253" width="0.1046%" height="15" fill="rgb(229,8,40)" fg:x="9" fg:w="1"/><text x="1.1914%" y="1263.50"></text></g><g><title>databend-query`clap::build::command::App::get_matches_from (1 samples, 0.10%)</title><rect x="0.9414%" y="1237" width="0.1046%" height="15" fill="rgb(221,135,30)" fg:x="9" fg:w="1"/><text x="1.1914%" y="1247.50"></text></g><g><title>databend-query`clap::build::command::App::try_get_matches_from_mut (1 samples, 0.10%)</title><rect x="0.9414%" y="1221" width="0.1046%" height="15" fill="rgb(249,193,18)" fg:x="9" fg:w="1"/><text x="1.1914%" y="1231.50"></text></g><g><title>databend-query`clap::build::command::App::_do_parse (1 samples, 0.10%)</title><rect x="0.9414%" y="1205" width="0.1046%" height="15" fill="rgb(209,133,39)" fg:x="9" fg:w="1"/><text x="1.1914%" y="1215.50"></text></g><g><title>databend-query`clap::parse::parser::Parser::get_matches_with (1 samples, 0.10%)</title><rect x="0.9414%" y="1189" width="0.1046%" height="15" fill="rgb(232,100,14)" fg:x="9" fg:w="1"/><text x="1.1914%" y="1199.50"></text></g><g><title>databend-query`clap::parse::validator::Validator::validate (1 samples, 0.10%)</title><rect x="0.9414%" y="1173" width="0.1046%" height="15" fill="rgb(224,185,1)" fg:x="9" fg:w="1"/><text x="1.1914%" y="1183.50"></text></g><g><title>databend-query`clap::parse::validator::Validator::validate_conflicts (1 samples, 0.10%)</title><rect x="0.9414%" y="1157" width="0.1046%" height="15" fill="rgb(223,139,8)" fg:x="9" fg:w="1"/><text x="1.1914%" y="1167.50"></text></g><g><title>databend-query`clap::parse::validator::Validator::validate_exclusive (1 samples, 0.10%)</title><rect x="0.9414%" y="1141" width="0.1046%" height="15" fill="rgb(232,213,38)" fg:x="9" fg:w="1"/><text x="1.1914%" y="1151.50"></text></g><g><title>databend-query`&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="1.0460%" y="1301" width="0.1046%" height="15" fill="rgb(207,94,22)" fg:x="10" fg:w="1"/><text x="1.2960%" y="1311.50"></text></g><g><title>databend-query`once_cell::sync::Lazy&lt;T,F&gt;::force (1 samples, 0.10%)</title><rect x="1.0460%" y="1285" width="0.1046%" height="15" fill="rgb(219,183,54)" fg:x="10" fg:w="1"/><text x="1.2960%" y="1295.50"></text></g><g><title>databend-query`once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.10%)</title><rect x="1.0460%" y="1269" width="0.1046%" height="15" fill="rgb(216,185,54)" fg:x="10" fg:w="1"/><text x="1.2960%" y="1279.50"></text></g><g><title>databend-query`once_cell::sync::OnceCell&lt;T&gt;::get (1 samples, 0.10%)</title><rect x="1.0460%" y="1253" width="0.1046%" height="15" fill="rgb(254,217,39)" fg:x="10" fg:w="1"/><text x="1.2960%" y="1263.50"></text></g><g><title>databend-query`&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="1.1506%" y="1157" width="0.1046%" height="15" fill="rgb(240,178,23)" fg:x="11" fg:w="1"/><text x="1.4006%" y="1167.50"></text></g><g><title>databend-query`&lt;sled::pagecache::iterator::LogIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="1.1506%" y="1141" width="0.1046%" height="15" fill="rgb(218,11,47)" fg:x="11" fg:w="1"/><text x="1.4006%" y="1151.50"></text></g><g><title>databend-query`sled::pagecache::logger::read_message (1 samples, 0.10%)</title><rect x="1.1506%" y="1125" width="0.1046%" height="15" fill="rgb(218,51,51)" fg:x="11" fg:w="1"/><text x="1.4006%" y="1135.50"></text></g><g><title>databend-query`&lt;sled::pagecache::logger::MessageHeader as sled::serialization::Serialize&gt;::deserialize (1 samples, 0.10%)</title><rect x="1.1506%" y="1109" width="0.1046%" height="15" fill="rgb(238,126,27)" fg:x="11" fg:w="1"/><text x="1.4006%" y="1119.50"></text></g><g><title>databend-query`core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.10%)</title><rect x="1.1506%" y="1093" width="0.1046%" height="15" fill="rgb(249,202,22)" fg:x="11" fg:w="1"/><text x="1.4006%" y="1103.50"></text></g><g><title>databend-query`sled::config::RunningConfig::get_snapshot_files (1 samples, 0.10%)</title><rect x="1.2552%" y="1141" width="0.1046%" height="15" fill="rgb(254,195,49)" fg:x="12" fg:w="1"/><text x="1.5052%" y="1151.50"></text></g><g><title>databend-query`std::path::Path::join (1 samples, 0.10%)</title><rect x="1.2552%" y="1125" width="0.1046%" height="15" fill="rgb(208,123,14)" fg:x="12" fg:w="1"/><text x="1.5052%" y="1135.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::path::PathBuf&gt; (1 samples, 0.10%)</title><rect x="1.2552%" y="1109" width="0.1046%" height="15" fill="rgb(224,200,8)" fg:x="12" fg:w="1"/><text x="1.5052%" y="1119.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::ffi::os_str::OsString&gt; (1 samples, 0.10%)</title><rect x="1.2552%" y="1093" width="0.1046%" height="15" fill="rgb(217,61,36)" fg:x="12" fg:w="1"/><text x="1.5052%" y="1103.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::sys::unix::os_str::Buf&gt; (1 samples, 0.10%)</title><rect x="1.2552%" y="1077" width="0.1046%" height="15" fill="rgb(206,35,45)" fg:x="12" fg:w="1"/><text x="1.5052%" y="1087.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.10%)</title><rect x="1.2552%" y="1061" width="0.1046%" height="15" fill="rgb(217,65,33)" fg:x="12" fg:w="1"/><text x="1.5052%" y="1071.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.10%)</title><rect x="1.2552%" y="1045" width="0.1046%" height="15" fill="rgb(222,158,48)" fg:x="12" fg:w="1"/><text x="1.5052%" y="1055.50"></text></g><g><title>databend-query`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="1.2552%" y="1029" width="0.1046%" height="15" fill="rgb(254,2,54)" fg:x="12" fg:w="1"/><text x="1.5052%" y="1039.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.10%)</title><rect x="1.2552%" y="1013" width="0.1046%" height="15" fill="rgb(250,143,38)" fg:x="12" fg:w="1"/><text x="1.5052%" y="1023.50"></text></g><g><title>databend-query`core::num::_&lt;impl usize&gt;::checked_mul (1 samples, 0.10%)</title><rect x="1.2552%" y="997" width="0.1046%" height="15" fill="rgb(248,25,0)" fg:x="12" fg:w="1"/><text x="1.5052%" y="1007.50"></text></g><g><title>databend-query`sled::config::Config::open (3 samples, 0.31%)</title><rect x="1.1506%" y="1253" width="0.3138%" height="15" fill="rgb(206,152,27)" fg:x="11" fg:w="3"/><text x="1.4006%" y="1263.50"></text></g><g><title>databend-query`sled::db::Db::start_inner (3 samples, 0.31%)</title><rect x="1.1506%" y="1237" width="0.3138%" height="15" fill="rgb(240,77,30)" fg:x="11" fg:w="3"/><text x="1.4006%" y="1247.50"></text></g><g><title>databend-query`sled::context::Context::start (3 samples, 0.31%)</title><rect x="1.1506%" y="1221" width="0.3138%" height="15" fill="rgb(231,5,3)" fg:x="11" fg:w="3"/><text x="1.4006%" y="1231.50"></text></g><g><title>databend-query`sled::pagecache::PageCache::start (3 samples, 0.31%)</title><rect x="1.1506%" y="1205" width="0.3138%" height="15" fill="rgb(207,226,32)" fg:x="11" fg:w="3"/><text x="1.4006%" y="1215.50"></text></g><g><title>databend-query`sled::pagecache::snapshot::read_snapshot_or_default (3 samples, 0.31%)</title><rect x="1.1506%" y="1189" width="0.3138%" height="15" fill="rgb(222,207,47)" fg:x="11" fg:w="3"/><text x="1.4006%" y="1199.50"></text></g><g><title>databend-query`sled::pagecache::snapshot::advance_snapshot (3 samples, 0.31%)</title><rect x="1.1506%" y="1173" width="0.3138%" height="15" fill="rgb(229,115,45)" fg:x="11" fg:w="3"/><text x="1.4006%" y="1183.50"></text></g><g><title>databend-query`sled::pagecache::snapshot::write_snapshot (2 samples, 0.21%)</title><rect x="1.2552%" y="1157" width="0.2092%" height="15" fill="rgb(224,191,6)" fg:x="12" fg:w="2"/><text x="1.5052%" y="1167.50"></text></g><g><title>databend-query`std::fs::File::sync_all (1 samples, 0.10%)</title><rect x="1.3598%" y="1141" width="0.1046%" height="15" fill="rgb(230,227,24)" fg:x="13" fg:w="1"/><text x="1.6098%" y="1151.50"></text></g><g><title>libsystem_kernel.dylib`__fcntl (1 samples, 0.10%)</title><rect x="1.3598%" y="1125" width="0.1046%" height="15" fill="rgb(228,80,19)" fg:x="13" fg:w="1"/><text x="1.6098%" y="1135.50"></text></g><g><title>databend-query`common_meta_embedded::meta_embedded::MetaEmbedded::init_global_meta_store::_{{closure}} (7 samples, 0.73%)</title><rect x="0.8368%" y="1317" width="0.7322%" height="15" fill="rgb(247,229,0)" fg:x="8" fg:w="7"/><text x="1.0868%" y="1327.50"></text></g><g><title>databend-query`common_meta_sled_store::db::init_sled_db (4 samples, 0.42%)</title><rect x="1.1506%" y="1301" width="0.4184%" height="15" fill="rgb(237,194,15)" fg:x="11" fg:w="4"/><text x="1.4006%" y="1311.50"></text></g><g><title>databend-query`common_meta_sled_store::db::GlobalSledDb::new (4 samples, 0.42%)</title><rect x="1.1506%" y="1285" width="0.4184%" height="15" fill="rgb(219,203,20)" fg:x="11" fg:w="4"/><text x="1.4006%" y="1295.50"></text></g><g><title>databend-query`sled::open (4 samples, 0.42%)</title><rect x="1.1506%" y="1269" width="0.4184%" height="15" fill="rgb(234,128,8)" fg:x="11" fg:w="4"/><text x="1.4006%" y="1279.50"></text></g><g><title>databend-query`sled::config::Config::path (1 samples, 0.10%)</title><rect x="1.4644%" y="1253" width="0.1046%" height="15" fill="rgb(248,202,8)" fg:x="14" fg:w="1"/><text x="1.7144%" y="1263.50"></text></g><g><title>databend-query`std::path::_&lt;impl core::convert::AsRef&lt;std::path::Path&gt; for alloc::string::String&gt;::as_ref (1 samples, 0.10%)</title><rect x="1.4644%" y="1237" width="0.1046%" height="15" fill="rgb(206,104,37)" fg:x="14" fg:w="1"/><text x="1.7144%" y="1247.50"></text></g><g><title>databend-query`std::path::Path::new (1 samples, 0.10%)</title><rect x="1.4644%" y="1221" width="0.1046%" height="15" fill="rgb(223,8,27)" fg:x="14" fg:w="1"/><text x="1.7144%" y="1231.50"></text></g><g><title>databend-query`std::ffi::os_str::_&lt;impl core::convert::AsRef&lt;std::ffi::os_str::OsStr&gt; for alloc::string::String&gt;::as_ref (1 samples, 0.10%)</title><rect x="1.4644%" y="1205" width="0.1046%" height="15" fill="rgb(216,217,28)" fg:x="14" fg:w="1"/><text x="1.7144%" y="1215.50"></text></g><g><title>databend-query`&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="1.4644%" y="1189" width="0.1046%" height="15" fill="rgb(249,199,1)" fg:x="14" fg:w="1"/><text x="1.7144%" y="1199.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="1.4644%" y="1173" width="0.1046%" height="15" fill="rgb(240,85,17)" fg:x="14" fg:w="1"/><text x="1.7144%" y="1183.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.10%)</title><rect x="1.4644%" y="1157" width="0.1046%" height="15" fill="rgb(206,108,45)" fg:x="14" fg:w="1"/><text x="1.7144%" y="1167.50"></text></g><g><title>databend-query`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.10%)</title><rect x="1.4644%" y="1141" width="0.1046%" height="15" fill="rgb(245,210,41)" fg:x="14" fg:w="1"/><text x="1.7144%" y="1151.50"></text></g><g><title>databend-query`databend_query::clusters::cluster::ClusterDiscovery::register_to_metastore::_{{closure}} (1 samples, 0.10%)</title><rect x="1.5690%" y="1317" width="0.1046%" height="15" fill="rgb(206,13,37)" fg:x="15" fg:w="1"/><text x="1.8190%" y="1327.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="1.5690%" y="1301" width="0.1046%" height="15" fill="rgb(250,61,18)" fg:x="15" fg:w="1"/><text x="1.8190%" y="1311.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="1.5690%" y="1285" width="0.1046%" height="15" fill="rgb(235,172,48)" fg:x="15" fg:w="1"/><text x="1.8190%" y="1295.50"></text></g><g><title>databend-query`&lt;common_management::cluster::cluster_mgr::ClusterMgr as common_management::cluster::cluster_api::ClusterApi&gt;::add_node::_{{closure}} (1 samples, 0.10%)</title><rect x="1.5690%" y="1269" width="0.1046%" height="15" fill="rgb(249,201,17)" fg:x="15" fg:w="1"/><text x="1.8190%" y="1279.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="1.5690%" y="1253" width="0.1046%" height="15" fill="rgb(219,208,6)" fg:x="15" fg:w="1"/><text x="1.8190%" y="1263.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="1.5690%" y="1237" width="0.1046%" height="15" fill="rgb(248,31,23)" fg:x="15" fg:w="1"/><text x="1.8190%" y="1247.50"></text></g><g><title>databend-query`common_meta_embedded::kv_api_impl::_&lt;impl common_meta_api::kv_api::KVApi for common_meta_embedded::meta_embedded::MetaEmbedded&gt;::upsert_kv::_{{closure}} (1 samples, 0.10%)</title><rect x="1.5690%" y="1221" width="0.1046%" height="15" fill="rgb(245,15,42)" fg:x="15" fg:w="1"/><text x="1.8190%" y="1231.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="1.5690%" y="1205" width="0.1046%" height="15" fill="rgb(222,217,39)" fg:x="15" fg:w="1"/><text x="1.8190%" y="1215.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="1.5690%" y="1189" width="0.1046%" height="15" fill="rgb(210,219,27)" fg:x="15" fg:w="1"/><text x="1.8190%" y="1199.50"></text></g><g><title>databend-query`&lt;T as common_meta_api::kv_api::KVApi&gt;::upsert_kv::_{{closure}} (1 samples, 0.10%)</title><rect x="1.5690%" y="1173" width="0.1046%" height="15" fill="rgb(252,166,36)" fg:x="15" fg:w="1"/><text x="1.8190%" y="1183.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="1.5690%" y="1157" width="0.1046%" height="15" fill="rgb(245,132,34)" fg:x="15" fg:w="1"/><text x="1.8190%" y="1167.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="1.5690%" y="1141" width="0.1046%" height="15" fill="rgb(236,54,3)" fg:x="15" fg:w="1"/><text x="1.8190%" y="1151.50"></text></g><g><title>databend-query`common_meta_raft_store::state_machine::sm_kv_api_impl::_&lt;impl common_meta_api::kv_api::KVApi for common_meta_raft_store::state_machine::sm::StateMachine&gt;::upsert_kv::_{{closure}} (1 samples, 0.10%)</title><rect x="1.5690%" y="1125" width="0.1046%" height="15" fill="rgb(241,173,43)" fg:x="15" fg:w="1"/><text x="1.8190%" y="1135.50"></text></g><g><title>databend-query`common_meta_sled_store::sled_tree::SledTree::txn (1 samples, 0.10%)</title><rect x="1.5690%" y="1109" width="0.1046%" height="15" fill="rgb(215,190,9)" fg:x="15" fg:w="1"/><text x="1.8190%" y="1119.50"></text></g><g><title>databend-query`sled::tree::Tree::transaction (1 samples, 0.10%)</title><rect x="1.5690%" y="1093" width="0.1046%" height="15" fill="rgb(242,101,16)" fg:x="15" fg:w="1"/><text x="1.8190%" y="1103.50"></text></g><g><title>databend-query`sled::transaction::Transactional::transaction (1 samples, 0.10%)</title><rect x="1.5690%" y="1077" width="0.1046%" height="15" fill="rgb(223,190,21)" fg:x="15" fg:w="1"/><text x="1.8190%" y="1087.50"></text></g><g><title>databend-query`common_meta_sled_store::sled_tree::SledTree::txn::_{{closure}} (1 samples, 0.10%)</title><rect x="1.5690%" y="1061" width="0.1046%" height="15" fill="rgb(215,228,25)" fg:x="15" fg:w="1"/><text x="1.8190%" y="1071.50"></text></g><g><title>databend-query`common_meta_raft_store::state_machine::sm_kv_api_impl::_&lt;impl common_meta_api::kv_api::KVApi for common_meta_raft_store::state_machine::sm::StateMachine&gt;::upsert_kv::_{{closure}}::_{{closure}} (1 samples, 0.10%)</title><rect x="1.5690%" y="1045" width="0.1046%" height="15" fill="rgb(225,36,22)" fg:x="15" fg:w="1"/><text x="1.8190%" y="1055.50"></text></g><g><title>databend-query`common_meta_raft_store::state_machine::sm::StateMachine::apply_cmd (1 samples, 0.10%)</title><rect x="1.5690%" y="1029" width="0.1046%" height="15" fill="rgb(251,106,46)" fg:x="15" fg:w="1"/><text x="1.8190%" y="1039.50"></text></g><g><title>databend-query`common_meta_raft_store::state_machine::sm::StateMachine::apply_update_kv_cmd (1 samples, 0.10%)</title><rect x="1.5690%" y="1013" width="0.1046%" height="15" fill="rgb(208,90,1)" fg:x="15" fg:w="1"/><text x="1.8190%" y="1023.50"></text></g><g><title>databend-query`common_meta_raft_store::state_machine::sm::StateMachine::txn_sub_tree_upsert (1 samples, 0.10%)</title><rect x="1.5690%" y="997" width="0.1046%" height="15" fill="rgb(243,10,4)" fg:x="15" fg:w="1"/><text x="1.8190%" y="1007.50"></text></g><g><title>databend-query`common_meta_raft_store::state_machine::sm::StateMachine::txn_sub_tree_do_update (1 samples, 0.10%)</title><rect x="1.5690%" y="981" width="0.1046%" height="15" fill="rgb(212,137,27)" fg:x="15" fg:w="1"/><text x="1.8190%" y="991.50"></text></g><g><title>databend-query`common_meta_raft_store::state_machine::sm::StateMachine::txn_incr_seq (1 samples, 0.10%)</title><rect x="1.5690%" y="965" width="0.1046%" height="15" fill="rgb(231,220,49)" fg:x="15" fg:w="1"/><text x="1.8190%" y="975.50"></text></g><g><title>databend-query`&lt;common_meta_sled_store::sled_tree::AsTxnKeySpace&lt;KV&gt; as common_meta_sled_store::store::Store&lt;KV&gt;&gt;::update_and_fetch (1 samples, 0.10%)</title><rect x="1.5690%" y="949" width="0.1046%" height="15" fill="rgb(237,96,20)" fg:x="15" fg:w="1"/><text x="1.8190%" y="959.50"></text></g><g><title>databend-query`sled::transaction::TransactionalTree::insert (1 samples, 0.10%)</title><rect x="1.5690%" y="933" width="0.1046%" height="15" fill="rgb(239,229,30)" fg:x="15" fg:w="1"/><text x="1.8190%" y="943.50"></text></g><g><title>databend-query`sled::batch::Batch::insert (1 samples, 0.10%)</title><rect x="1.5690%" y="917" width="0.1046%" height="15" fill="rgb(219,65,33)" fg:x="15" fg:w="1"/><text x="1.8190%" y="927.50"></text></g><g><title>databend-query`std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.10%)</title><rect x="1.5690%" y="901" width="0.1046%" height="15" fill="rgb(243,134,7)" fg:x="15" fg:w="1"/><text x="1.8190%" y="911.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.10%)</title><rect x="1.5690%" y="885" width="0.1046%" height="15" fill="rgb(216,177,54)" fg:x="15" fg:w="1"/><text x="1.8190%" y="895.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.10%)</title><rect x="1.5690%" y="869" width="0.1046%" height="15" fill="rgb(211,160,20)" fg:x="15" fg:w="1"/><text x="1.8190%" y="879.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="1.5690%" y="853" width="0.1046%" height="15" fill="rgb(239,85,39)" fg:x="15" fg:w="1"/><text x="1.8190%" y="863.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.10%)</title><rect x="1.5690%" y="837" width="0.1046%" height="15" fill="rgb(232,125,22)" fg:x="15" fg:w="1"/><text x="1.8190%" y="847.50"></text></g><g><title>databend-query`hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.10%)</title><rect x="1.5690%" y="821" width="0.1046%" height="15" fill="rgb(244,57,34)" fg:x="15" fg:w="1"/><text x="1.8190%" y="831.50"></text></g><g><title>databend-query`hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.10%)</title><rect x="1.5690%" y="805" width="0.1046%" height="15" fill="rgb(214,203,32)" fg:x="15" fg:w="1"/><text x="1.8190%" y="815.50"></text></g><g><title>databend-query`hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.10%)</title><rect x="1.5690%" y="789" width="0.1046%" height="15" fill="rgb(207,58,43)" fg:x="15" fg:w="1"/><text x="1.8190%" y="799.50"></text></g><g><title>databend-query`hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.10%)</title><rect x="1.5690%" y="773" width="0.1046%" height="15" fill="rgb(215,193,15)" fg:x="15" fg:w="1"/><text x="1.8190%" y="783.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="1.5690%" y="757" width="0.1046%" height="15" fill="rgb(232,15,44)" fg:x="15" fg:w="1"/><text x="1.8190%" y="767.50"></text></g><g><title>databend-query`alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="1.5690%" y="741" width="0.1046%" height="15" fill="rgb(212,3,48)" fg:x="15" fg:w="1"/><text x="1.8190%" y="751.50"></text></g><g><title>databend-query`alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="1.5690%" y="725" width="0.1046%" height="15" fill="rgb(218,128,7)" fg:x="15" fg:w="1"/><text x="1.8190%" y="735.50"></text></g><g><title>databend-query`core::alloc::layout::Layout::align (1 samples, 0.10%)</title><rect x="1.5690%" y="709" width="0.1046%" height="15" fill="rgb(226,216,39)" fg:x="15" fg:w="1"/><text x="1.8190%" y="719.50"></text></g><g><title>databend-query`core::num::nonzero::NonZeroUsize::new_unchecked (1 samples, 0.10%)</title><rect x="1.5690%" y="693" width="0.1046%" height="15" fill="rgb(243,47,51)" fg:x="15" fg:w="1"/><text x="1.8190%" y="703.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="1.6736%" y="1285" width="0.1046%" height="15" fill="rgb(241,183,40)" fg:x="16" fg:w="1"/><text x="1.9236%" y="1295.50"></text></g><g><title>databend-query`databend_query::databases::information_schema::information_schema_database::InformationSchemaDatabase::create (1 samples, 0.10%)</title><rect x="1.7782%" y="1173" width="0.1046%" height="15" fill="rgb(231,217,32)" fg:x="17" fg:w="1"/><text x="2.0282%" y="1183.50"></text></g><g><title>databend-query`databend_query::storages::information_schema::columns_table::ColumnsTable::create (1 samples, 0.10%)</title><rect x="1.7782%" y="1157" width="0.1046%" height="15" fill="rgb(229,61,38)" fg:x="17" fg:w="1"/><text x="2.0282%" y="1167.50"></text></g><g><title>databend-query`databend_query::storages::view::view_table::ViewTable::create (1 samples, 0.10%)</title><rect x="1.7782%" y="1141" width="0.1046%" height="15" fill="rgb(225,210,5)" fg:x="17" fg:w="1"/><text x="2.0282%" y="1151.50"></text></g><g><title>databend-query`alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (1 samples, 0.10%)</title><rect x="1.7782%" y="1125" width="0.1046%" height="15" fill="rgb(231,79,45)" fg:x="17" fg:w="1"/><text x="2.0282%" y="1135.50"></text></g><g><title>databend-query`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.10%)</title><rect x="1.7782%" y="1109" width="0.1046%" height="15" fill="rgb(224,100,7)" fg:x="17" fg:w="1"/><text x="2.0282%" y="1119.50"></text></g><g><title>databend-query`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1 samples, 0.10%)</title><rect x="1.7782%" y="1093" width="0.1046%" height="15" fill="rgb(241,198,18)" fg:x="17" fg:w="1"/><text x="2.0282%" y="1103.50"></text></g><g><title>databend-query`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1 samples, 0.10%)</title><rect x="1.7782%" y="1077" width="0.1046%" height="15" fill="rgb(252,97,53)" fg:x="17" fg:w="1"/><text x="2.0282%" y="1087.50"></text></g><g><title>databend-query`alloc::slice::_&lt;impl [T]&gt;::into_vec (1 samples, 0.10%)</title><rect x="1.8828%" y="1157" width="0.1046%" height="15" fill="rgb(220,88,7)" fg:x="18" fg:w="1"/><text x="2.1328%" y="1167.50"></text></g><g><title>databend-query`alloc::slice::hack::into_vec (1 samples, 0.10%)</title><rect x="1.8828%" y="1141" width="0.1046%" height="15" fill="rgb(213,176,14)" fg:x="18" fg:w="1"/><text x="2.1328%" y="1151.50"></text></g><g><title>databend-query`alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (1 samples, 0.10%)</title><rect x="1.8828%" y="1125" width="0.1046%" height="15" fill="rgb(246,73,7)" fg:x="18" fg:w="1"/><text x="2.1328%" y="1135.50"></text></g><g><title>databend-query`&lt;core::ptr::unique::Unique&lt;T&gt; as core::convert::From&lt;&amp;mut T&gt;&gt;::from (1 samples, 0.10%)</title><rect x="1.8828%" y="1109" width="0.1046%" height="15" fill="rgb(245,64,36)" fg:x="18" fg:w="1"/><text x="2.1328%" y="1119.50"></text></g><g><title>databend-query`databend_query::catalogs::default::immutable_catalog::ImmutableCatalog::try_create_with_config::_{{closure}} (3 samples, 0.31%)</title><rect x="1.7782%" y="1189" width="0.3138%" height="15" fill="rgb(245,80,10)" fg:x="17" fg:w="3"/><text x="2.0282%" y="1199.50"></text></g><g><title>databend-query`databend_query::databases::system::system_database::SystemDatabase::create (2 samples, 0.21%)</title><rect x="1.8828%" y="1173" width="0.2092%" height="15" fill="rgb(232,107,50)" fg:x="18" fg:w="2"/><text x="2.1328%" y="1183.50"></text></g><g><title>databend-query`databend_query::storages::system::one_table::OneTable::create (1 samples, 0.10%)</title><rect x="1.9874%" y="1157" width="0.1046%" height="15" fill="rgb(253,3,0)" fg:x="19" fg:w="1"/><text x="2.2374%" y="1167.50"></text></g><g><title>databend-query`common_datavalues::data_schema::DataSchemaRefExt::create (1 samples, 0.10%)</title><rect x="1.9874%" y="1141" width="0.1046%" height="15" fill="rgb(212,99,53)" fg:x="19" fg:w="1"/><text x="2.2374%" y="1151.50"></text></g><g><title>databend-query`alloc::alloc::exchange_malloc (1 samples, 0.10%)</title><rect x="1.9874%" y="1125" width="0.1046%" height="15" fill="rgb(249,111,54)" fg:x="19" fg:w="1"/><text x="2.2374%" y="1135.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 1.36%)</title><rect x="0.8368%" y="1333" width="1.3598%" height="15" fill="rgb(249,55,30)" fg:x="8" fg:w="13"/><text x="1.0868%" y="1343.50"></text></g><g><title>databend-query`databend_query::sessions::session_mgr::SessionManager::from_conf::_{{closure}} (5 samples, 0.52%)</title><rect x="1.6736%" y="1317" width="0.5230%" height="15" fill="rgb(237,47,42)" fg:x="16" fg:w="5"/><text x="1.9236%" y="1327.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.52%)</title><rect x="1.6736%" y="1301" width="0.5230%" height="15" fill="rgb(211,20,18)" fg:x="16" fg:w="5"/><text x="1.9236%" y="1311.50"></text></g><g><title>databend-query`databend_query::catalogs::catalog_manager::CatalogManager::new::_{{closure}} (4 samples, 0.42%)</title><rect x="1.7782%" y="1285" width="0.4184%" height="15" fill="rgb(231,203,46)" fg:x="17" fg:w="4"/><text x="2.0282%" y="1295.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.42%)</title><rect x="1.7782%" y="1269" width="0.4184%" height="15" fill="rgb(237,142,3)" fg:x="17" fg:w="4"/><text x="2.0282%" y="1279.50"></text></g><g><title>databend-query`databend_query::catalogs::catalog_manager::CatalogManager::register_build_in_catalogs::_{{closure}} (4 samples, 0.42%)</title><rect x="1.7782%" y="1253" width="0.4184%" height="15" fill="rgb(241,107,1)" fg:x="17" fg:w="4"/><text x="2.0282%" y="1263.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.42%)</title><rect x="1.7782%" y="1237" width="0.4184%" height="15" fill="rgb(229,83,13)" fg:x="17" fg:w="4"/><text x="2.0282%" y="1247.50"></text></g><g><title>databend-query`databend_query::catalogs::default::database_catalog::DatabaseCatalog::try_create_with_config::_{{closure}} (4 samples, 0.42%)</title><rect x="1.7782%" y="1221" width="0.4184%" height="15" fill="rgb(241,91,40)" fg:x="17" fg:w="4"/><text x="2.0282%" y="1231.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.42%)</title><rect x="1.7782%" y="1205" width="0.4184%" height="15" fill="rgb(225,3,45)" fg:x="17" fg:w="4"/><text x="2.0282%" y="1215.50"></text></g><g><title>databend-query`databend_query::catalogs::default::mutable_catalog::MutableCatalog::try_create_with_config::_{{closure}} (1 samples, 0.10%)</title><rect x="2.0921%" y="1189" width="0.1046%" height="15" fill="rgb(244,223,14)" fg:x="20" fg:w="1"/><text x="2.3421%" y="1199.50"></text></g><g><title>databend-query`&lt;databend_query::config::inner::Config as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="2.0921%" y="1173" width="0.1046%" height="15" fill="rgb(224,124,37)" fg:x="20" fg:w="1"/><text x="2.3421%" y="1183.50"></text></g><g><title>databend-query`&lt;databend_query::config::inner::MetaConfig as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="2.0921%" y="1157" width="0.1046%" height="15" fill="rgb(251,171,30)" fg:x="20" fg:w="1"/><text x="2.3421%" y="1167.50"></text></g><g><title>databend-query`&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="2.0921%" y="1141" width="0.1046%" height="15" fill="rgb(236,46,54)" fg:x="20" fg:w="1"/><text x="2.3421%" y="1151.50"></text></g><g><title>databend-query`__rg_alloc (1 samples, 0.10%)</title><rect x="2.0921%" y="1125" width="0.1046%" height="15" fill="rgb(245,213,5)" fg:x="20" fg:w="1"/><text x="2.3421%" y="1135.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.10%)</title><rect x="2.0921%" y="1109" width="0.1046%" height="15" fill="rgb(230,144,27)" fg:x="20" fg:w="1"/><text x="2.3421%" y="1119.50"></text></g><g><title>databend-query`_rjem_mallocx (1 samples, 0.10%)</title><rect x="2.0921%" y="1093" width="0.1046%" height="15" fill="rgb(220,86,6)" fg:x="20" fg:w="1"/><text x="2.3421%" y="1103.50"></text></g><g><title>databend-query`_rjem_je_tcache_event_hard (1 samples, 0.10%)</title><rect x="2.0921%" y="1077" width="0.1046%" height="15" fill="rgb(240,20,13)" fg:x="20" fg:w="1"/><text x="2.3421%" y="1087.50"></text></g><g><title>databend-query`_rjem_je_tcache_bin_flush_small (1 samples, 0.10%)</title><rect x="2.0921%" y="1061" width="0.1046%" height="15" fill="rgb(217,89,34)" fg:x="20" fg:w="1"/><text x="2.3421%" y="1071.50"></text></g><g><title>databend-query`&lt;databend_query::api::http_service::HttpService as databend_query::servers::server::Server&gt;::start::_{{closure}} (1 samples, 0.10%)</title><rect x="2.1967%" y="1301" width="0.1046%" height="15" fill="rgb(229,13,5)" fg:x="21" fg:w="1"/><text x="2.4467%" y="1311.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="2.1967%" y="1285" width="0.1046%" height="15" fill="rgb(244,67,35)" fg:x="21" fg:w="1"/><text x="2.4467%" y="1295.50"></text></g><g><title>databend-query`databend_query::api::http_service::HttpService::start_without_tls::_{{closure}} (1 samples, 0.10%)</title><rect x="2.1967%" y="1269" width="0.1046%" height="15" fill="rgb(221,40,2)" fg:x="21" fg:w="1"/><text x="2.4467%" y="1279.50"></text></g><g><title>databend-query`databend_query::api::http_service::HttpService::build_router (1 samples, 0.10%)</title><rect x="2.1967%" y="1253" width="0.1046%" height="15" fill="rgb(237,157,21)" fg:x="21" fg:w="1"/><text x="2.4467%" y="1263.50"></text></g><g><title>databend-query`poem::route::router::Route::at (1 samples, 0.10%)</title><rect x="2.1967%" y="1237" width="0.1046%" height="15" fill="rgb(222,94,11)" fg:x="21" fg:w="1"/><text x="2.4467%" y="1247.50"></text></g><g><title>databend-query`poem::route::router::Route::try_at (1 samples, 0.10%)</title><rect x="2.1967%" y="1221" width="0.1046%" height="15" fill="rgb(249,113,6)" fg:x="21" fg:w="1"/><text x="2.4467%" y="1231.50"></text></g><g><title>databend-query`poem::route::router::normalize_path (1 samples, 0.10%)</title><rect x="2.1967%" y="1205" width="0.1046%" height="15" fill="rgb(238,137,36)" fg:x="21" fg:w="1"/><text x="2.4467%" y="1215.50"></text></g><g><title>databend-query`regex::re_unicode::Regex::new (1 samples, 0.10%)</title><rect x="2.1967%" y="1189" width="0.1046%" height="15" fill="rgb(210,102,26)" fg:x="21" fg:w="1"/><text x="2.4467%" y="1199.50"></text></g><g><title>databend-query`regex::re_builder::unicode::RegexBuilder::build (1 samples, 0.10%)</title><rect x="2.1967%" y="1173" width="0.1046%" height="15" fill="rgb(218,30,30)" fg:x="21" fg:w="1"/><text x="2.4467%" y="1183.50"></text></g><g><title>databend-query`regex::exec::ExecBuilder::build (1 samples, 0.10%)</title><rect x="2.1967%" y="1157" width="0.1046%" height="15" fill="rgb(214,67,26)" fg:x="21" fg:w="1"/><text x="2.4467%" y="1167.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.10%)</title><rect x="2.1967%" y="1141" width="0.1046%" height="15" fill="rgb(251,9,53)" fg:x="21" fg:w="1"/><text x="2.4467%" y="1151.50"></text></g><g><title>databend-query`&lt;databend_query::api::rpc_service::RpcService as databend_query::servers::server::Server&gt;::start::_{{closure}} (1 samples, 0.10%)</title><rect x="2.3013%" y="1301" width="0.1046%" height="15" fill="rgb(228,204,25)" fg:x="22" fg:w="1"/><text x="2.5513%" y="1311.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="2.3013%" y="1285" width="0.1046%" height="15" fill="rgb(207,153,8)" fg:x="22" fg:w="1"/><text x="2.5513%" y="1295.50"></text></g><g><title>databend-query`databend_query::api::rpc_service::RpcService::start_with_incoming::_{{closure}} (1 samples, 0.10%)</title><rect x="2.3013%" y="1269" width="0.1046%" height="15" fill="rgb(242,9,16)" fg:x="22" fg:w="1"/><text x="2.5513%" y="1279.50"></text></g><g><title>databend-query`tonic::transport::server::Server::builder (1 samples, 0.10%)</title><rect x="2.3013%" y="1253" width="0.1046%" height="15" fill="rgb(217,211,10)" fg:x="22" fg:w="1"/><text x="2.5513%" y="1263.50"></text></g><g><title>databend-query`&lt;tonic::transport::server::Server&lt;L&gt; as core::default::Default&gt;::default (1 samples, 0.10%)</title><rect x="2.3013%" y="1237" width="0.1046%" height="15" fill="rgb(219,228,52)" fg:x="22" fg:w="1"/><text x="2.5513%" y="1247.50"></text></g><g><title>databend-query`&lt;() as core::default::Default&gt;::default (1 samples, 0.10%)</title><rect x="2.3013%" y="1221" width="0.1046%" height="15" fill="rgb(231,92,29)" fg:x="22" fg:w="1"/><text x="2.5513%" y="1231.50"></text></g><g><title>databend-query`&lt;databend_query::servers::clickhouse::clickhouse_handler::ClickHouseHandler as databend_query::servers::server::Server&gt;::start::_{{closure}} (1 samples, 0.10%)</title><rect x="2.4059%" y="1301" width="0.1046%" height="15" fill="rgb(232,8,23)" fg:x="23" fg:w="1"/><text x="2.6559%" y="1311.50"></text></g><g><title>databend-query`tokio::task::spawn::spawn (1 samples, 0.10%)</title><rect x="2.4059%" y="1285" width="0.1046%" height="15" fill="rgb(216,211,34)" fg:x="23" fg:w="1"/><text x="2.6559%" y="1295.50"></text></g><g><title>databend-query`tokio::task::spawn::spawn_inner (1 samples, 0.10%)</title><rect x="2.4059%" y="1269" width="0.1046%" height="15" fill="rgb(236,151,0)" fg:x="23" fg:w="1"/><text x="2.6559%" y="1279.50"></text></g><g><title>databend-query`tokio::runtime::spawner::Spawner::spawn (1 samples, 0.10%)</title><rect x="2.4059%" y="1253" width="0.1046%" height="15" fill="rgb(209,168,3)" fg:x="23" fg:w="1"/><text x="2.6559%" y="1263.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::Spawner::spawn (1 samples, 0.10%)</title><rect x="2.4059%" y="1237" width="0.1046%" height="15" fill="rgb(208,129,28)" fg:x="23" fg:w="1"/><text x="2.6559%" y="1247.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Shared::bind_new_task (1 samples, 0.10%)</title><rect x="2.4059%" y="1221" width="0.1046%" height="15" fill="rgb(229,78,22)" fg:x="23" fg:w="1"/><text x="2.6559%" y="1231.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Shared::schedule (1 samples, 0.10%)</title><rect x="2.4059%" y="1205" width="0.1046%" height="15" fill="rgb(228,187,13)" fg:x="23" fg:w="1"/><text x="2.6559%" y="1215.50"></text></g><g><title>databend-query`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (1 samples, 0.10%)</title><rect x="2.4059%" y="1189" width="0.1046%" height="15" fill="rgb(240,119,24)" fg:x="23" fg:w="1"/><text x="2.6559%" y="1199.50"></text></g><g><title>databend-query`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.10%)</title><rect x="2.4059%" y="1173" width="0.1046%" height="15" fill="rgb(209,194,42)" fg:x="23" fg:w="1"/><text x="2.6559%" y="1183.50"></text></g><g><title>databend-query`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.10%)</title><rect x="2.4059%" y="1157" width="0.1046%" height="15" fill="rgb(247,200,46)" fg:x="23" fg:w="1"/><text x="2.6559%" y="1167.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::CURRENT::FOO::__getit (1 samples, 0.10%)</title><rect x="2.4059%" y="1141" width="0.1046%" height="15" fill="rgb(218,76,16)" fg:x="23" fg:w="1"/><text x="2.6559%" y="1151.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="2.5105%" y="1253" width="0.1046%" height="15" fill="rgb(225,21,48)" fg:x="24" fg:w="1"/><text x="2.7605%" y="1263.50"></text></g><g><title>databend-query`poem::server::Server&lt;core::convert::Infallible,A&gt;::new_with_acceptor (1 samples, 0.10%)</title><rect x="2.5105%" y="1237" width="0.1046%" height="15" fill="rgb(239,223,50)" fg:x="24" fg:w="1"/><text x="2.7605%" y="1247.50"></text></g><g><title>databend-query`databend_query::servers::http::clickhouse_handler::clickhouse_router (1 samples, 0.10%)</title><rect x="2.6151%" y="1237" width="0.1046%" height="15" fill="rgb(244,45,21)" fg:x="25" fg:w="1"/><text x="2.8651%" y="1247.50"></text></g><g><title>databend-query`poem::route::router::Route::at (1 samples, 0.10%)</title><rect x="2.6151%" y="1221" width="0.1046%" height="15" fill="rgb(232,33,43)" fg:x="25" fg:w="1"/><text x="2.8651%" y="1231.50"></text></g><g><title>databend-query`poem::route::router::Route::try_at (1 samples, 0.10%)</title><rect x="2.6151%" y="1205" width="0.1046%" height="15" fill="rgb(209,8,3)" fg:x="25" fg:w="1"/><text x="2.8651%" y="1215.50"></text></g><g><title>databend-query`poem::route::router::normalize_path (1 samples, 0.10%)</title><rect x="2.6151%" y="1189" width="0.1046%" height="15" fill="rgb(214,25,53)" fg:x="25" fg:w="1"/><text x="2.8651%" y="1199.50"></text></g><g><title>databend-query`regex::re_unicode::Regex::new (1 samples, 0.10%)</title><rect x="2.6151%" y="1173" width="0.1046%" height="15" fill="rgb(254,186,54)" fg:x="25" fg:w="1"/><text x="2.8651%" y="1183.50"></text></g><g><title>databend-query`regex::re_builder::unicode::RegexBuilder::build (1 samples, 0.10%)</title><rect x="2.6151%" y="1157" width="0.1046%" height="15" fill="rgb(208,174,49)" fg:x="25" fg:w="1"/><text x="2.8651%" y="1167.50"></text></g><g><title>databend-query`regex::exec::ExecBuilder::build (1 samples, 0.10%)</title><rect x="2.6151%" y="1141" width="0.1046%" height="15" fill="rgb(233,191,51)" fg:x="25" fg:w="1"/><text x="2.8651%" y="1151.50"></text></g><g><title>databend-query`regex::compile::Compiler::compile (1 samples, 0.10%)</title><rect x="2.6151%" y="1125" width="0.1046%" height="15" fill="rgb(222,134,10)" fg:x="25" fg:w="1"/><text x="2.8651%" y="1135.50"></text></g><g><title>databend-query`regex::compile::Compiler::compile_one (1 samples, 0.10%)</title><rect x="2.6151%" y="1109" width="0.1046%" height="15" fill="rgb(230,226,20)" fg:x="25" fg:w="1"/><text x="2.8651%" y="1119.50"></text></g><g><title>databend-query`regex::compile::Compiler::compile_finish (1 samples, 0.10%)</title><rect x="2.6151%" y="1093" width="0.1046%" height="15" fill="rgb(251,111,25)" fg:x="25" fg:w="1"/><text x="2.8651%" y="1103.50"></text></g><g><title>databend-query`regex::compile::ByteClassSet::byte_classes (1 samples, 0.10%)</title><rect x="2.6151%" y="1077" width="0.1046%" height="15" fill="rgb(224,40,46)" fg:x="25" fg:w="1"/><text x="2.8651%" y="1087.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.10%)</title><rect x="2.6151%" y="1061" width="0.1046%" height="15" fill="rgb(236,108,47)" fg:x="25" fg:w="1"/><text x="2.8651%" y="1071.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.10%)</title><rect x="2.6151%" y="1045" width="0.1046%" height="15" fill="rgb(234,93,0)" fg:x="25" fg:w="1"/><text x="2.8651%" y="1055.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.10%)</title><rect x="2.6151%" y="1029" width="0.1046%" height="15" fill="rgb(224,213,32)" fg:x="25" fg:w="1"/><text x="2.8651%" y="1039.50"></text></g><g><title>databend-query`&lt;databend_query::servers::http::http_services::HttpHandler as databend_query::servers::server::Server&gt;::start::_{{closure}} (3 samples, 0.31%)</title><rect x="2.5105%" y="1301" width="0.3138%" height="15" fill="rgb(251,11,48)" fg:x="24" fg:w="3"/><text x="2.7605%" y="1311.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.31%)</title><rect x="2.5105%" y="1285" width="0.3138%" height="15" fill="rgb(236,173,5)" fg:x="24" fg:w="3"/><text x="2.7605%" y="1295.50"></text></g><g><title>databend-query`databend_query::servers::http::http_services::HttpHandler::start_without_tls::_{{closure}} (3 samples, 0.31%)</title><rect x="2.5105%" y="1269" width="0.3138%" height="15" fill="rgb(230,95,12)" fg:x="24" fg:w="3"/><text x="2.7605%" y="1279.50"></text></g><g><title>databend-query`databend_query::servers::http::http_services::HttpHandler::build_router (2 samples, 0.21%)</title><rect x="2.6151%" y="1253" width="0.2092%" height="15" fill="rgb(232,209,1)" fg:x="25" fg:w="2"/><text x="2.8651%" y="1263.50"></text></g><g><title>databend-query`databend_query::servers::http::v1::http_query_handlers::query_route (1 samples, 0.10%)</title><rect x="2.7197%" y="1237" width="0.1046%" height="15" fill="rgb(232,6,1)" fg:x="26" fg:w="1"/><text x="2.9697%" y="1247.50"></text></g><g><title>databend-query`poem::route::router::Route::at (1 samples, 0.10%)</title><rect x="2.7197%" y="1221" width="0.1046%" height="15" fill="rgb(210,224,50)" fg:x="26" fg:w="1"/><text x="2.9697%" y="1231.50"></text></g><g><title>databend-query`poem::route::router::Route::try_at (1 samples, 0.10%)</title><rect x="2.7197%" y="1205" width="0.1046%" height="15" fill="rgb(228,127,35)" fg:x="26" fg:w="1"/><text x="2.9697%" y="1215.50"></text></g><g><title>databend-query`poem::route::router::normalize_path (1 samples, 0.10%)</title><rect x="2.7197%" y="1189" width="0.1046%" height="15" fill="rgb(245,102,45)" fg:x="26" fg:w="1"/><text x="2.9697%" y="1199.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;regex::re_unicode::Regex&gt; (1 samples, 0.10%)</title><rect x="2.7197%" y="1173" width="0.1046%" height="15" fill="rgb(214,1,49)" fg:x="26" fg:w="1"/><text x="2.9697%" y="1183.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;regex::exec::Exec&gt; (1 samples, 0.10%)</title><rect x="2.7197%" y="1157" width="0.1046%" height="15" fill="rgb(226,163,40)" fg:x="26" fg:w="1"/><text x="2.9697%" y="1167.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;regex::pool::Pool&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;core::cell::RefCell&lt;regex::exec::ProgramCacheInner&gt;&gt;&gt;&gt;&gt; (1 samples, 0.10%)</title><rect x="2.7197%" y="1141" width="0.1046%" height="15" fill="rgb(239,212,28)" fg:x="26" fg:w="1"/><text x="2.9697%" y="1151.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;regex::pool::Pool&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;core::cell::RefCell&lt;regex::exec::ProgramCacheInner&gt;&gt;&gt;&gt; (1 samples, 0.10%)</title><rect x="2.7197%" y="1125" width="0.1046%" height="15" fill="rgb(220,20,13)" fg:x="26" fg:w="1"/><text x="2.9697%" y="1135.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::ops::function::Fn&lt;()&gt;+Output = core::panic::unwind_safe::AssertUnwindSafe&lt;core::cell::RefCell&lt;regex::exec::ProgramCacheInner&gt;&gt;+core::panic::unwind_safe::UnwindSafe+core::marker::Sync+core::marker::Send+core::panic::unwind_safe::RefUnwindSafe&gt;&gt; (1 samples, 0.10%)</title><rect x="2.7197%" y="1109" width="0.1046%" height="15" fill="rgb(210,164,35)" fg:x="26" fg:w="1"/><text x="2.9697%" y="1119.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;regex::exec::ExecReadOnly::new_pool::{{closure}}&gt; (1 samples, 0.10%)</title><rect x="2.7197%" y="1093" width="0.1046%" height="15" fill="rgb(248,109,41)" fg:x="26" fg:w="1"/><text x="2.9697%" y="1103.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;regex::exec::ExecReadOnly&gt;&gt; (1 samples, 0.10%)</title><rect x="2.7197%" y="1077" width="0.1046%" height="15" fill="rgb(238,23,50)" fg:x="26" fg:w="1"/><text x="2.9697%" y="1087.50"></text></g><g><title>databend-query`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="2.7197%" y="1061" width="0.1046%" height="15" fill="rgb(211,48,49)" fg:x="26" fg:w="1"/><text x="2.9697%" y="1071.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.10%)</title><rect x="2.7197%" y="1045" width="0.1046%" height="15" fill="rgb(223,36,21)" fg:x="26" fg:w="1"/><text x="2.9697%" y="1055.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;regex::exec::ExecReadOnly&gt; (1 samples, 0.10%)</title><rect x="2.7197%" y="1029" width="0.1046%" height="15" fill="rgb(207,123,46)" fg:x="26" fg:w="1"/><text x="2.9697%" y="1039.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;regex::prog::Program&gt; (1 samples, 0.10%)</title><rect x="2.7197%" y="1013" width="0.1046%" height="15" fill="rgb(240,218,32)" fg:x="26" fg:w="1"/><text x="2.9697%" y="1023.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex::prog::Inst&gt;&gt; (1 samples, 0.10%)</title><rect x="2.7197%" y="997" width="0.1046%" height="15" fill="rgb(252,5,43)" fg:x="26" fg:w="1"/><text x="2.9697%" y="1007.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex::prog::Inst&gt;&gt; (1 samples, 0.10%)</title><rect x="2.7197%" y="981" width="0.1046%" height="15" fill="rgb(252,84,19)" fg:x="26" fg:w="1"/><text x="2.9697%" y="991.50"></text></g><g><title>databend-query`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="2.7197%" y="965" width="0.1046%" height="15" fill="rgb(243,152,39)" fg:x="26" fg:w="1"/><text x="2.9697%" y="975.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.10%)</title><rect x="2.7197%" y="949" width="0.1046%" height="15" fill="rgb(234,160,15)" fg:x="26" fg:w="1"/><text x="2.9697%" y="959.50"></text></g><g><title>databend-query`alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="2.7197%" y="933" width="0.1046%" height="15" fill="rgb(237,34,20)" fg:x="26" fg:w="1"/><text x="2.9697%" y="943.50"></text></g><g><title>databend-query`__rg_dealloc (1 samples, 0.10%)</title><rect x="2.7197%" y="917" width="0.1046%" height="15" fill="rgb(229,97,13)" fg:x="26" fg:w="1"/><text x="2.9697%" y="927.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.10%)</title><rect x="2.7197%" y="901" width="0.1046%" height="15" fill="rgb(234,71,50)" fg:x="26" fg:w="1"/><text x="2.9697%" y="911.50"></text></g><g><title>libsystem_pthread.dylib`___chkstk_darwin (1 samples, 0.10%)</title><rect x="2.7197%" y="885" width="0.1046%" height="15" fill="rgb(253,155,4)" fg:x="26" fg:w="1"/><text x="2.9697%" y="895.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (7 samples, 0.73%)</title><rect x="2.1967%" y="1333" width="0.7322%" height="15" fill="rgb(222,185,37)" fg:x="21" fg:w="7"/><text x="2.4467%" y="1343.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.73%)</title><rect x="2.1967%" y="1317" width="0.7322%" height="15" fill="rgb(251,177,13)" fg:x="21" fg:w="7"/><text x="2.4467%" y="1327.50"></text></g><g><title>databend-query`&lt;databend_query::servers::mysql::mysql_handler::MySQLHandler as databend_query::servers::server::Server&gt;::start::_{{closure}} (1 samples, 0.10%)</title><rect x="2.8243%" y="1301" width="0.1046%" height="15" fill="rgb(250,179,40)" fg:x="27" fg:w="1"/><text x="3.0743%" y="1311.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="2.8243%" y="1285" width="0.1046%" height="15" fill="rgb(242,44,2)" fg:x="27" fg:w="1"/><text x="3.0743%" y="1295.50"></text></g><g><title>databend-query`databend_query::servers::mysql::mysql_handler::MySQLHandler::listener_tcp::_{{closure}} (1 samples, 0.10%)</title><rect x="2.8243%" y="1269" width="0.1046%" height="15" fill="rgb(216,177,13)" fg:x="27" fg:w="1"/><text x="3.0743%" y="1279.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="2.8243%" y="1253" width="0.1046%" height="15" fill="rgb(216,106,43)" fg:x="27" fg:w="1"/><text x="3.0743%" y="1263.50"></text></g><g><title>databend-query`&lt;F as core::future::into_future::IntoFuture&gt;::into_future (1 samples, 0.10%)</title><rect x="2.8243%" y="1237" width="0.1046%" height="15" fill="rgb(216,183,2)" fg:x="27" fg:w="1"/><text x="3.0743%" y="1247.50"></text></g><g><title>databend-query`&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="2.9289%" y="1333" width="0.1046%" height="15" fill="rgb(249,75,3)" fg:x="28" fg:w="1"/><text x="3.1789%" y="1343.50"></text></g><g><title>databend-query`once_cell::sync::Lazy&lt;T,F&gt;::force (1 samples, 0.10%)</title><rect x="2.9289%" y="1317" width="0.1046%" height="15" fill="rgb(219,67,39)" fg:x="28" fg:w="1"/><text x="3.1789%" y="1327.50"></text></g><g><title>databend-query`once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.10%)</title><rect x="2.9289%" y="1301" width="0.1046%" height="15" fill="rgb(253,228,2)" fg:x="28" fg:w="1"/><text x="3.1789%" y="1311.50"></text></g><g><title>databend-query`once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.10%)</title><rect x="2.9289%" y="1285" width="0.1046%" height="15" fill="rgb(235,138,27)" fg:x="28" fg:w="1"/><text x="3.1789%" y="1295.50"></text></g><g><title>databend-query`once_cell::sync::OnceCell&lt;T&gt;::get (1 samples, 0.10%)</title><rect x="2.9289%" y="1269" width="0.1046%" height="15" fill="rgb(236,97,51)" fg:x="28" fg:w="1"/><text x="3.1789%" y="1279.50"></text></g><g><title>databend-query`once_cell::imp::OnceCell&lt;T&gt;::is_initialized (1 samples, 0.10%)</title><rect x="2.9289%" y="1253" width="0.1046%" height="15" fill="rgb(240,80,30)" fg:x="28" fg:w="1"/><text x="3.1789%" y="1263.50"></text></g><g><title>databend-query`core::sync::atomic::AtomicUsize::load (1 samples, 0.10%)</title><rect x="2.9289%" y="1237" width="0.1046%" height="15" fill="rgb(230,178,19)" fg:x="28" fg:w="1"/><text x="3.1789%" y="1247.50"></text></g><g><title>databend-query`core::sync::atomic::atomic_load (1 samples, 0.10%)</title><rect x="2.9289%" y="1221" width="0.1046%" height="15" fill="rgb(210,190,27)" fg:x="28" fg:w="1"/><text x="3.1789%" y="1231.50"></text></g><g><title>databend-query`&lt;tracing_subscriber::registry::sharded::Registry as core::default::Default&gt;::default (1 samples, 0.10%)</title><rect x="3.0335%" y="1317" width="0.1046%" height="15" fill="rgb(222,107,31)" fg:x="29" fg:w="1"/><text x="3.2835%" y="1327.50"></text></g><g><title>databend-query`sharded_slab::pool::Pool&lt;T&gt;::new (1 samples, 0.10%)</title><rect x="3.0335%" y="1301" width="0.1046%" height="15" fill="rgb(216,127,34)" fg:x="29" fg:w="1"/><text x="3.2835%" y="1311.50"></text></g><g><title>databend-query`sharded_slab::cfg::CfgPrivate::validate (1 samples, 0.10%)</title><rect x="3.0335%" y="1285" width="0.1046%" height="15" fill="rgb(234,116,52)" fg:x="29" fg:w="1"/><text x="3.2835%" y="1295.50"></text></g><g><title>databend-query`opentelemetry_jaeger::exporter::PipelineBuilder::install_batch (1 samples, 0.10%)</title><rect x="3.1381%" y="1317" width="0.1046%" height="15" fill="rgb(222,124,15)" fg:x="30" fg:w="1"/><text x="3.3881%" y="1327.50"></text></g><g><title>databend-query`opentelemetry_jaeger::exporter::PipelineBuilder::build_batch (1 samples, 0.10%)</title><rect x="3.1381%" y="1301" width="0.1046%" height="15" fill="rgb(231,179,28)" fg:x="30" fg:w="1"/><text x="3.3881%" y="1311.50"></text></g><g><title>databend-query`opentelemetry_jaeger::exporter::PipelineBuilder::build_config_and_process (1 samples, 0.10%)</title><rect x="3.1381%" y="1285" width="0.1046%" height="15" fill="rgb(226,93,45)" fg:x="30" fg:w="1"/><text x="3.3881%" y="1295.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.10%)</title><rect x="3.1381%" y="1269" width="0.1046%" height="15" fill="rgb(215,8,51)" fg:x="30" fg:w="1"/><text x="3.3881%" y="1279.50"></text></g><g><title>databend-query`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.10%)</title><rect x="3.3473%" y="1061" width="0.1046%" height="15" fill="rgb(223,106,5)" fg:x="32" fg:w="1"/><text x="3.5973%" y="1071.50"></text></g><g><title>databend-query`core::iter::adapters::map::map_fold::_{{closure}} (3 samples, 0.31%)</title><rect x="3.4519%" y="1061" width="0.3138%" height="15" fill="rgb(250,191,5)" fg:x="33" fg:w="3"/><text x="3.7019%" y="1071.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2 samples, 0.21%)</title><rect x="3.5565%" y="1045" width="0.2092%" height="15" fill="rgb(242,132,44)" fg:x="34" fg:w="2"/><text x="3.8065%" y="1055.50"></text></g><g><title>databend-query`core::ptr::write (2 samples, 0.21%)</title><rect x="3.5565%" y="1029" width="0.2092%" height="15" fill="rgb(251,152,29)" fg:x="34" fg:w="2"/><text x="3.8065%" y="1039.50"></text></g><g><title>databend-query`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.42%)</title><rect x="3.7657%" y="1045" width="0.4184%" height="15" fill="rgb(218,179,5)" fg:x="36" fg:w="4"/><text x="4.0157%" y="1055.50"></text></g><g><title>databend-query`core::mem::replace (2 samples, 0.21%)</title><rect x="3.9749%" y="1029" width="0.2092%" height="15" fill="rgb(227,67,19)" fg:x="38" fg:w="2"/><text x="4.2249%" y="1039.50"></text></g><g><title>databend-query`tracing_appender::non_blocking (10 samples, 1.05%)</title><rect x="3.2427%" y="1317" width="1.0460%" height="15" fill="rgb(233,119,31)" fg:x="31" fg:w="10"/><text x="3.4927%" y="1327.50"></text></g><g><title>databend-query`tracing_appender::non_blocking::NonBlocking::new (10 samples, 1.05%)</title><rect x="3.2427%" y="1301" width="1.0460%" height="15" fill="rgb(241,120,22)" fg:x="31" fg:w="10"/><text x="3.4927%" y="1311.50"></text></g><g><title>databend-query`tracing_appender::non_blocking::NonBlockingBuilder::finish (10 samples, 1.05%)</title><rect x="3.2427%" y="1285" width="1.0460%" height="15" fill="rgb(224,102,30)" fg:x="31" fg:w="10"/><text x="3.4927%" y="1295.50"></text></g><g><title>databend-query`tracing_appender::non_blocking::NonBlocking::create (10 samples, 1.05%)</title><rect x="3.2427%" y="1269" width="1.0460%" height="15" fill="rgb(210,164,37)" fg:x="31" fg:w="10"/><text x="3.4927%" y="1279.50"></text></g><g><title>databend-query`crossbeam_channel::channel::bounded (10 samples, 1.05%)</title><rect x="3.2427%" y="1253" width="1.0460%" height="15" fill="rgb(226,191,16)" fg:x="31" fg:w="10"/><text x="3.4927%" y="1263.50"></text></g><g><title>databend-query`crossbeam_channel::flavors::array::Channel&lt;T&gt;::with_capacity (10 samples, 1.05%)</title><rect x="3.2427%" y="1237" width="1.0460%" height="15" fill="rgb(214,40,45)" fg:x="31" fg:w="10"/><text x="3.4927%" y="1247.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::collect (10 samples, 1.05%)</title><rect x="3.2427%" y="1221" width="1.0460%" height="15" fill="rgb(244,29,26)" fg:x="31" fg:w="10"/><text x="3.4927%" y="1231.50"></text></g><g><title>databend-query`&lt;alloc::boxed::Box&lt;[I]&gt; as core::iter::traits::collect::FromIterator&lt;I&gt;&gt;::from_iter (10 samples, 1.05%)</title><rect x="3.2427%" y="1205" width="1.0460%" height="15" fill="rgb(216,16,5)" fg:x="31" fg:w="10"/><text x="3.4927%" y="1215.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::collect (10 samples, 1.05%)</title><rect x="3.2427%" y="1189" width="1.0460%" height="15" fill="rgb(249,76,35)" fg:x="31" fg:w="10"/><text x="3.4927%" y="1199.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (10 samples, 1.05%)</title><rect x="3.2427%" y="1173" width="1.0460%" height="15" fill="rgb(207,11,44)" fg:x="31" fg:w="10"/><text x="3.4927%" y="1183.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 1.05%)</title><rect x="3.2427%" y="1157" width="1.0460%" height="15" fill="rgb(228,190,49)" fg:x="31" fg:w="10"/><text x="3.4927%" y="1167.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (10 samples, 1.05%)</title><rect x="3.2427%" y="1141" width="1.0460%" height="15" fill="rgb(214,173,12)" fg:x="31" fg:w="10"/><text x="3.4927%" y="1151.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (10 samples, 1.05%)</title><rect x="3.2427%" y="1125" width="1.0460%" height="15" fill="rgb(218,26,35)" fg:x="31" fg:w="10"/><text x="3.4927%" y="1135.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::for_each (10 samples, 1.05%)</title><rect x="3.2427%" y="1109" width="1.0460%" height="15" fill="rgb(220,200,19)" fg:x="31" fg:w="10"/><text x="3.4927%" y="1119.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 1.05%)</title><rect x="3.2427%" y="1093" width="1.0460%" height="15" fill="rgb(239,95,49)" fg:x="31" fg:w="10"/><text x="3.4927%" y="1103.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::fold (10 samples, 1.05%)</title><rect x="3.2427%" y="1077" width="1.0460%" height="15" fill="rgb(235,85,53)" fg:x="31" fg:w="10"/><text x="3.4927%" y="1087.50"></text></g><g><title>databend-query`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.52%)</title><rect x="3.7657%" y="1061" width="0.5230%" height="15" fill="rgb(233,133,31)" fg:x="36" fg:w="5"/><text x="4.0157%" y="1071.50"></text></g><g><title>databend-query`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.10%)</title><rect x="4.1841%" y="1045" width="0.1046%" height="15" fill="rgb(218,25,20)" fg:x="40" fg:w="1"/><text x="4.4341%" y="1055.50"></text></g><g><title>databend-query`tracing_appender::rolling::RollingFileAppender::new (1 samples, 0.10%)</title><rect x="4.2887%" y="1317" width="0.1046%" height="15" fill="rgb(252,210,38)" fg:x="41" fg:w="1"/><text x="4.5387%" y="1327.50"></text></g><g><title>databend-query`tracing_appender::rolling::Inner::new (1 samples, 0.10%)</title><rect x="4.2887%" y="1301" width="0.1046%" height="15" fill="rgb(242,134,21)" fg:x="41" fg:w="1"/><text x="4.5387%" y="1311.50"></text></g><g><title>databend-query`tracing_appender::rolling::Rotation::join_date (1 samples, 0.10%)</title><rect x="4.2887%" y="1285" width="0.1046%" height="15" fill="rgb(213,28,48)" fg:x="41" fg:w="1"/><text x="4.5387%" y="1295.50"></text></g><g><title>databend-query`time::format_description::parse::parse (1 samples, 0.10%)</title><rect x="4.2887%" y="1269" width="0.1046%" height="15" fill="rgb(250,196,2)" fg:x="41" fg:w="1"/><text x="4.5387%" y="1279.50"></text></g><g><title>databend-query`time::format_description::parse::parse_item (1 samples, 0.10%)</title><rect x="4.2887%" y="1253" width="0.1046%" height="15" fill="rgb(227,5,17)" fg:x="41" fg:w="1"/><text x="4.5387%" y="1263.50"></text></g><g><title>databend-query`time::format_description::parse::parse_component (1 samples, 0.10%)</title><rect x="4.2887%" y="1237" width="0.1046%" height="15" fill="rgb(221,226,24)" fg:x="41" fg:w="1"/><text x="4.5387%" y="1247.50"></text></g><g><title>databend-query`time::format_description::component::NakedComponent::attach_modifiers (1 samples, 0.10%)</title><rect x="4.2887%" y="1221" width="0.1046%" height="15" fill="rgb(211,5,48)" fg:x="41" fg:w="1"/><text x="4.5387%" y="1231.50"></text></g><g><title>databend-query`&lt;bool as core::default::Default&gt;::default (1 samples, 0.10%)</title><rect x="4.2887%" y="1205" width="0.1046%" height="15" fill="rgb(219,150,6)" fg:x="41" fg:w="1"/><text x="4.5387%" y="1215.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="4.3933%" y="661" width="0.1046%" height="15" fill="rgb(251,46,16)" fg:x="42" fg:w="1"/><text x="4.6433%" y="671.50"></text></g><g><title>databend-query`&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="4.3933%" y="645" width="0.1046%" height="15" fill="rgb(220,204,40)" fg:x="42" fg:w="1"/><text x="4.6433%" y="655.50"></text></g><g><title>databend-query`&lt;regex_syntax::utf8::Utf8Sequences as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="4.3933%" y="629" width="0.1046%" height="15" fill="rgb(211,85,2)" fg:x="42" fg:w="1"/><text x="4.6433%" y="639.50"></text></g><g><title>databend-query`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.10%)</title><rect x="4.3933%" y="613" width="0.1046%" height="15" fill="rgb(229,17,7)" fg:x="42" fg:w="1"/><text x="4.6433%" y="623.50"></text></g><g><title>databend-query`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.10%)</title><rect x="4.3933%" y="597" width="0.1046%" height="15" fill="rgb(239,72,28)" fg:x="42" fg:w="1"/><text x="4.6433%" y="607.50"></text></g><g><title>databend-query`core::mem::replace (1 samples, 0.10%)</title><rect x="4.3933%" y="581" width="0.1046%" height="15" fill="rgb(230,47,54)" fg:x="42" fg:w="1"/><text x="4.6433%" y="591.50"></text></g><g><title>databend-query`&lt;regex::compile::SuffixCacheKey as core::cmp::PartialEq&gt;::eq (1 samples, 0.10%)</title><rect x="4.4979%" y="629" width="0.1046%" height="15" fill="rgb(214,50,8)" fg:x="43" fg:w="1"/><text x="4.7479%" y="639.50"></text></g><g><title>databend-query`regex::compile::Compiler::c (3 samples, 0.31%)</title><rect x="4.3933%" y="837" width="0.3138%" height="15" fill="rgb(216,198,43)" fg:x="42" fg:w="3"/><text x="4.6433%" y="847.50"></text></g><g><title>databend-query`regex::compile::Compiler::c (3 samples, 0.31%)</title><rect x="4.3933%" y="821" width="0.3138%" height="15" fill="rgb(234,20,35)" fg:x="42" fg:w="3"/><text x="4.6433%" y="831.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_alternate (3 samples, 0.31%)</title><rect x="4.3933%" y="805" width="0.3138%" height="15" fill="rgb(254,45,19)" fg:x="42" fg:w="3"/><text x="4.6433%" y="815.50"></text></g><g><title>databend-query`regex::compile::Compiler::c (3 samples, 0.31%)</title><rect x="4.3933%" y="789" width="0.3138%" height="15" fill="rgb(219,14,44)" fg:x="42" fg:w="3"/><text x="4.6433%" y="799.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_capture (3 samples, 0.31%)</title><rect x="4.3933%" y="773" width="0.3138%" height="15" fill="rgb(217,220,26)" fg:x="42" fg:w="3"/><text x="4.6433%" y="783.50"></text></g><g><title>databend-query`regex::compile::Compiler::c (3 samples, 0.31%)</title><rect x="4.3933%" y="757" width="0.3138%" height="15" fill="rgb(213,158,28)" fg:x="42" fg:w="3"/><text x="4.6433%" y="767.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_repeat (3 samples, 0.31%)</title><rect x="4.3933%" y="741" width="0.3138%" height="15" fill="rgb(252,51,52)" fg:x="42" fg:w="3"/><text x="4.6433%" y="751.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_repeat_one_or_more (3 samples, 0.31%)</title><rect x="4.3933%" y="725" width="0.3138%" height="15" fill="rgb(246,89,16)" fg:x="42" fg:w="3"/><text x="4.6433%" y="735.50"></text></g><g><title>databend-query`regex::compile::Compiler::c (3 samples, 0.31%)</title><rect x="4.3933%" y="709" width="0.3138%" height="15" fill="rgb(216,158,49)" fg:x="42" fg:w="3"/><text x="4.6433%" y="719.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_class (3 samples, 0.31%)</title><rect x="4.3933%" y="693" width="0.3138%" height="15" fill="rgb(236,107,19)" fg:x="42" fg:w="3"/><text x="4.6433%" y="703.50"></text></g><g><title>databend-query`regex::compile::CompileClass::compile (3 samples, 0.31%)</title><rect x="4.3933%" y="677" width="0.3138%" height="15" fill="rgb(228,185,30)" fg:x="42" fg:w="3"/><text x="4.6433%" y="687.50"></text></g><g><title>databend-query`regex::compile::CompileClass::c_utf8_seq (2 samples, 0.21%)</title><rect x="4.4979%" y="661" width="0.2092%" height="15" fill="rgb(246,134,8)" fg:x="43" fg:w="2"/><text x="4.7479%" y="671.50"></text></g><g><title>databend-query`regex::compile::CompileClass::c_utf8_seq_ (2 samples, 0.21%)</title><rect x="4.4979%" y="645" width="0.2092%" height="15" fill="rgb(214,143,50)" fg:x="43" fg:w="2"/><text x="4.7479%" y="655.50"></text></g><g><title>databend-query`regex::compile::Compiler::push_compiled (1 samples, 0.10%)</title><rect x="4.6025%" y="629" width="0.1046%" height="15" fill="rgb(228,75,8)" fg:x="44" fg:w="1"/><text x="4.8525%" y="639.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.10%)</title><rect x="4.6025%" y="613" width="0.1046%" height="15" fill="rgb(207,175,4)" fg:x="44" fg:w="1"/><text x="4.8525%" y="623.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="4.7071%" y="645" width="0.1046%" height="15" fill="rgb(205,108,24)" fg:x="45" fg:w="1"/><text x="4.9571%" y="655.50"></text></g><g><title>databend-query`&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="4.7071%" y="629" width="0.1046%" height="15" fill="rgb(244,120,49)" fg:x="45" fg:w="1"/><text x="4.9571%" y="639.50"></text></g><g><title>databend-query`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.10%)</title><rect x="4.7071%" y="613" width="0.1046%" height="15" fill="rgb(223,47,38)" fg:x="45" fg:w="1"/><text x="4.9571%" y="623.50"></text></g><g><title>databend-query`regex::compile::CompileClass::c_utf8_seq (1 samples, 0.10%)</title><rect x="4.8117%" y="645" width="0.1046%" height="15" fill="rgb(229,179,11)" fg:x="46" fg:w="1"/><text x="5.0617%" y="655.50"></text></g><g><title>databend-query`regex::compile::CompileClass::c_utf8_seq_ (1 samples, 0.10%)</title><rect x="4.8117%" y="629" width="0.1046%" height="15" fill="rgb(231,122,1)" fg:x="46" fg:w="1"/><text x="5.0617%" y="639.50"></text></g><g><title>databend-query`regex::compile::SuffixCache::get (1 samples, 0.10%)</title><rect x="4.8117%" y="613" width="0.1046%" height="15" fill="rgb(245,119,9)" fg:x="46" fg:w="1"/><text x="5.0617%" y="623.50"></text></g><g><title>databend-query`core::slice::_&lt;impl [T]&gt;::get (1 samples, 0.10%)</title><rect x="4.8117%" y="597" width="0.1046%" height="15" fill="rgb(241,163,25)" fg:x="46" fg:w="1"/><text x="5.0617%" y="607.50"></text></g><g><title>databend-query`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.10%)</title><rect x="4.8117%" y="581" width="0.1046%" height="15" fill="rgb(217,214,3)" fg:x="46" fg:w="1"/><text x="5.0617%" y="591.50"></text></g><g><title>databend-query`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.10%)</title><rect x="4.8117%" y="565" width="0.1046%" height="15" fill="rgb(240,86,28)" fg:x="46" fg:w="1"/><text x="5.0617%" y="575.50"></text></g><g><title>databend-query`regex::compile::Compiler::compile (6 samples, 0.63%)</title><rect x="4.3933%" y="997" width="0.6276%" height="15" fill="rgb(215,47,9)" fg:x="42" fg:w="6"/><text x="4.6433%" y="1007.50"></text></g><g><title>databend-query`regex::compile::Compiler::compile_one (6 samples, 0.63%)</title><rect x="4.3933%" y="981" width="0.6276%" height="15" fill="rgb(252,25,45)" fg:x="42" fg:w="6"/><text x="4.6433%" y="991.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_capture (6 samples, 0.63%)</title><rect x="4.3933%" y="965" width="0.6276%" height="15" fill="rgb(251,164,9)" fg:x="42" fg:w="6"/><text x="4.6433%" y="975.50"></text></g><g><title>databend-query`regex::compile::Compiler::c (6 samples, 0.63%)</title><rect x="4.3933%" y="949" width="0.6276%" height="15" fill="rgb(233,194,0)" fg:x="42" fg:w="6"/><text x="4.6433%" y="959.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_alternate (6 samples, 0.63%)</title><rect x="4.3933%" y="933" width="0.6276%" height="15" fill="rgb(249,111,24)" fg:x="42" fg:w="6"/><text x="4.6433%" y="943.50"></text></g><g><title>databend-query`regex::compile::Compiler::c (6 samples, 0.63%)</title><rect x="4.3933%" y="917" width="0.6276%" height="15" fill="rgb(250,223,3)" fg:x="42" fg:w="6"/><text x="4.6433%" y="927.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_concat (6 samples, 0.63%)</title><rect x="4.3933%" y="901" width="0.6276%" height="15" fill="rgb(236,178,37)" fg:x="42" fg:w="6"/><text x="4.6433%" y="911.50"></text></g><g><title>databend-query`regex::compile::Compiler::c (6 samples, 0.63%)</title><rect x="4.3933%" y="885" width="0.6276%" height="15" fill="rgb(241,158,50)" fg:x="42" fg:w="6"/><text x="4.6433%" y="895.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_repeat (6 samples, 0.63%)</title><rect x="4.3933%" y="869" width="0.6276%" height="15" fill="rgb(213,121,41)" fg:x="42" fg:w="6"/><text x="4.6433%" y="879.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_repeat_range (6 samples, 0.63%)</title><rect x="4.3933%" y="853" width="0.6276%" height="15" fill="rgb(240,92,3)" fg:x="42" fg:w="6"/><text x="4.6433%" y="863.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_concat (3 samples, 0.31%)</title><rect x="4.7071%" y="837" width="0.3138%" height="15" fill="rgb(205,123,3)" fg:x="45" fg:w="3"/><text x="4.9571%" y="847.50"></text></g><g><title>databend-query`regex::compile::Compiler::c (3 samples, 0.31%)</title><rect x="4.7071%" y="821" width="0.3138%" height="15" fill="rgb(205,97,47)" fg:x="45" fg:w="3"/><text x="4.9571%" y="831.50"></text></g><g><title>databend-query`regex::compile::Compiler::c (3 samples, 0.31%)</title><rect x="4.7071%" y="805" width="0.3138%" height="15" fill="rgb(247,152,14)" fg:x="45" fg:w="3"/><text x="4.9571%" y="815.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_alternate (3 samples, 0.31%)</title><rect x="4.7071%" y="789" width="0.3138%" height="15" fill="rgb(248,195,53)" fg:x="45" fg:w="3"/><text x="4.9571%" y="799.50"></text></g><g><title>databend-query`regex::compile::Compiler::c (3 samples, 0.31%)</title><rect x="4.7071%" y="773" width="0.3138%" height="15" fill="rgb(226,201,16)" fg:x="45" fg:w="3"/><text x="4.9571%" y="783.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_capture (3 samples, 0.31%)</title><rect x="4.7071%" y="757" width="0.3138%" height="15" fill="rgb(205,98,0)" fg:x="45" fg:w="3"/><text x="4.9571%" y="767.50"></text></g><g><title>databend-query`regex::compile::Compiler::c (3 samples, 0.31%)</title><rect x="4.7071%" y="741" width="0.3138%" height="15" fill="rgb(214,191,48)" fg:x="45" fg:w="3"/><text x="4.9571%" y="751.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_repeat (3 samples, 0.31%)</title><rect x="4.7071%" y="725" width="0.3138%" height="15" fill="rgb(237,112,39)" fg:x="45" fg:w="3"/><text x="4.9571%" y="735.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_repeat_one_or_more (3 samples, 0.31%)</title><rect x="4.7071%" y="709" width="0.3138%" height="15" fill="rgb(247,203,27)" fg:x="45" fg:w="3"/><text x="4.9571%" y="719.50"></text></g><g><title>databend-query`regex::compile::Compiler::c (3 samples, 0.31%)</title><rect x="4.7071%" y="693" width="0.3138%" height="15" fill="rgb(235,124,28)" fg:x="45" fg:w="3"/><text x="4.9571%" y="703.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_class (3 samples, 0.31%)</title><rect x="4.7071%" y="677" width="0.3138%" height="15" fill="rgb(208,207,46)" fg:x="45" fg:w="3"/><text x="4.9571%" y="687.50"></text></g><g><title>databend-query`regex::compile::CompileClass::compile (3 samples, 0.31%)</title><rect x="4.7071%" y="661" width="0.3138%" height="15" fill="rgb(234,176,4)" fg:x="45" fg:w="3"/><text x="4.9571%" y="671.50"></text></g><g><title>databend-query`regex_syntax::utf8::Utf8Sequences::reset (1 samples, 0.10%)</title><rect x="4.9163%" y="645" width="0.1046%" height="15" fill="rgb(230,133,28)" fg:x="47" fg:w="1"/><text x="5.1663%" y="655.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::clear (1 samples, 0.10%)</title><rect x="4.9163%" y="629" width="0.1046%" height="15" fill="rgb(211,137,40)" fg:x="47" fg:w="1"/><text x="5.1663%" y="639.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1 samples, 0.10%)</title><rect x="4.9163%" y="613" width="0.1046%" height="15" fill="rgb(254,35,13)" fg:x="47" fg:w="1"/><text x="5.1663%" y="623.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.10%)</title><rect x="4.9163%" y="597" width="0.1046%" height="15" fill="rgb(225,49,51)" fg:x="47" fg:w="1"/><text x="5.1663%" y="607.50"></text></g><g><title>databend-query`core::slice::raw::from_raw_parts_mut (1 samples, 0.10%)</title><rect x="4.9163%" y="581" width="0.1046%" height="15" fill="rgb(251,10,15)" fg:x="47" fg:w="1"/><text x="5.1663%" y="591.50"></text></g><g><title>databend-query`core::ptr::metadata::from_raw_parts_mut (1 samples, 0.10%)</title><rect x="4.9163%" y="565" width="0.1046%" height="15" fill="rgb(228,207,15)" fg:x="47" fg:w="1"/><text x="5.1663%" y="575.50"></text></g><g><title>databend-query`regex::compile::Compiler::new (1 samples, 0.10%)</title><rect x="5.0209%" y="997" width="0.1046%" height="15" fill="rgb(241,99,19)" fg:x="48" fg:w="1"/><text x="5.2709%" y="1007.50"></text></g><g><title>databend-query`alloc::vec::from_elem (1 samples, 0.10%)</title><rect x="5.0209%" y="981" width="0.1046%" height="15" fill="rgb(207,104,49)" fg:x="48" fg:w="1"/><text x="5.2709%" y="991.50"></text></g><g><title>databend-query`regex_syntax::ast::parse::Parser::parse (1 samples, 0.10%)</title><rect x="5.1255%" y="965" width="0.1046%" height="15" fill="rgb(234,99,18)" fg:x="49" fg:w="1"/><text x="5.3755%" y="975.50"></text></g><g><title>databend-query`regex_syntax::ast::parse::ParserI&lt;P&gt;::parse (1 samples, 0.10%)</title><rect x="5.1255%" y="949" width="0.1046%" height="15" fill="rgb(213,191,49)" fg:x="49" fg:w="1"/><text x="5.3755%" y="959.50"></text></g><g><title>databend-query`regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_with_comments (1 samples, 0.10%)</title><rect x="5.1255%" y="933" width="0.1046%" height="15" fill="rgb(210,226,19)" fg:x="49" fg:w="1"/><text x="5.3755%" y="943.50"></text></g><g><title>databend-query`regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_primitive (1 samples, 0.10%)</title><rect x="5.1255%" y="917" width="0.1046%" height="15" fill="rgb(229,97,18)" fg:x="49" fg:w="1"/><text x="5.3755%" y="927.50"></text></g><g><title>databend-query`regex_syntax::ast::parse::ParserI&lt;P&gt;::char (1 samples, 0.10%)</title><rect x="5.1255%" y="901" width="0.1046%" height="15" fill="rgb(211,167,15)" fg:x="49" fg:w="1"/><text x="5.3755%" y="911.50"></text></g><g><title>databend-query`core::cell::Cell&lt;T&gt;::get (1 samples, 0.10%)</title><rect x="5.1255%" y="885" width="0.1046%" height="15" fill="rgb(210,169,34)" fg:x="49" fg:w="1"/><text x="5.3755%" y="895.50"></text></g><g><title>databend-query`common_tracing::logging::init_global_tracing (22 samples, 2.30%)</title><rect x="3.0335%" y="1333" width="2.3013%" height="15" fill="rgb(241,121,31)" fg:x="29" fg:w="22"/><text x="3.2835%" y="1343.50">d..</text></g><g><title>databend-query`tracing_subscriber::filter::env::EnvFilter::new (9 samples, 0.94%)</title><rect x="4.3933%" y="1317" width="0.9414%" height="15" fill="rgb(232,40,11)" fg:x="42" fg:w="9"/><text x="4.6433%" y="1327.50"></text></g><g><title>databend-query`tracing_subscriber::filter::env::builder::Builder::parse_lossy (9 samples, 0.94%)</title><rect x="4.3933%" y="1301" width="0.9414%" height="15" fill="rgb(205,86,26)" fg:x="42" fg:w="9"/><text x="4.6433%" y="1311.50"></text></g><g><title>databend-query`tracing_subscriber::filter::env::builder::Builder::from_directives (9 samples, 0.94%)</title><rect x="4.3933%" y="1285" width="0.9414%" height="15" fill="rgb(231,126,28)" fg:x="42" fg:w="9"/><text x="4.6433%" y="1295.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::collect (9 samples, 0.94%)</title><rect x="4.3933%" y="1269" width="0.9414%" height="15" fill="rgb(219,221,18)" fg:x="42" fg:w="9"/><text x="4.6433%" y="1279.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.94%)</title><rect x="4.3933%" y="1253" width="0.9414%" height="15" fill="rgb(211,40,0)" fg:x="42" fg:w="9"/><text x="4.6433%" y="1263.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.94%)</title><rect x="4.3933%" y="1237" width="0.9414%" height="15" fill="rgb(239,85,43)" fg:x="42" fg:w="9"/><text x="4.6433%" y="1247.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (9 samples, 0.94%)</title><rect x="4.3933%" y="1221" width="0.9414%" height="15" fill="rgb(231,55,21)" fg:x="42" fg:w="9"/><text x="4.6433%" y="1231.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.94%)</title><rect x="4.3933%" y="1205" width="0.9414%" height="15" fill="rgb(225,184,43)" fg:x="42" fg:w="9"/><text x="4.6433%" y="1215.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::find_map (9 samples, 0.94%)</title><rect x="4.3933%" y="1189" width="0.9414%" height="15" fill="rgb(251,158,41)" fg:x="42" fg:w="9"/><text x="4.6433%" y="1199.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.94%)</title><rect x="4.3933%" y="1173" width="0.9414%" height="15" fill="rgb(234,159,37)" fg:x="42" fg:w="9"/><text x="4.6433%" y="1183.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (9 samples, 0.94%)</title><rect x="4.3933%" y="1157" width="0.9414%" height="15" fill="rgb(216,204,22)" fg:x="42" fg:w="9"/><text x="4.6433%" y="1167.50"></text></g><g><title>databend-query`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (9 samples, 0.94%)</title><rect x="4.3933%" y="1141" width="0.9414%" height="15" fill="rgb(214,17,3)" fg:x="42" fg:w="9"/><text x="4.6433%" y="1151.50"></text></g><g><title>databend-query`tracing_subscriber::filter::env::builder::Builder::parse_lossy::_{{closure}} (9 samples, 0.94%)</title><rect x="4.3933%" y="1125" width="0.9414%" height="15" fill="rgb(212,111,17)" fg:x="42" fg:w="9"/><text x="4.6433%" y="1135.50"></text></g><g><title>databend-query`tracing_subscriber::filter::env::directive::Directive::parse (9 samples, 0.94%)</title><rect x="4.3933%" y="1109" width="0.9414%" height="15" fill="rgb(221,157,24)" fg:x="42" fg:w="9"/><text x="4.6433%" y="1119.50"></text></g><g><title>databend-query`&lt;tracing_subscriber::filter::env::directive::Directive::parse::DIRECTIVE_RE as core::ops::deref::Deref&gt;::deref (9 samples, 0.94%)</title><rect x="4.3933%" y="1093" width="0.9414%" height="15" fill="rgb(252,16,13)" fg:x="42" fg:w="9"/><text x="4.6433%" y="1103.50"></text></g><g><title>databend-query`spin::once::Once&lt;T&gt;::call_once (9 samples, 0.94%)</title><rect x="4.3933%" y="1077" width="0.9414%" height="15" fill="rgb(221,62,2)" fg:x="42" fg:w="9"/><text x="4.6433%" y="1087.50"></text></g><g><title>databend-query`core::ops::function::FnOnce::call_once (9 samples, 0.94%)</title><rect x="4.3933%" y="1061" width="0.9414%" height="15" fill="rgb(247,87,22)" fg:x="42" fg:w="9"/><text x="4.6433%" y="1071.50"></text></g><g><title>databend-query`regex::re_unicode::Regex::new (9 samples, 0.94%)</title><rect x="4.3933%" y="1045" width="0.9414%" height="15" fill="rgb(215,73,9)" fg:x="42" fg:w="9"/><text x="4.6433%" y="1055.50"></text></g><g><title>databend-query`regex::re_builder::unicode::RegexBuilder::build (9 samples, 0.94%)</title><rect x="4.3933%" y="1029" width="0.9414%" height="15" fill="rgb(207,175,33)" fg:x="42" fg:w="9"/><text x="4.6433%" y="1039.50"></text></g><g><title>databend-query`regex::exec::ExecBuilder::build (9 samples, 0.94%)</title><rect x="4.3933%" y="1013" width="0.9414%" height="15" fill="rgb(243,129,54)" fg:x="42" fg:w="9"/><text x="4.6433%" y="1023.50"></text></g><g><title>databend-query`regex::exec::ExecBuilder::parse (2 samples, 0.21%)</title><rect x="5.1255%" y="997" width="0.2092%" height="15" fill="rgb(227,119,45)" fg:x="49" fg:w="2"/><text x="5.3755%" y="1007.50"></text></g><g><title>databend-query`regex_syntax::parser::Parser::parse (2 samples, 0.21%)</title><rect x="5.1255%" y="981" width="0.2092%" height="15" fill="rgb(205,109,36)" fg:x="49" fg:w="2"/><text x="5.3755%" y="991.50"></text></g><g><title>databend-query`regex_syntax::hir::translate::Translator::translate (1 samples, 0.10%)</title><rect x="5.2301%" y="965" width="0.1046%" height="15" fill="rgb(205,6,39)" fg:x="50" fg:w="1"/><text x="5.4801%" y="975.50"></text></g><g><title>databend-query`regex_syntax::ast::visitor::visit (1 samples, 0.10%)</title><rect x="5.2301%" y="949" width="0.1046%" height="15" fill="rgb(221,32,16)" fg:x="50" fg:w="1"/><text x="5.4801%" y="959.50"></text></g><g><title>databend-query`regex_syntax::ast::visitor::HeapVisitor::visit (1 samples, 0.10%)</title><rect x="5.2301%" y="933" width="0.1046%" height="15" fill="rgb(228,144,50)" fg:x="50" fg:w="1"/><text x="5.4801%" y="943.50"></text></g><g><title>databend-query`regex_syntax::ast::visitor::HeapVisitor::induct (1 samples, 0.10%)</title><rect x="5.2301%" y="917" width="0.1046%" height="15" fill="rgb(229,201,53)" fg:x="50" fg:w="1"/><text x="5.4801%" y="927.50"></text></g><g><title>databend-query`regex_syntax::ast::visitor::HeapVisitor::visit_class (1 samples, 0.10%)</title><rect x="5.2301%" y="901" width="0.1046%" height="15" fill="rgb(249,153,27)" fg:x="50" fg:w="1"/><text x="5.4801%" y="911.50"></text></g><g><title>databend-query`regex_syntax::ast::visitor::HeapVisitor::visit_class_post (1 samples, 0.10%)</title><rect x="5.2301%" y="885" width="0.1046%" height="15" fill="rgb(227,106,25)" fg:x="50" fg:w="1"/><text x="5.4801%" y="895.50"></text></g><g><title>databend-query`&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_class_set_item_post (1 samples, 0.10%)</title><rect x="5.2301%" y="869" width="0.1046%" height="15" fill="rgb(230,65,29)" fg:x="50" fg:w="1"/><text x="5.4801%" y="879.50"></text></g><g><title>databend-query`regex_syntax::hir::ClassUnicode::push (1 samples, 0.10%)</title><rect x="5.2301%" y="853" width="0.1046%" height="15" fill="rgb(221,57,46)" fg:x="50" fg:w="1"/><text x="5.4801%" y="863.50"></text></g><g><title>databend-query`regex_syntax::hir::interval::IntervalSet&lt;I&gt;::push (1 samples, 0.10%)</title><rect x="5.2301%" y="837" width="0.1046%" height="15" fill="rgb(229,161,17)" fg:x="50" fg:w="1"/><text x="5.4801%" y="847.50"></text></g><g><title>databend-query`regex_syntax::hir::interval::IntervalSet&lt;I&gt;::canonicalize (1 samples, 0.10%)</title><rect x="5.2301%" y="821" width="0.1046%" height="15" fill="rgb(222,213,11)" fg:x="50" fg:w="1"/><text x="5.4801%" y="831.50"></text></g><g><title>databend-query`alloc::slice::_&lt;impl [T]&gt;::sort (1 samples, 0.10%)</title><rect x="5.2301%" y="805" width="0.1046%" height="15" fill="rgb(235,35,13)" fg:x="50" fg:w="1"/><text x="5.4801%" y="815.50"></text></g><g><title>databend-query`alloc::slice::merge_sort (1 samples, 0.10%)</title><rect x="5.2301%" y="789" width="0.1046%" height="15" fill="rgb(233,158,34)" fg:x="50" fg:w="1"/><text x="5.4801%" y="799.50"></text></g><g><title>databend-query`alloc::slice::merge (1 samples, 0.10%)</title><rect x="5.2301%" y="773" width="0.1046%" height="15" fill="rgb(215,151,48)" fg:x="50" fg:w="1"/><text x="5.4801%" y="783.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.10%)</title><rect x="5.2301%" y="757" width="0.1046%" height="15" fill="rgb(229,84,14)" fg:x="50" fg:w="1"/><text x="5.4801%" y="767.50"></text></g><g><title>databend-query`clap::build::command::App::_build (1 samples, 0.10%)</title><rect x="5.3347%" y="1221" width="0.1046%" height="15" fill="rgb(229,68,14)" fg:x="51" fg:w="1"/><text x="5.5847%" y="1231.50"></text></g><g><title>databend-query`clap::build::debug_asserts::assert_app (1 samples, 0.10%)</title><rect x="5.3347%" y="1205" width="0.1046%" height="15" fill="rgb(243,106,26)" fg:x="51" fg:w="1"/><text x="5.5847%" y="1215.50"></text></g><g><title>databend-query`clap::build::debug_asserts::assert_arg (1 samples, 0.10%)</title><rect x="5.3347%" y="1189" width="0.1046%" height="15" fill="rgb(206,45,38)" fg:x="51" fg:w="1"/><text x="5.5847%" y="1199.50"></text></g><g><title>databend-query`clap::build::debug_asserts::assert_defaults (1 samples, 0.10%)</title><rect x="5.3347%" y="1173" width="0.1046%" height="15" fill="rgb(226,6,15)" fg:x="51" fg:w="1"/><text x="5.5847%" y="1183.50"></text></g><g><title>databend-query`core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.10%)</title><rect x="5.3347%" y="1157" width="0.1046%" height="15" fill="rgb(232,22,54)" fg:x="51" fg:w="1"/><text x="5.5847%" y="1167.50"></text></g><g><title>databend-query`clap::build::command::App::get_matches (2 samples, 0.21%)</title><rect x="5.3347%" y="1285" width="0.2092%" height="15" fill="rgb(229,222,32)" fg:x="51" fg:w="2"/><text x="5.5847%" y="1295.50"></text></g><g><title>databend-query`clap::build::command::App::get_matches_from (2 samples, 0.21%)</title><rect x="5.3347%" y="1269" width="0.2092%" height="15" fill="rgb(228,62,29)" fg:x="51" fg:w="2"/><text x="5.5847%" y="1279.50"></text></g><g><title>databend-query`clap::build::command::App::try_get_matches_from_mut (2 samples, 0.21%)</title><rect x="5.3347%" y="1253" width="0.2092%" height="15" fill="rgb(251,103,34)" fg:x="51" fg:w="2"/><text x="5.5847%" y="1263.50"></text></g><g><title>databend-query`clap::build::command::App::_do_parse (2 samples, 0.21%)</title><rect x="5.3347%" y="1237" width="0.2092%" height="15" fill="rgb(233,12,30)" fg:x="51" fg:w="2"/><text x="5.5847%" y="1247.50"></text></g><g><title>databend-query`clap::parse::parser::Parser::get_matches_with (1 samples, 0.10%)</title><rect x="5.4393%" y="1221" width="0.1046%" height="15" fill="rgb(238,52,0)" fg:x="52" fg:w="1"/><text x="5.6893%" y="1231.50"></text></g><g><title>databend-query`clap::parse::validator::Validator::validate (1 samples, 0.10%)</title><rect x="5.4393%" y="1205" width="0.1046%" height="15" fill="rgb(223,98,5)" fg:x="52" fg:w="1"/><text x="5.6893%" y="1215.50"></text></g><g><title>databend-query`clap::parse::parser::Parser::add_defaults (1 samples, 0.10%)</title><rect x="5.4393%" y="1189" width="0.1046%" height="15" fill="rgb(228,75,37)" fg:x="52" fg:w="1"/><text x="5.6893%" y="1199.50"></text></g><g><title>databend-query`clap::parse::parser::Parser::add_value (1 samples, 0.10%)</title><rect x="5.4393%" y="1173" width="0.1046%" height="15" fill="rgb(205,115,49)" fg:x="52" fg:w="1"/><text x="5.6893%" y="1183.50"></text></g><g><title>databend-query`clap::parse::arg_matcher::ArgMatcher::get (1 samples, 0.10%)</title><rect x="5.4393%" y="1157" width="0.1046%" height="15" fill="rgb(250,154,43)" fg:x="52" fg:w="1"/><text x="5.6893%" y="1167.50"></text></g><g><title>databend-query`indexmap::map::IndexMap&lt;K,V,S&gt;::get (1 samples, 0.10%)</title><rect x="5.4393%" y="1141" width="0.1046%" height="15" fill="rgb(226,43,29)" fg:x="52" fg:w="1"/><text x="5.6893%" y="1151.50"></text></g><g><title>databend-query`indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (1 samples, 0.10%)</title><rect x="5.4393%" y="1125" width="0.1046%" height="15" fill="rgb(249,228,39)" fg:x="52" fg:w="1"/><text x="5.6893%" y="1135.50"></text></g><g><title>databend-query`indexmap::map::IndexMap&lt;K,V,S&gt;::hash (1 samples, 0.10%)</title><rect x="5.4393%" y="1109" width="0.1046%" height="15" fill="rgb(216,79,43)" fg:x="52" fg:w="1"/><text x="5.6893%" y="1119.50"></text></g><g><title>databend-query`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.10%)</title><rect x="5.4393%" y="1093" width="0.1046%" height="15" fill="rgb(228,95,12)" fg:x="52" fg:w="1"/><text x="5.6893%" y="1103.50"></text></g><g><title>databend-query`&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.10%)</title><rect x="5.4393%" y="1077" width="0.1046%" height="15" fill="rgb(249,221,15)" fg:x="52" fg:w="1"/><text x="5.6893%" y="1087.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.10%)</title><rect x="5.4393%" y="1061" width="0.1046%" height="15" fill="rgb(233,34,13)" fg:x="52" fg:w="1"/><text x="5.6893%" y="1071.50"></text></g><g><title>databend-query`&lt;databend_query::config::outer_v0::Config as clap::derive::Args&gt;::augment_args (1 samples, 0.10%)</title><rect x="5.5439%" y="1253" width="0.1046%" height="15" fill="rgb(214,103,39)" fg:x="53" fg:w="1"/><text x="5.7939%" y="1263.50"></text></g><g><title>databend-query`&lt;databend_query::config::outer_v0::QueryConfig as clap::derive::Args&gt;::augment_args (1 samples, 0.10%)</title><rect x="5.5439%" y="1237" width="0.1046%" height="15" fill="rgb(251,126,39)" fg:x="53" fg:w="1"/><text x="5.7939%" y="1247.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.10%)</title><rect x="5.5439%" y="1221" width="0.1046%" height="15" fill="rgb(214,216,36)" fg:x="53" fg:w="1"/><text x="5.7939%" y="1231.50"></text></g><g><title>databend-query`clap::derive::CommandFactory::command (2 samples, 0.21%)</title><rect x="5.5439%" y="1285" width="0.2092%" height="15" fill="rgb(220,221,8)" fg:x="53" fg:w="2"/><text x="5.7939%" y="1295.50"></text></g><g><title>databend-query`&lt;databend_query::config::outer_v0::Config as clap::derive::CommandFactory&gt;::into_app (2 samples, 0.21%)</title><rect x="5.5439%" y="1269" width="0.2092%" height="15" fill="rgb(240,216,3)" fg:x="53" fg:w="2"/><text x="5.7939%" y="1279.50"></text></g><g><title>databend-query`clap::build::command::App::new (1 samples, 0.10%)</title><rect x="5.6485%" y="1253" width="0.1046%" height="15" fill="rgb(232,218,17)" fg:x="54" fg:w="1"/><text x="5.8985%" y="1263.50"></text></g><g><title>databend-query`clap::build::command::App::new::new_inner (1 samples, 0.10%)</title><rect x="5.6485%" y="1237" width="0.1046%" height="15" fill="rgb(229,163,45)" fg:x="54" fg:w="1"/><text x="5.8985%" y="1247.50"></text></g><g><title>databend-query`clap::build::command::App::arg (1 samples, 0.10%)</title><rect x="5.6485%" y="1221" width="0.1046%" height="15" fill="rgb(231,110,42)" fg:x="54" fg:w="1"/><text x="5.8985%" y="1231.50"></text></g><g><title>databend-query`clap::mkeymap::MKeyMap::push (1 samples, 0.10%)</title><rect x="5.6485%" y="1205" width="0.1046%" height="15" fill="rgb(208,170,48)" fg:x="54" fg:w="1"/><text x="5.8985%" y="1215.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.10%)</title><rect x="5.6485%" y="1189" width="0.1046%" height="15" fill="rgb(239,116,25)" fg:x="54" fg:w="1"/><text x="5.8985%" y="1199.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.10%)</title><rect x="5.6485%" y="1173" width="0.1046%" height="15" fill="rgb(219,200,50)" fg:x="54" fg:w="1"/><text x="5.8985%" y="1183.50"></text></g><g><title>databend-query`clap::derive::Parser::parse (5 samples, 0.52%)</title><rect x="5.3347%" y="1301" width="0.5230%" height="15" fill="rgb(245,200,0)" fg:x="51" fg:w="5"/><text x="5.5847%" y="1311.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;clap::parse::matches::arg_matches::ArgMatches&gt; (1 samples, 0.10%)</title><rect x="5.7531%" y="1285" width="0.1046%" height="15" fill="rgb(245,119,33)" fg:x="55" fg:w="1"/><text x="6.0031%" y="1295.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;indexmap::map::IndexMap&lt;clap::util::id::Id,clap::parse::matches::matched_arg::MatchedArg&gt;&gt; (1 samples, 0.10%)</title><rect x="5.7531%" y="1269" width="0.1046%" height="15" fill="rgb(231,125,12)" fg:x="55" fg:w="1"/><text x="6.0031%" y="1279.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;indexmap::map::core::IndexMapCore&lt;clap::util::id::Id,clap::parse::matches::matched_arg::MatchedArg&gt;&gt; (1 samples, 0.10%)</title><rect x="5.7531%" y="1253" width="0.1046%" height="15" fill="rgb(216,96,41)" fg:x="55" fg:w="1"/><text x="6.0031%" y="1263.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;clap::util::id::Id,clap::parse::matches::matched_arg::MatchedArg&gt;&gt;&gt; (1 samples, 0.10%)</title><rect x="5.7531%" y="1237" width="0.1046%" height="15" fill="rgb(248,43,45)" fg:x="55" fg:w="1"/><text x="6.0031%" y="1247.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="5.7531%" y="1221" width="0.1046%" height="15" fill="rgb(217,222,7)" fg:x="55" fg:w="1"/><text x="6.0031%" y="1231.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;[indexmap::Bucket&lt;clap::util::id::Id,clap::parse::matches::matched_arg::MatchedArg&gt;]&gt; (1 samples, 0.10%)</title><rect x="5.7531%" y="1205" width="0.1046%" height="15" fill="rgb(233,28,6)" fg:x="55" fg:w="1"/><text x="6.0031%" y="1215.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;indexmap::Bucket&lt;clap::util::id::Id,clap::parse::matches::matched_arg::MatchedArg&gt;&gt; (1 samples, 0.10%)</title><rect x="5.7531%" y="1189" width="0.1046%" height="15" fill="rgb(231,218,15)" fg:x="55" fg:w="1"/><text x="6.0031%" y="1199.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;clap::parse::matches::matched_arg::MatchedArg&gt; (1 samples, 0.10%)</title><rect x="5.7531%" y="1173" width="0.1046%" height="15" fill="rgb(226,171,48)" fg:x="55" fg:w="1"/><text x="6.0031%" y="1183.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;std::ffi::os_str::OsString&gt;&gt;&gt; (1 samples, 0.10%)</title><rect x="5.7531%" y="1157" width="0.1046%" height="15" fill="rgb(235,201,9)" fg:x="55" fg:w="1"/><text x="6.0031%" y="1167.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;std::ffi::os_str::OsString&gt;&gt;&gt; (1 samples, 0.10%)</title><rect x="5.7531%" y="1141" width="0.1046%" height="15" fill="rgb(217,80,15)" fg:x="55" fg:w="1"/><text x="6.0031%" y="1151.50"></text></g><g><title>databend-query`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="5.7531%" y="1125" width="0.1046%" height="15" fill="rgb(219,152,8)" fg:x="55" fg:w="1"/><text x="6.0031%" y="1135.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.10%)</title><rect x="5.7531%" y="1109" width="0.1046%" height="15" fill="rgb(243,107,38)" fg:x="55" fg:w="1"/><text x="6.0031%" y="1119.50"></text></g><g><title>databend-query`alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="5.7531%" y="1093" width="0.1046%" height="15" fill="rgb(231,17,5)" fg:x="55" fg:w="1"/><text x="6.0031%" y="1103.50"></text></g><g><title>databend-query`__rg_dealloc (1 samples, 0.10%)</title><rect x="5.7531%" y="1077" width="0.1046%" height="15" fill="rgb(209,25,54)" fg:x="55" fg:w="1"/><text x="6.0031%" y="1087.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.10%)</title><rect x="5.7531%" y="1061" width="0.1046%" height="15" fill="rgb(219,0,2)" fg:x="55" fg:w="1"/><text x="6.0031%" y="1071.50"></text></g><g><title>databend-query`_rjem_sdallocx (1 samples, 0.10%)</title><rect x="5.7531%" y="1045" width="0.1046%" height="15" fill="rgb(246,9,5)" fg:x="55" fg:w="1"/><text x="6.0031%" y="1055.50"></text></g><g><title>databend-query`&lt;serde_bridge::value::Value as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="5.8577%" y="1269" width="0.1046%" height="15" fill="rgb(226,159,4)" fg:x="56" fg:w="1"/><text x="6.1077%" y="1279.50"></text></g><g><title>databend-query`&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="5.8577%" y="1253" width="0.1046%" height="15" fill="rgb(219,175,34)" fg:x="56" fg:w="1"/><text x="6.1077%" y="1263.50"></text></g><g><title>databend-query`&lt;indexmap::map::core::IndexMapCore&lt;K,V&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="5.8577%" y="1237" width="0.1046%" height="15" fill="rgb(236,10,46)" fg:x="56" fg:w="1"/><text x="6.1077%" y="1247.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone_from (1 samples, 0.10%)</title><rect x="5.8577%" y="1221" width="0.1046%" height="15" fill="rgb(240,211,16)" fg:x="56" fg:w="1"/><text x="6.1077%" y="1231.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::SpecCloneFrom&gt;::clone_from (1 samples, 0.10%)</title><rect x="5.8577%" y="1205" width="0.1046%" height="15" fill="rgb(205,3,43)" fg:x="56" fg:w="1"/><text x="6.1077%" y="1215.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="5.8577%" y="1189" width="0.1046%" height="15" fill="rgb(245,7,22)" fg:x="56" fg:w="1"/><text x="6.1077%" y="1199.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="5.8577%" y="1173" width="0.1046%" height="15" fill="rgb(239,132,32)" fg:x="56" fg:w="1"/><text x="6.1077%" y="1183.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="5.8577%" y="1157" width="0.1046%" height="15" fill="rgb(228,202,34)" fg:x="56" fg:w="1"/><text x="6.1077%" y="1167.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="5.8577%" y="1141" width="0.1046%" height="15" fill="rgb(254,200,22)" fg:x="56" fg:w="1"/><text x="6.1077%" y="1151.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="5.8577%" y="1125" width="0.1046%" height="15" fill="rgb(219,10,39)" fg:x="56" fg:w="1"/><text x="6.1077%" y="1135.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="5.8577%" y="1109" width="0.1046%" height="15" fill="rgb(226,210,39)" fg:x="56" fg:w="1"/><text x="6.1077%" y="1119.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="5.8577%" y="1093" width="0.1046%" height="15" fill="rgb(208,219,16)" fg:x="56" fg:w="1"/><text x="6.1077%" y="1103.50"></text></g><g><title>databend-query`core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="5.8577%" y="1077" width="0.1046%" height="15" fill="rgb(216,158,51)" fg:x="56" fg:w="1"/><text x="6.1077%" y="1087.50"></text></g><g><title>databend-query`core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="5.8577%" y="1061" width="0.1046%" height="15" fill="rgb(233,14,44)" fg:x="56" fg:w="1"/><text x="6.1077%" y="1071.50"></text></g><g><title>databend-query`&lt;indexmap::Bucket&lt;K,V&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="5.8577%" y="1045" width="0.1046%" height="15" fill="rgb(237,97,39)" fg:x="56" fg:w="1"/><text x="6.1077%" y="1055.50"></text></g><g><title>databend-query`&lt;serde_bridge::value::Value as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="5.8577%" y="1029" width="0.1046%" height="15" fill="rgb(218,198,43)" fg:x="56" fg:w="1"/><text x="6.1077%" y="1039.50"></text></g><g><title>databend-query`&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="5.8577%" y="1013" width="0.1046%" height="15" fill="rgb(231,104,20)" fg:x="56" fg:w="1"/><text x="6.1077%" y="1023.50"></text></g><g><title>databend-query`&lt;indexmap::map::core::IndexMapCore&lt;K,V&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="5.8577%" y="997" width="0.1046%" height="15" fill="rgb(254,36,13)" fg:x="56" fg:w="1"/><text x="6.1077%" y="1007.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone_from (1 samples, 0.10%)</title><rect x="5.8577%" y="981" width="0.1046%" height="15" fill="rgb(248,14,50)" fg:x="56" fg:w="1"/><text x="6.1077%" y="991.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::SpecCloneFrom&gt;::clone_from (1 samples, 0.10%)</title><rect x="5.8577%" y="965" width="0.1046%" height="15" fill="rgb(217,107,29)" fg:x="56" fg:w="1"/><text x="6.1077%" y="975.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="5.8577%" y="949" width="0.1046%" height="15" fill="rgb(251,169,33)" fg:x="56" fg:w="1"/><text x="6.1077%" y="959.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="5.8577%" y="933" width="0.1046%" height="15" fill="rgb(217,108,32)" fg:x="56" fg:w="1"/><text x="6.1077%" y="943.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="5.8577%" y="917" width="0.1046%" height="15" fill="rgb(219,66,42)" fg:x="56" fg:w="1"/><text x="6.1077%" y="927.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="5.8577%" y="901" width="0.1046%" height="15" fill="rgb(206,180,7)" fg:x="56" fg:w="1"/><text x="6.1077%" y="911.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="5.8577%" y="885" width="0.1046%" height="15" fill="rgb(208,226,31)" fg:x="56" fg:w="1"/><text x="6.1077%" y="895.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="5.8577%" y="869" width="0.1046%" height="15" fill="rgb(218,26,49)" fg:x="56" fg:w="1"/><text x="6.1077%" y="879.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="5.8577%" y="853" width="0.1046%" height="15" fill="rgb(233,197,48)" fg:x="56" fg:w="1"/><text x="6.1077%" y="863.50"></text></g><g><title>databend-query`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="5.8577%" y="837" width="0.1046%" height="15" fill="rgb(252,181,51)" fg:x="56" fg:w="1"/><text x="6.1077%" y="847.50"></text></g><g><title>databend-query`&lt;serfig::collectors::structural::Structural&lt;V,R,P&gt; as serfig::collectors::collector::Collector&lt;V&gt;&gt;::collect (1 samples, 0.10%)</title><rect x="5.9623%" y="1269" width="0.1046%" height="15" fill="rgb(253,90,19)" fg:x="57" fg:w="1"/><text x="6.2123%" y="1279.50"></text></g><g><title>databend-query`&lt;core::result::Result&lt;T,F&gt; as core::ops::try_trait::FromResidual&lt;core::result::Result&lt;core::convert::Infallible,E&gt;&gt;&gt;::from_residual (1 samples, 0.10%)</title><rect x="5.9623%" y="1253" width="0.1046%" height="15" fill="rgb(215,171,30)" fg:x="57" fg:w="1"/><text x="6.2123%" y="1263.50"></text></g><g><title>databend-query`anyhow::error::_&lt;impl core::convert::From&lt;E&gt; for anyhow::Error&gt;::from (1 samples, 0.10%)</title><rect x="5.9623%" y="1237" width="0.1046%" height="15" fill="rgb(214,222,9)" fg:x="57" fg:w="1"/><text x="6.2123%" y="1247.50"></text></g><g><title>databend-query`anyhow::error::_&lt;impl anyhow::Error&gt;::from_std (1 samples, 0.10%)</title><rect x="5.9623%" y="1221" width="0.1046%" height="15" fill="rgb(223,3,22)" fg:x="57" fg:w="1"/><text x="6.2123%" y="1231.50"></text></g><g><title>databend-query`anyhow::error::_&lt;impl anyhow::Error&gt;::construct (1 samples, 0.10%)</title><rect x="5.9623%" y="1205" width="0.1046%" height="15" fill="rgb(225,196,46)" fg:x="57" fg:w="1"/><text x="6.2123%" y="1215.50"></text></g><g><title>databend-query`anyhow::ptr::Own&lt;T&gt;::new (1 samples, 0.10%)</title><rect x="5.9623%" y="1189" width="0.1046%" height="15" fill="rgb(209,110,37)" fg:x="57" fg:w="1"/><text x="6.2123%" y="1199.50"></text></g><g><title>databend-query`alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (1 samples, 0.10%)</title><rect x="5.9623%" y="1173" width="0.1046%" height="15" fill="rgb(249,89,12)" fg:x="57" fg:w="1"/><text x="6.2123%" y="1183.50"></text></g><g><title>databend-query`serde_bridge::ser::into_value (1 samples, 0.10%)</title><rect x="6.0669%" y="1269" width="0.1046%" height="15" fill="rgb(226,27,33)" fg:x="58" fg:w="1"/><text x="6.3169%" y="1279.50"></text></g><g><title>databend-query`databend_query::config::outer_v0::_::_&lt;impl serde::ser::Serialize for databend_query::config::outer_v0::Config&gt;::serialize (1 samples, 0.10%)</title><rect x="6.0669%" y="1253" width="0.1046%" height="15" fill="rgb(213,82,22)" fg:x="58" fg:w="1"/><text x="6.3169%" y="1263.50"></text></g><g><title>databend-query`&lt;serde_bridge::ser::StructSerializer as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="6.0669%" y="1237" width="0.1046%" height="15" fill="rgb(248,140,0)" fg:x="58" fg:w="1"/><text x="6.3169%" y="1247.50"></text></g><g><title>databend-query`databend_query::config::outer_v0::_::_&lt;impl serde::ser::Serialize for databend_query::config::outer_v0::MetaConfig&gt;::serialize (1 samples, 0.10%)</title><rect x="6.0669%" y="1221" width="0.1046%" height="15" fill="rgb(228,106,3)" fg:x="58" fg:w="1"/><text x="6.3169%" y="1231.50"></text></g><g><title>databend-query`&lt;serde_bridge::ser::StructSerializer as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="6.0669%" y="1205" width="0.1046%" height="15" fill="rgb(209,23,37)" fg:x="58" fg:w="1"/><text x="6.3169%" y="1215.50"></text></g><g><title>databend-query`serde::ser::impls::_&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (1 samples, 0.10%)</title><rect x="6.0669%" y="1189" width="0.1046%" height="15" fill="rgb(241,93,50)" fg:x="58" fg:w="1"/><text x="6.3169%" y="1199.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.10%)</title><rect x="6.0669%" y="1173" width="0.1046%" height="15" fill="rgb(253,46,43)" fg:x="58" fg:w="1"/><text x="6.3169%" y="1183.50"></text></g><g><title>databend-query`common_base::base::runtime::Runtime::block_on (52 samples, 5.44%)</title><rect x="0.8368%" y="1493" width="5.4393%" height="15" fill="rgb(226,206,43)" fg:x="8" fg:w="52"/><text x="1.0868%" y="1503.50">databen..</text></g><g><title>databend-query`tokio::runtime::handle::Handle::block_on (52 samples, 5.44%)</title><rect x="0.8368%" y="1477" width="5.4393%" height="15" fill="rgb(217,54,7)" fg:x="8" fg:w="52"/><text x="1.0868%" y="1487.50">databen..</text></g><g><title>databend-query`tokio::runtime::enter::Enter::block_on (52 samples, 5.44%)</title><rect x="0.8368%" y="1461" width="5.4393%" height="15" fill="rgb(223,5,52)" fg:x="8" fg:w="52"/><text x="1.0868%" y="1471.50">databen..</text></g><g><title>databend-query`tokio::park::thread::CachedParkThread::block_on (52 samples, 5.44%)</title><rect x="0.8368%" y="1445" width="5.4393%" height="15" fill="rgb(206,52,46)" fg:x="8" fg:w="52"/><text x="1.0868%" y="1455.50">databen..</text></g><g><title>databend-query`std::thread::local::LocalKey&lt;T&gt;::with (52 samples, 5.44%)</title><rect x="0.8368%" y="1429" width="5.4393%" height="15" fill="rgb(253,136,11)" fg:x="8" fg:w="52"/><text x="1.0868%" y="1439.50">databen..</text></g><g><title>databend-query`std::thread::local::LocalKey&lt;T&gt;::try_with (52 samples, 5.44%)</title><rect x="0.8368%" y="1413" width="5.4393%" height="15" fill="rgb(208,106,33)" fg:x="8" fg:w="52"/><text x="1.0868%" y="1423.50">databen..</text></g><g><title>databend-query`tokio::coop::with_budget::_{{closure}} (52 samples, 5.44%)</title><rect x="0.8368%" y="1397" width="5.4393%" height="15" fill="rgb(206,54,4)" fg:x="8" fg:w="52"/><text x="1.0868%" y="1407.50">databen..</text></g><g><title>databend-query`tokio::park::thread::CachedParkThread::block_on::_{{closure}} (52 samples, 5.44%)</title><rect x="0.8368%" y="1381" width="5.4393%" height="15" fill="rgb(213,3,15)" fg:x="8" fg:w="52"/><text x="1.0868%" y="1391.50">databen..</text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (52 samples, 5.44%)</title><rect x="0.8368%" y="1365" width="5.4393%" height="15" fill="rgb(252,211,39)" fg:x="8" fg:w="52"/><text x="1.0868%" y="1375.50">databen..</text></g><g><title>databend-query`databend_query::main::main_impl::_{{closure}} (52 samples, 5.44%)</title><rect x="0.8368%" y="1349" width="5.4393%" height="15" fill="rgb(223,6,36)" fg:x="8" fg:w="52"/><text x="1.0868%" y="1359.50">databen..</text></g><g><title>databend-query`databend_query::config::inner::Config::load (9 samples, 0.94%)</title><rect x="5.3347%" y="1333" width="0.9414%" height="15" fill="rgb(252,169,45)" fg:x="51" fg:w="9"/><text x="5.5847%" y="1343.50"></text></g><g><title>databend-query`databend_query::config::outer_v0::Config::load (9 samples, 0.94%)</title><rect x="5.3347%" y="1317" width="0.9414%" height="15" fill="rgb(212,48,26)" fg:x="51" fg:w="9"/><text x="5.5847%" y="1327.50"></text></g><g><title>databend-query`serfig::builder::Builder&lt;V&gt;::build (4 samples, 0.42%)</title><rect x="5.8577%" y="1301" width="0.4184%" height="15" fill="rgb(251,102,48)" fg:x="56" fg:w="4"/><text x="6.1077%" y="1311.50"></text></g><g><title>databend-query`serfig::builder::Builder&lt;V&gt;::build_with (4 samples, 0.42%)</title><rect x="5.8577%" y="1285" width="0.4184%" height="15" fill="rgb(243,208,16)" fg:x="56" fg:w="4"/><text x="6.1077%" y="1295.50"></text></g><g><title>databend-query`serfig::value::merge_with_default (1 samples, 0.10%)</title><rect x="6.1715%" y="1269" width="0.1046%" height="15" fill="rgb(219,96,24)" fg:x="59" fg:w="1"/><text x="6.4215%" y="1279.50"></text></g><g><title>databend-query`serfig::value::merge_map_with_default (1 samples, 0.10%)</title><rect x="6.1715%" y="1253" width="0.1046%" height="15" fill="rgb(219,33,29)" fg:x="59" fg:w="1"/><text x="6.4215%" y="1263.50"></text></g><g><title>databend-query`serfig::value::merge_with_default (1 samples, 0.10%)</title><rect x="6.1715%" y="1237" width="0.1046%" height="15" fill="rgb(223,176,5)" fg:x="59" fg:w="1"/><text x="6.4215%" y="1247.50"></text></g><g><title>databend-query`serfig::value::merge_map_with_default (1 samples, 0.10%)</title><rect x="6.1715%" y="1221" width="0.1046%" height="15" fill="rgb(228,140,14)" fg:x="59" fg:w="1"/><text x="6.4215%" y="1231.50"></text></g><g><title>databend-query`serfig::value::merge_with_default (1 samples, 0.10%)</title><rect x="6.1715%" y="1205" width="0.1046%" height="15" fill="rgb(217,179,31)" fg:x="59" fg:w="1"/><text x="6.4215%" y="1215.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;serde_bridge::value::Value&gt; (1 samples, 0.10%)</title><rect x="6.1715%" y="1189" width="0.1046%" height="15" fill="rgb(230,9,30)" fg:x="59" fg:w="1"/><text x="6.4215%" y="1199.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.10%)</title><rect x="6.1715%" y="1173" width="0.1046%" height="15" fill="rgb(230,136,20)" fg:x="59" fg:w="1"/><text x="6.4215%" y="1183.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.10%)</title><rect x="6.1715%" y="1157" width="0.1046%" height="15" fill="rgb(215,210,22)" fg:x="59" fg:w="1"/><text x="6.4215%" y="1167.50"></text></g><g><title>databend-query`tokio::runtime::driver::Driver::new (1 samples, 0.10%)</title><rect x="6.2762%" y="1429" width="0.1046%" height="15" fill="rgb(218,43,5)" fg:x="60" fg:w="1"/><text x="6.5262%" y="1439.50"></text></g><g><title>databend-query`tokio::runtime::driver::create_io_stack (1 samples, 0.10%)</title><rect x="6.2762%" y="1413" width="0.1046%" height="15" fill="rgb(216,11,5)" fg:x="60" fg:w="1"/><text x="6.5262%" y="1423.50"></text></g><g><title>databend-query`mio::event::events::Events::with_capacity (1 samples, 0.10%)</title><rect x="6.2762%" y="1397" width="0.1046%" height="15" fill="rgb(209,82,29)" fg:x="60" fg:w="1"/><text x="6.5262%" y="1407.50"></text></g><g><title>dyld`start (54 samples, 5.65%)</title><rect x="0.8368%" y="1621" width="5.6485%" height="15" fill="rgb(244,115,12)" fg:x="8" fg:w="54"/><text x="1.0868%" y="1631.50">dyld`st..</text></g><g><title>databend-query`main (54 samples, 5.65%)</title><rect x="0.8368%" y="1605" width="5.6485%" height="15" fill="rgb(222,82,18)" fg:x="8" fg:w="54"/><text x="1.0868%" y="1615.50">databen..</text></g><g><title>databend-query`std::rt::lang_start (54 samples, 5.65%)</title><rect x="0.8368%" y="1589" width="5.6485%" height="15" fill="rgb(249,227,8)" fg:x="8" fg:w="54"/><text x="1.0868%" y="1599.50">databen..</text></g><g><title>databend-query`std::rt::lang_start_internal (54 samples, 5.65%)</title><rect x="0.8368%" y="1573" width="5.6485%" height="15" fill="rgb(253,141,45)" fg:x="8" fg:w="54"/><text x="1.0868%" y="1583.50">databen..</text></g><g><title>databend-query`std::rt::lang_start::_{{closure}} (54 samples, 5.65%)</title><rect x="0.8368%" y="1557" width="5.6485%" height="15" fill="rgb(234,184,4)" fg:x="8" fg:w="54"/><text x="1.0868%" y="1567.50">databen..</text></g><g><title>databend-query`std::sys_common::backtrace::__rust_begin_short_backtrace (54 samples, 5.65%)</title><rect x="0.8368%" y="1541" width="5.6485%" height="15" fill="rgb(218,194,23)" fg:x="8" fg:w="54"/><text x="1.0868%" y="1551.50">databen..</text></g><g><title>databend-query`core::ops::function::FnOnce::call_once (54 samples, 5.65%)</title><rect x="0.8368%" y="1525" width="5.6485%" height="15" fill="rgb(235,66,41)" fg:x="8" fg:w="54"/><text x="1.0868%" y="1535.50">databen..</text></g><g><title>databend-query`databend_query::main (54 samples, 5.65%)</title><rect x="0.8368%" y="1509" width="5.6485%" height="15" fill="rgb(245,217,1)" fg:x="8" fg:w="54"/><text x="1.0868%" y="1519.50">databen..</text></g><g><title>databend-query`common_base::base::runtime::Runtime::with_default_worker_threads (2 samples, 0.21%)</title><rect x="6.2762%" y="1493" width="0.2092%" height="15" fill="rgb(229,91,1)" fg:x="60" fg:w="2"/><text x="6.5262%" y="1503.50"></text></g><g><title>databend-query`common_base::base::runtime::Runtime::create (2 samples, 0.21%)</title><rect x="6.2762%" y="1477" width="0.2092%" height="15" fill="rgb(207,101,30)" fg:x="60" fg:w="2"/><text x="6.5262%" y="1487.50"></text></g><g><title>databend-query`tokio::runtime::builder::Builder::build (2 samples, 0.21%)</title><rect x="6.2762%" y="1461" width="0.2092%" height="15" fill="rgb(223,82,49)" fg:x="60" fg:w="2"/><text x="6.5262%" y="1471.50"></text></g><g><title>databend-query`tokio::runtime::builder::Builder::build_threaded_runtime (2 samples, 0.21%)</title><rect x="6.2762%" y="1445" width="0.2092%" height="15" fill="rgb(218,167,17)" fg:x="60" fg:w="2"/><text x="6.5262%" y="1455.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Launch::launch (1 samples, 0.10%)</title><rect x="6.3808%" y="1429" width="0.1046%" height="15" fill="rgb(208,103,14)" fg:x="61" fg:w="1"/><text x="6.6308%" y="1439.50"></text></g><g><title>databend-query`tokio::runtime::blocking::pool::spawn_blocking (1 samples, 0.10%)</title><rect x="6.3808%" y="1413" width="0.1046%" height="15" fill="rgb(238,20,8)" fg:x="61" fg:w="1"/><text x="6.6308%" y="1423.50"></text></g><g><title>databend-query`tokio::runtime::handle::Handle::spawn_blocking (1 samples, 0.10%)</title><rect x="6.3808%" y="1397" width="0.1046%" height="15" fill="rgb(218,80,54)" fg:x="61" fg:w="1"/><text x="6.6308%" y="1407.50"></text></g><g><title>databend-query`tokio::runtime::handle::Handle::spawn_blocking_inner (1 samples, 0.10%)</title><rect x="6.3808%" y="1381" width="0.1046%" height="15" fill="rgb(240,144,17)" fg:x="61" fg:w="1"/><text x="6.6308%" y="1391.50"></text></g><g><title>databend-query`tokio::runtime::blocking::pool::Spawner::spawn (1 samples, 0.10%)</title><rect x="6.3808%" y="1365" width="0.1046%" height="15" fill="rgb(245,27,50)" fg:x="61" fg:w="1"/><text x="6.6308%" y="1375.50"></text></g><g><title>databend-query`std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.10%)</title><rect x="6.3808%" y="1349" width="0.1046%" height="15" fill="rgb(251,51,7)" fg:x="61" fg:w="1"/><text x="6.6308%" y="1359.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.10%)</title><rect x="6.3808%" y="1333" width="0.1046%" height="15" fill="rgb(245,217,29)" fg:x="61" fg:w="1"/><text x="6.6308%" y="1343.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.10%)</title><rect x="6.3808%" y="1317" width="0.1046%" height="15" fill="rgb(221,176,29)" fg:x="61" fg:w="1"/><text x="6.6308%" y="1327.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="6.3808%" y="1301" width="0.1046%" height="15" fill="rgb(212,180,24)" fg:x="61" fg:w="1"/><text x="6.6308%" y="1311.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.10%)</title><rect x="6.3808%" y="1285" width="0.1046%" height="15" fill="rgb(254,24,2)" fg:x="61" fg:w="1"/><text x="6.6308%" y="1295.50"></text></g><g><title>databend-query`hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.10%)</title><rect x="6.3808%" y="1269" width="0.1046%" height="15" fill="rgb(230,100,2)" fg:x="61" fg:w="1"/><text x="6.6308%" y="1279.50"></text></g><g><title>databend-query`hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.10%)</title><rect x="6.3808%" y="1253" width="0.1046%" height="15" fill="rgb(219,142,25)" fg:x="61" fg:w="1"/><text x="6.6308%" y="1263.50"></text></g><g><title>databend-query`hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.10%)</title><rect x="6.3808%" y="1237" width="0.1046%" height="15" fill="rgb(240,73,43)" fg:x="61" fg:w="1"/><text x="6.6308%" y="1247.50"></text></g><g><title>databend-query`hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.10%)</title><rect x="6.3808%" y="1221" width="0.1046%" height="15" fill="rgb(214,114,15)" fg:x="61" fg:w="1"/><text x="6.6308%" y="1231.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="6.3808%" y="1205" width="0.1046%" height="15" fill="rgb(207,130,4)" fg:x="61" fg:w="1"/><text x="6.6308%" y="1215.50"></text></g><g><title>databend-query`alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="6.3808%" y="1189" width="0.1046%" height="15" fill="rgb(221,25,40)" fg:x="61" fg:w="1"/><text x="6.6308%" y="1199.50"></text></g><g><title>databend-query`alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="6.3808%" y="1173" width="0.1046%" height="15" fill="rgb(241,184,7)" fg:x="61" fg:w="1"/><text x="6.6308%" y="1183.50"></text></g><g><title>databend-query`__rg_alloc (1 samples, 0.10%)</title><rect x="6.3808%" y="1157" width="0.1046%" height="15" fill="rgb(235,159,4)" fg:x="61" fg:w="1"/><text x="6.6308%" y="1167.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.10%)</title><rect x="6.3808%" y="1141" width="0.1046%" height="15" fill="rgb(214,87,48)" fg:x="61" fg:w="1"/><text x="6.6308%" y="1151.50"></text></g><g><title>databend-query`_rjem_mallocx (1 samples, 0.10%)</title><rect x="6.3808%" y="1125" width="0.1046%" height="15" fill="rgb(246,198,24)" fg:x="61" fg:w="1"/><text x="6.6308%" y="1135.50"></text></g><g><title>databend-query`_rjem_je_tcache_alloc_small_hard (1 samples, 0.10%)</title><rect x="6.3808%" y="1109" width="0.1046%" height="15" fill="rgb(209,66,40)" fg:x="61" fg:w="1"/><text x="6.6308%" y="1119.50"></text></g><g><title>databend-query`_rjem_je_arena_tcache_fill_small (1 samples, 0.10%)</title><rect x="6.3808%" y="1093" width="0.1046%" height="15" fill="rgb(233,147,39)" fg:x="61" fg:w="1"/><text x="6.6308%" y="1103.50"></text></g><g><title>databend-query`arena_bin_malloc_hard (1 samples, 0.10%)</title><rect x="6.3808%" y="1077" width="0.1046%" height="15" fill="rgb(231,145,52)" fg:x="61" fg:w="1"/><text x="6.6308%" y="1087.50"></text></g><g><title>databend-query`arena_bin_nonfull_slab_get (1 samples, 0.10%)</title><rect x="6.3808%" y="1061" width="0.1046%" height="15" fill="rgb(206,20,26)" fg:x="61" fg:w="1"/><text x="6.6308%" y="1071.50"></text></g><g><title>databend-query`arena_slab_alloc (1 samples, 0.10%)</title><rect x="6.3808%" y="1045" width="0.1046%" height="15" fill="rgb(238,220,4)" fg:x="61" fg:w="1"/><text x="6.6308%" y="1055.50"></text></g><g><title>databend-query`arena_slab_alloc_hard (1 samples, 0.10%)</title><rect x="6.3808%" y="1029" width="0.1046%" height="15" fill="rgb(252,195,42)" fg:x="61" fg:w="1"/><text x="6.6308%" y="1039.50"></text></g><g><title>databend-query`_rjem_je_extent_alloc_wrapper (1 samples, 0.10%)</title><rect x="6.3808%" y="1013" width="0.1046%" height="15" fill="rgb(209,10,6)" fg:x="61" fg:w="1"/><text x="6.6308%" y="1023.50"></text></g><g><title>databend-query`extent_alloc_wrapper_hard (1 samples, 0.10%)</title><rect x="6.3808%" y="997" width="0.1046%" height="15" fill="rgb(229,3,52)" fg:x="61" fg:w="1"/><text x="6.6308%" y="1007.50"></text></g><g><title>databend-query`extent_alloc_default_impl (1 samples, 0.10%)</title><rect x="6.3808%" y="981" width="0.1046%" height="15" fill="rgb(253,49,37)" fg:x="61" fg:w="1"/><text x="6.6308%" y="991.50"></text></g><g><title>databend-query`extent_alloc_core (1 samples, 0.10%)</title><rect x="6.3808%" y="965" width="0.1046%" height="15" fill="rgb(240,103,49)" fg:x="61" fg:w="1"/><text x="6.6308%" y="975.50"></text></g><g><title>databend-query`_rjem_je_extent_alloc_mmap (1 samples, 0.10%)</title><rect x="6.3808%" y="949" width="0.1046%" height="15" fill="rgb(250,182,30)" fg:x="61" fg:w="1"/><text x="6.6308%" y="959.50"></text></g><g><title>databend-query`_rjem_je_pages_map (1 samples, 0.10%)</title><rect x="6.3808%" y="933" width="0.1046%" height="15" fill="rgb(248,8,30)" fg:x="61" fg:w="1"/><text x="6.6308%" y="943.50"></text></g><g><title>databend-query`os_pages_map (1 samples, 0.10%)</title><rect x="6.3808%" y="917" width="0.1046%" height="15" fill="rgb(237,120,30)" fg:x="61" fg:w="1"/><text x="6.6308%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`__mmap (1 samples, 0.10%)</title><rect x="6.3808%" y="901" width="0.1046%" height="15" fill="rgb(221,146,34)" fg:x="61" fg:w="1"/><text x="6.6308%" y="911.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_start (1 samples, 0.10%)</title><rect x="6.4854%" y="1621" width="0.1046%" height="15" fill="rgb(242,55,13)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1631.50"></text></g><g><title>databend-query`std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.10%)</title><rect x="6.4854%" y="1605" width="0.1046%" height="15" fill="rgb(242,112,31)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1615.50"></text></g><g><title>databend-query`core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.10%)</title><rect x="6.4854%" y="1589" width="0.1046%" height="15" fill="rgb(249,192,27)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1599.50"></text></g><g><title>databend-query`std::thread::Builder::spawn_unchecked_::_{{closure}} (1 samples, 0.10%)</title><rect x="6.4854%" y="1573" width="0.1046%" height="15" fill="rgb(208,204,44)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1583.50"></text></g><g><title>databend-query`std::panic::catch_unwind (1 samples, 0.10%)</title><rect x="6.4854%" y="1557" width="0.1046%" height="15" fill="rgb(208,93,54)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1567.50"></text></g><g><title>databend-query`std::panicking::try (1 samples, 0.10%)</title><rect x="6.4854%" y="1541" width="0.1046%" height="15" fill="rgb(242,1,31)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1551.50"></text></g><g><title>databend-query`__rust_try (1 samples, 0.10%)</title><rect x="6.4854%" y="1525" width="0.1046%" height="15" fill="rgb(241,83,25)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1535.50"></text></g><g><title>databend-query`std::panicking::try::do_call (1 samples, 0.10%)</title><rect x="6.4854%" y="1509" width="0.1046%" height="15" fill="rgb(205,169,50)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1519.50"></text></g><g><title>databend-query`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.10%)</title><rect x="6.4854%" y="1493" width="0.1046%" height="15" fill="rgb(239,186,37)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1503.50"></text></g><g><title>databend-query`std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (1 samples, 0.10%)</title><rect x="6.4854%" y="1477" width="0.1046%" height="15" fill="rgb(205,221,10)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1487.50"></text></g><g><title>databend-query`std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.10%)</title><rect x="6.4854%" y="1461" width="0.1046%" height="15" fill="rgb(218,196,15)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1471.50"></text></g><g><title>databend-query`tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (1 samples, 0.10%)</title><rect x="6.4854%" y="1445" width="0.1046%" height="15" fill="rgb(218,196,35)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1455.50"></text></g><g><title>databend-query`tokio::runtime::blocking::pool::Inner::run (1 samples, 0.10%)</title><rect x="6.4854%" y="1429" width="0.1046%" height="15" fill="rgb(233,63,24)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1439.50"></text></g><g><title>databend-query`tokio::runtime::blocking::pool::Task::run (1 samples, 0.10%)</title><rect x="6.4854%" y="1413" width="0.1046%" height="15" fill="rgb(225,8,4)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1423.50"></text></g><g><title>databend-query`tokio::runtime::task::UnownedTask&lt;S&gt;::run (1 samples, 0.10%)</title><rect x="6.4854%" y="1397" width="0.1046%" height="15" fill="rgb(234,105,35)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1407.50"></text></g><g><title>databend-query`tokio::runtime::task::raw::RawTask::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="1381" width="0.1046%" height="15" fill="rgb(236,21,32)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1391.50"></text></g><g><title>databend-query`tokio::runtime::task::raw::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="1365" width="0.1046%" height="15" fill="rgb(228,109,6)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1375.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="1349" width="0.1046%" height="15" fill="rgb(229,215,31)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1359.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1 samples, 0.10%)</title><rect x="6.4854%" y="1333" width="0.1046%" height="15" fill="rgb(221,52,54)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1343.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future (1 samples, 0.10%)</title><rect x="6.4854%" y="1317" width="0.1046%" height="15" fill="rgb(252,129,43)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1327.50"></text></g><g><title>databend-query`std::panic::catch_unwind (1 samples, 0.10%)</title><rect x="6.4854%" y="1301" width="0.1046%" height="15" fill="rgb(248,183,27)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1311.50"></text></g><g><title>databend-query`std::panicking::try (1 samples, 0.10%)</title><rect x="6.4854%" y="1285" width="0.1046%" height="15" fill="rgb(250,0,22)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1295.50"></text></g><g><title>databend-query`__rust_try (1 samples, 0.10%)</title><rect x="6.4854%" y="1269" width="0.1046%" height="15" fill="rgb(213,166,10)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1279.50"></text></g><g><title>databend-query`std::panicking::try::do_call (1 samples, 0.10%)</title><rect x="6.4854%" y="1253" width="0.1046%" height="15" fill="rgb(207,163,36)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1263.50"></text></g><g><title>databend-query`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.10%)</title><rect x="6.4854%" y="1237" width="0.1046%" height="15" fill="rgb(208,122,22)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1247.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future::_{{closure}} (1 samples, 0.10%)</title><rect x="6.4854%" y="1221" width="0.1046%" height="15" fill="rgb(207,104,49)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1231.50"></text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="1205" width="0.1046%" height="15" fill="rgb(248,211,50)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1215.50"></text></g><g><title>databend-query`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.10%)</title><rect x="6.4854%" y="1189" width="0.1046%" height="15" fill="rgb(217,13,45)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1199.50"></text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (1 samples, 0.10%)</title><rect x="6.4854%" y="1173" width="0.1046%" height="15" fill="rgb(211,216,49)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1183.50"></text></g><g><title>databend-query`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="1157" width="0.1046%" height="15" fill="rgb(221,58,53)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1167.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Launch::launch::_{{closure}} (1 samples, 0.10%)</title><rect x="6.4854%" y="1141" width="0.1046%" height="15" fill="rgb(220,112,41)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1151.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::run (1 samples, 0.10%)</title><rect x="6.4854%" y="1125" width="0.1046%" height="15" fill="rgb(236,38,28)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1135.50"></text></g><g><title>databend-query`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (1 samples, 0.10%)</title><rect x="6.4854%" y="1109" width="0.1046%" height="15" fill="rgb(227,195,22)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1119.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::run::_{{closure}} (1 samples, 0.10%)</title><rect x="6.4854%" y="1093" width="0.1046%" height="15" fill="rgb(214,55,33)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1103.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Context::run (1 samples, 0.10%)</title><rect x="6.4854%" y="1077" width="0.1046%" height="15" fill="rgb(248,80,13)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1087.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Context::run_task (1 samples, 0.10%)</title><rect x="6.4854%" y="1061" width="0.1046%" height="15" fill="rgb(238,52,6)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1071.50"></text></g><g><title>databend-query`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.10%)</title><rect x="6.4854%" y="1045" width="0.1046%" height="15" fill="rgb(224,198,47)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1055.50"></text></g><g><title>databend-query`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.10%)</title><rect x="6.4854%" y="1029" width="0.1046%" height="15" fill="rgb(233,171,20)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1039.50"></text></g><g><title>databend-query`tokio::coop::with_budget::_{{closure}} (1 samples, 0.10%)</title><rect x="6.4854%" y="1013" width="0.1046%" height="15" fill="rgb(241,30,25)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1023.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Context::run_task::_{{closure}} (1 samples, 0.10%)</title><rect x="6.4854%" y="997" width="0.1046%" height="15" fill="rgb(207,171,38)" fg:x="62" fg:w="1"/><text x="6.7354%" y="1007.50"></text></g><g><title>databend-query`tokio::runtime::task::LocalNotified&lt;S&gt;::run (1 samples, 0.10%)</title><rect x="6.4854%" y="981" width="0.1046%" height="15" fill="rgb(234,70,1)" fg:x="62" fg:w="1"/><text x="6.7354%" y="991.50"></text></g><g><title>databend-query`tokio::runtime::task::raw::RawTask::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="965" width="0.1046%" height="15" fill="rgb(232,178,18)" fg:x="62" fg:w="1"/><text x="6.7354%" y="975.50"></text></g><g><title>databend-query`tokio::runtime::task::raw::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="949" width="0.1046%" height="15" fill="rgb(241,78,40)" fg:x="62" fg:w="1"/><text x="6.7354%" y="959.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="933" width="0.1046%" height="15" fill="rgb(222,35,25)" fg:x="62" fg:w="1"/><text x="6.7354%" y="943.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1 samples, 0.10%)</title><rect x="6.4854%" y="917" width="0.1046%" height="15" fill="rgb(207,92,16)" fg:x="62" fg:w="1"/><text x="6.7354%" y="927.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future (1 samples, 0.10%)</title><rect x="6.4854%" y="901" width="0.1046%" height="15" fill="rgb(216,59,51)" fg:x="62" fg:w="1"/><text x="6.7354%" y="911.50"></text></g><g><title>databend-query`std::panic::catch_unwind (1 samples, 0.10%)</title><rect x="6.4854%" y="885" width="0.1046%" height="15" fill="rgb(213,80,28)" fg:x="62" fg:w="1"/><text x="6.7354%" y="895.50"></text></g><g><title>databend-query`std::panicking::try (1 samples, 0.10%)</title><rect x="6.4854%" y="869" width="0.1046%" height="15" fill="rgb(220,93,7)" fg:x="62" fg:w="1"/><text x="6.7354%" y="879.50"></text></g><g><title>databend-query`__rust_try (1 samples, 0.10%)</title><rect x="6.4854%" y="853" width="0.1046%" height="15" fill="rgb(225,24,44)" fg:x="62" fg:w="1"/><text x="6.7354%" y="863.50"></text></g><g><title>databend-query`std::panicking::try::do_call (1 samples, 0.10%)</title><rect x="6.4854%" y="837" width="0.1046%" height="15" fill="rgb(243,74,40)" fg:x="62" fg:w="1"/><text x="6.7354%" y="847.50"></text></g><g><title>databend-query`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.10%)</title><rect x="6.4854%" y="821" width="0.1046%" height="15" fill="rgb(228,39,7)" fg:x="62" fg:w="1"/><text x="6.7354%" y="831.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future::_{{closure}} (1 samples, 0.10%)</title><rect x="6.4854%" y="805" width="0.1046%" height="15" fill="rgb(227,79,8)" fg:x="62" fg:w="1"/><text x="6.7354%" y="815.50"></text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="789" width="0.1046%" height="15" fill="rgb(236,58,11)" fg:x="62" fg:w="1"/><text x="6.7354%" y="799.50"></text></g><g><title>databend-query`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.10%)</title><rect x="6.4854%" y="773" width="0.1046%" height="15" fill="rgb(249,63,35)" fg:x="62" fg:w="1"/><text x="6.7354%" y="783.50"></text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (1 samples, 0.10%)</title><rect x="6.4854%" y="757" width="0.1046%" height="15" fill="rgb(252,114,16)" fg:x="62" fg:w="1"/><text x="6.7354%" y="767.50"></text></g><g><title>databend-query`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="741" width="0.1046%" height="15" fill="rgb(254,151,24)" fg:x="62" fg:w="1"/><text x="6.7354%" y="751.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="725" width="0.1046%" height="15" fill="rgb(253,54,39)" fg:x="62" fg:w="1"/><text x="6.7354%" y="735.50"></text></g><g><title>databend-query`databend_query::servers::mysql::mysql_interactive_worker::InteractiveWorkerBase&lt;W&gt;::exec_query::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.10%)</title><rect x="6.4854%" y="709" width="0.1046%" height="15" fill="rgb(243,25,45)" fg:x="62" fg:w="1"/><text x="6.7354%" y="719.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="693" width="0.1046%" height="15" fill="rgb(234,134,9)" fg:x="62" fg:w="1"/><text x="6.7354%" y="703.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="677" width="0.1046%" height="15" fill="rgb(227,166,31)" fg:x="62" fg:w="1"/><text x="6.7354%" y="687.50"></text></g><g><title>databend-query`&lt;databend_query::interpreters::interpreter_select_v2::SelectInterpreterV2 as databend_query::interpreters::interpreter::Interpreter&gt;::execute::_{{closure}} (1 samples, 0.10%)</title><rect x="6.4854%" y="661" width="0.1046%" height="15" fill="rgb(245,143,41)" fg:x="62" fg:w="1"/><text x="6.7354%" y="671.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="645" width="0.1046%" height="15" fill="rgb(238,181,32)" fg:x="62" fg:w="1"/><text x="6.7354%" y="655.50"></text></g><g><title>databend-query`&lt;databend_query::interpreters::interpreter_select_v2::SelectInterpreterV2 as databend_query::interpreters::interpreter::Interpreter&gt;::execute::_{{closure}}::_{{closure}} (1 samples, 0.10%)</title><rect x="6.4854%" y="629" width="0.1046%" height="15" fill="rgb(224,113,18)" fg:x="62" fg:w="1"/><text x="6.7354%" y="639.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="613" width="0.1046%" height="15" fill="rgb(240,229,28)" fg:x="62" fg:w="1"/><text x="6.7354%" y="623.50"></text></g><g><title>databend-query`databend_query::sql::planner::Planner::plan_sql::_{{closure}} (1 samples, 0.10%)</title><rect x="6.4854%" y="597" width="0.1046%" height="15" fill="rgb(250,185,3)" fg:x="62" fg:w="1"/><text x="6.7354%" y="607.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="581" width="0.1046%" height="15" fill="rgb(212,59,25)" fg:x="62" fg:w="1"/><text x="6.7354%" y="591.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::Binder::bind::_{{closure}} (1 samples, 0.10%)</title><rect x="6.4854%" y="565" width="0.1046%" height="15" fill="rgb(221,87,20)" fg:x="62" fg:w="1"/><text x="6.7354%" y="575.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="549" width="0.1046%" height="15" fill="rgb(213,74,28)" fg:x="62" fg:w="1"/><text x="6.7354%" y="559.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::Binder::bind_statement::_{{closure}} (1 samples, 0.10%)</title><rect x="6.4854%" y="533" width="0.1046%" height="15" fill="rgb(224,132,34)" fg:x="62" fg:w="1"/><text x="6.7354%" y="543.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="517" width="0.1046%" height="15" fill="rgb(222,101,24)" fg:x="62" fg:w="1"/><text x="6.7354%" y="527.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="501" width="0.1046%" height="15" fill="rgb(254,142,4)" fg:x="62" fg:w="1"/><text x="6.7354%" y="511.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::select::_&lt;impl databend_query::sql::planner::binder::Binder&gt;::bind_query::_{{closure}} (1 samples, 0.10%)</title><rect x="6.4854%" y="485" width="0.1046%" height="15" fill="rgb(230,229,49)" fg:x="62" fg:w="1"/><text x="6.7354%" y="495.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="469" width="0.1046%" height="15" fill="rgb(238,70,47)" fg:x="62" fg:w="1"/><text x="6.7354%" y="479.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::select::_&lt;impl databend_query::sql::planner::binder::Binder&gt;::bind_select_stmt::_{{closure}} (1 samples, 0.10%)</title><rect x="6.4854%" y="453" width="0.1046%" height="15" fill="rgb(231,160,17)" fg:x="62" fg:w="1"/><text x="6.7354%" y="463.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="437" width="0.1046%" height="15" fill="rgb(218,68,53)" fg:x="62" fg:w="1"/><text x="6.7354%" y="447.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::select::_&lt;impl databend_query::sql::planner::binder::Binder&gt;::bind_table_reference::_{{closure}} (1 samples, 0.10%)</title><rect x="6.4854%" y="421" width="0.1046%" height="15" fill="rgb(236,111,10)" fg:x="62" fg:w="1"/><text x="6.7354%" y="431.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="405" width="0.1046%" height="15" fill="rgb(224,34,41)" fg:x="62" fg:w="1"/><text x="6.7354%" y="415.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="389" width="0.1046%" height="15" fill="rgb(241,118,19)" fg:x="62" fg:w="1"/><text x="6.7354%" y="399.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::join::_&lt;impl databend_query::sql::planner::binder::Binder&gt;::bind_join::_{{closure}} (1 samples, 0.10%)</title><rect x="6.4854%" y="373" width="0.1046%" height="15" fill="rgb(238,129,25)" fg:x="62" fg:w="1"/><text x="6.7354%" y="383.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="357" width="0.1046%" height="15" fill="rgb(238,22,31)" fg:x="62" fg:w="1"/><text x="6.7354%" y="367.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::join::JoinConditionResolver::resolve::_{{closure}} (1 samples, 0.10%)</title><rect x="6.4854%" y="341" width="0.1046%" height="15" fill="rgb(222,174,48)" fg:x="62" fg:w="1"/><text x="6.7354%" y="351.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="325" width="0.1046%" height="15" fill="rgb(206,152,40)" fg:x="62" fg:w="1"/><text x="6.7354%" y="335.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::join::JoinConditionResolver::resolve_on::_{{closure}} (1 samples, 0.10%)</title><rect x="6.4854%" y="309" width="0.1046%" height="15" fill="rgb(218,99,54)" fg:x="62" fg:w="1"/><text x="6.7354%" y="319.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="293" width="0.1046%" height="15" fill="rgb(220,174,26)" fg:x="62" fg:w="1"/><text x="6.7354%" y="303.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::scalar::ScalarBinder::bind_expr::_{{closure}} (1 samples, 0.10%)</title><rect x="6.4854%" y="277" width="0.1046%" height="15" fill="rgb(245,116,9)" fg:x="62" fg:w="1"/><text x="6.7354%" y="287.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="261" width="0.1046%" height="15" fill="rgb(209,72,35)" fg:x="62" fg:w="1"/><text x="6.7354%" y="271.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="245" width="0.1046%" height="15" fill="rgb(226,126,21)" fg:x="62" fg:w="1"/><text x="6.7354%" y="255.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve::_{{closure}} (1 samples, 0.10%)</title><rect x="6.4854%" y="229" width="0.1046%" height="15" fill="rgb(227,192,1)" fg:x="62" fg:w="1"/><text x="6.7354%" y="239.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="213" width="0.1046%" height="15" fill="rgb(237,180,29)" fg:x="62" fg:w="1"/><text x="6.7354%" y="223.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve_binary_op::_{{closure}} (1 samples, 0.10%)</title><rect x="6.4854%" y="197" width="0.1046%" height="15" fill="rgb(230,197,35)" fg:x="62" fg:w="1"/><text x="6.7354%" y="207.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="181" width="0.1046%" height="15" fill="rgb(246,193,31)" fg:x="62" fg:w="1"/><text x="6.7354%" y="191.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="165" width="0.1046%" height="15" fill="rgb(241,36,4)" fg:x="62" fg:w="1"/><text x="6.7354%" y="175.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve::_{{closure}} (1 samples, 0.10%)</title><rect x="6.4854%" y="149" width="0.1046%" height="15" fill="rgb(241,130,17)" fg:x="62" fg:w="1"/><text x="6.7354%" y="159.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="133" width="0.1046%" height="15" fill="rgb(206,137,32)" fg:x="62" fg:w="1"/><text x="6.7354%" y="143.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve_binary_op::_{{closure}} (1 samples, 0.10%)</title><rect x="6.4854%" y="117" width="0.1046%" height="15" fill="rgb(237,228,51)" fg:x="62" fg:w="1"/><text x="6.7354%" y="127.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="6.4854%" y="101" width="0.1046%" height="15" fill="rgb(243,6,42)" fg:x="62" fg:w="1"/><text x="6.7354%" y="111.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve_function::_{{closure}} (1 samples, 0.10%)</title><rect x="6.4854%" y="85" width="0.1046%" height="15" fill="rgb(251,74,28)" fg:x="62" fg:w="1"/><text x="6.7354%" y="95.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::collect (1 samples, 0.10%)</title><rect x="6.4854%" y="69" width="0.1046%" height="15" fill="rgb(218,20,49)" fg:x="62" fg:w="1"/><text x="6.7354%" y="79.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="6.4854%" y="53" width="0.1046%" height="15" fill="rgb(238,28,14)" fg:x="62" fg:w="1"/><text x="6.7354%" y="63.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="6.4854%" y="37" width="0.1046%" height="15" fill="rgb(229,40,46)" fg:x="62" fg:w="1"/><text x="6.7354%" y="47.50"></text></g><g><title>databend-query`common_base::base::runtime::Runtime::create::_{{closure}} (1 samples, 0.10%)</title><rect x="6.5900%" y="1429" width="0.1046%" height="15" fill="rgb(244,195,20)" fg:x="63" fg:w="1"/><text x="6.8400%" y="1439.50"></text></g><g><title>databend-query`tokio::runtime::Runtime::block_on (1 samples, 0.10%)</title><rect x="6.5900%" y="1413" width="0.1046%" height="15" fill="rgb(253,56,35)" fg:x="63" fg:w="1"/><text x="6.8400%" y="1423.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::ThreadPool::block_on (1 samples, 0.10%)</title><rect x="6.5900%" y="1397" width="0.1046%" height="15" fill="rgb(210,149,44)" fg:x="63" fg:w="1"/><text x="6.8400%" y="1407.50"></text></g><g><title>databend-query`tokio::runtime::enter::Enter::block_on (1 samples, 0.10%)</title><rect x="6.5900%" y="1381" width="0.1046%" height="15" fill="rgb(240,135,12)" fg:x="63" fg:w="1"/><text x="6.8400%" y="1391.50"></text></g><g><title>databend-query`tokio::park::thread::CachedParkThread::block_on (1 samples, 0.10%)</title><rect x="6.5900%" y="1365" width="0.1046%" height="15" fill="rgb(251,24,50)" fg:x="63" fg:w="1"/><text x="6.8400%" y="1375.50"></text></g><g><title>databend-query`tokio::park::thread::CachedParkThread::get_unpark (1 samples, 0.10%)</title><rect x="6.5900%" y="1349" width="0.1046%" height="15" fill="rgb(243,200,47)" fg:x="63" fg:w="1"/><text x="6.8400%" y="1359.50"></text></g><g><title>databend-query`tokio::park::thread::CachedParkThread::with_current (1 samples, 0.10%)</title><rect x="6.5900%" y="1333" width="0.1046%" height="15" fill="rgb(224,166,26)" fg:x="63" fg:w="1"/><text x="6.8400%" y="1343.50"></text></g><g><title>databend-query`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.10%)</title><rect x="6.5900%" y="1317" width="0.1046%" height="15" fill="rgb(233,0,47)" fg:x="63" fg:w="1"/><text x="6.8400%" y="1327.50"></text></g><g><title>databend-query`tokio::park::thread::CURRENT_PARKER::__getit (1 samples, 0.10%)</title><rect x="6.5900%" y="1301" width="0.1046%" height="15" fill="rgb(253,80,5)" fg:x="63" fg:w="1"/><text x="6.8400%" y="1311.50"></text></g><g><title>databend-query`std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.10%)</title><rect x="6.5900%" y="1285" width="0.1046%" height="15" fill="rgb(214,133,25)" fg:x="63" fg:w="1"/><text x="6.8400%" y="1295.50"></text></g><g><title>databend-query`std::thread::local::fast::Key&lt;T&gt;::try_initialize (1 samples, 0.10%)</title><rect x="6.5900%" y="1269" width="0.1046%" height="15" fill="rgb(209,27,14)" fg:x="63" fg:w="1"/><text x="6.8400%" y="1279.50"></text></g><g><title>databend-query`std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (1 samples, 0.10%)</title><rect x="6.5900%" y="1253" width="0.1046%" height="15" fill="rgb(219,102,51)" fg:x="63" fg:w="1"/><text x="6.8400%" y="1263.50"></text></g><g><title>databend-query`tokio::park::thread::CURRENT_PARKER::__getit::_{{closure}} (1 samples, 0.10%)</title><rect x="6.5900%" y="1237" width="0.1046%" height="15" fill="rgb(237,18,16)" fg:x="63" fg:w="1"/><text x="6.8400%" y="1247.50"></text></g><g><title>databend-query`tokio::park::thread::CURRENT_PARKER::__init (1 samples, 0.10%)</title><rect x="6.5900%" y="1221" width="0.1046%" height="15" fill="rgb(241,85,17)" fg:x="63" fg:w="1"/><text x="6.8400%" y="1231.50"></text></g><g><title>databend-query`tokio::park::thread::ParkThread::new (1 samples, 0.10%)</title><rect x="6.5900%" y="1205" width="0.1046%" height="15" fill="rgb(236,90,42)" fg:x="63" fg:w="1"/><text x="6.8400%" y="1215.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.10%)</title><rect x="6.5900%" y="1189" width="0.1046%" height="15" fill="rgb(249,57,21)" fg:x="63" fg:w="1"/><text x="6.8400%" y="1199.50"></text></g><g><title>databend-query`alloc::alloc::exchange_malloc (1 samples, 0.10%)</title><rect x="6.5900%" y="1173" width="0.1046%" height="15" fill="rgb(243,12,36)" fg:x="63" fg:w="1"/><text x="6.8400%" y="1183.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="6.5900%" y="1157" width="0.1046%" height="15" fill="rgb(253,128,47)" fg:x="63" fg:w="1"/><text x="6.8400%" y="1167.50"></text></g><g><title>databend-query`core::option::Option&lt;T&gt;::ok_or (1 samples, 0.10%)</title><rect x="6.5900%" y="1141" width="0.1046%" height="15" fill="rgb(207,33,20)" fg:x="63" fg:w="1"/><text x="6.8400%" y="1151.50"></text></g><g><title>databend-query`&lt;databend_query::pipelines::new::processors::transforms::transform_hash_join::SinkBuildHashTable as databend_query::pipelines::new::processors::sinks::sync_sink::Sink&gt;::consume (1 samples, 0.10%)</title><rect x="6.6946%" y="1317" width="0.1046%" height="15" fill="rgb(233,215,35)" fg:x="64" fg:w="1"/><text x="6.9446%" y="1327.50"></text></g><g><title>databend-query`&lt;databend_query::pipelines::new::processors::transforms::hash_join::chaining_hash_table::ChainingHashTable as databend_query::pipelines::new::processors::transforms::hash_join::hash_table::HashJoinState&gt;::build (1 samples, 0.10%)</title><rect x="6.6946%" y="1301" width="0.1046%" height="15" fill="rgb(249,188,52)" fg:x="64" fg:w="1"/><text x="6.9446%" y="1311.50"></text></g><g><title>databend-query`databend_query::pipelines::new::processors::transforms::hash_join::chaining_hash_table::ChainingHashTable::serialize_keys (1 samples, 0.10%)</title><rect x="6.6946%" y="1285" width="0.1046%" height="15" fill="rgb(225,12,32)" fg:x="64" fg:w="1"/><text x="6.9446%" y="1295.50"></text></g><g><title>databend-query`common_datavalues::columns::group_hash::_&lt;impl common_datavalues::columns::series::Series&gt;::serialize (1 samples, 0.10%)</title><rect x="6.6946%" y="1269" width="0.1046%" height="15" fill="rgb(247,98,14)" fg:x="64" fg:w="1"/><text x="6.9446%" y="1279.50"></text></g><g><title>databend-query`&lt;common_datavalues::columns::primitive::PrimitiveColumn&lt;T&gt; as common_datavalues::columns::group_hash::GroupHash&gt;::serialize (1 samples, 0.10%)</title><rect x="6.6946%" y="1253" width="0.1046%" height="15" fill="rgb(247,219,48)" fg:x="64" fg:w="1"/><text x="6.9446%" y="1263.50"></text></g><g><title>databend-query`&lt;T as common_io::binary_write::BinaryWrite&gt;::write_scalar (1 samples, 0.10%)</title><rect x="6.6946%" y="1237" width="0.1046%" height="15" fill="rgb(253,60,48)" fg:x="64" fg:w="1"/><text x="6.9446%" y="1247.50"></text></g><g><title>databend-query`&lt;smallvec::SmallVec&lt;A&gt; as std::io::Write&gt;::write_all (1 samples, 0.10%)</title><rect x="6.6946%" y="1221" width="0.1046%" height="15" fill="rgb(245,15,52)" fg:x="64" fg:w="1"/><text x="6.9446%" y="1231.50"></text></g><g><title>databend-query`smallvec::SmallVec&lt;A&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="6.6946%" y="1205" width="0.1046%" height="15" fill="rgb(220,133,28)" fg:x="64" fg:w="1"/><text x="6.9446%" y="1215.50"></text></g><g><title>databend-query`smallvec::SmallVec&lt;A&gt;::insert_from_slice (1 samples, 0.10%)</title><rect x="6.6946%" y="1189" width="0.1046%" height="15" fill="rgb(217,180,4)" fg:x="64" fg:w="1"/><text x="6.9446%" y="1199.50"></text></g><g><title>databend-query`smallvec::SmallVec&lt;A&gt;::len (1 samples, 0.10%)</title><rect x="6.6946%" y="1173" width="0.1046%" height="15" fill="rgb(251,24,1)" fg:x="64" fg:w="1"/><text x="6.9446%" y="1183.50"></text></g><g><title>databend-query`smallvec::SmallVec&lt;A&gt;::triple (1 samples, 0.10%)</title><rect x="6.6946%" y="1157" width="0.1046%" height="15" fill="rgb(212,185,49)" fg:x="64" fg:w="1"/><text x="6.9446%" y="1167.50"></text></g><g><title>databend-query`&lt;[T (1 samples, 0.10%)</title><rect x="6.6946%" y="1141" width="0.1046%" height="15" fill="rgb(215,175,22)" fg:x="64" fg:w="1"/><text x="6.9446%" y="1151.50"></text></g><g><title> 16] as smallvec::Array&gt;::size (1 samples, 0.10%)</title><rect x="6.6946%" y="1125" width="0.1046%" height="15" fill="rgb(250,205,14)" fg:x="64" fg:w="1"/><text x="6.9446%" y="1135.50"></text></g><g><title>databend-query`common_base::base::thread::Thread::named_spawn::_{{closure}} (2 samples, 0.21%)</title><rect x="6.6946%" y="1429" width="0.2092%" height="15" fill="rgb(225,211,22)" fg:x="64" fg:w="2"/><text x="6.9446%" y="1439.50"></text></g><g><title>databend-query`databend_query::pipelines::new::executor::pipeline_executor::PipelineExecutor::execute_threads::_{{closure}} (2 samples, 0.21%)</title><rect x="6.6946%" y="1413" width="0.2092%" height="15" fill="rgb(251,179,42)" fg:x="64" fg:w="2"/><text x="6.9446%" y="1423.50"></text></g><g><title>databend-query`databend_query::pipelines::new::executor::pipeline_executor::PipelineExecutor::execute_single_thread (2 samples, 0.21%)</title><rect x="6.6946%" y="1397" width="0.2092%" height="15" fill="rgb(208,216,51)" fg:x="64" fg:w="2"/><text x="6.9446%" y="1407.50"></text></g><g><title>databend-query`databend_query::pipelines::new::executor::executor_worker_context::ExecutorWorkerContext::execute_task (2 samples, 0.21%)</title><rect x="6.6946%" y="1381" width="0.2092%" height="15" fill="rgb(235,36,11)" fg:x="64" fg:w="2"/><text x="6.9446%" y="1391.50"></text></g><g><title>databend-query`databend_query::pipelines::new::executor::executor_worker_context::ExecutorWorkerContext::execute_sync_task (2 samples, 0.21%)</title><rect x="6.6946%" y="1365" width="0.2092%" height="15" fill="rgb(213,189,28)" fg:x="64" fg:w="2"/><text x="6.9446%" y="1375.50"></text></g><g><title>databend-query`databend_query::pipelines::new::processors::processor::ProcessorPtr::process (2 samples, 0.21%)</title><rect x="6.6946%" y="1349" width="0.2092%" height="15" fill="rgb(227,203,42)" fg:x="64" fg:w="2"/><text x="6.9446%" y="1359.50"></text></g><g><title>databend-query`&lt;databend_query::pipelines::new::processors::sinks::sync_sink::Sinker&lt;T&gt; as databend_query::pipelines::new::processors::processor::Processor&gt;::process (2 samples, 0.21%)</title><rect x="6.6946%" y="1333" width="0.2092%" height="15" fill="rgb(244,72,36)" fg:x="64" fg:w="2"/><text x="6.9446%" y="1343.50"></text></g><g><title>databend-query`&lt;databend_query::pipelines::new::processors::transforms::transform_hash_join::SinkBuildHashTable as databend_query::pipelines::new::processors::sinks::sync_sink::Sink&gt;::on_finish (1 samples, 0.10%)</title><rect x="6.7992%" y="1317" width="0.1046%" height="15" fill="rgb(213,53,17)" fg:x="65" fg:w="1"/><text x="7.0492%" y="1327.50"></text></g><g><title>databend-query`&lt;databend_query::pipelines::new::processors::transforms::hash_join::chaining_hash_table::ChainingHashTable as databend_query::pipelines::new::processors::transforms::hash_join::hash_table::HashJoinState&gt;::detach (1 samples, 0.10%)</title><rect x="6.7992%" y="1301" width="0.1046%" height="15" fill="rgb(207,167,3)" fg:x="65" fg:w="1"/><text x="7.0492%" y="1311.50"></text></g><g><title>databend-query`&lt;databend_query::pipelines::new::processors::transforms::hash_join::chaining_hash_table::ChainingHashTable as databend_query::pipelines::new::processors::transforms::hash_join::hash_table::HashJoinState&gt;::finish (1 samples, 0.10%)</title><rect x="6.7992%" y="1285" width="0.1046%" height="15" fill="rgb(216,98,30)" fg:x="65" fg:w="1"/><text x="7.0492%" y="1295.50"></text></g><g><title>databend-query`&lt;databend_query::pipelines::transforms::group_by::keys_ref::KeysRef as databend_query::common::hashtable::hash_table_key::HashTableKeyable&gt;::fast_hash (1 samples, 0.10%)</title><rect x="6.7992%" y="1269" width="0.1046%" height="15" fill="rgb(236,123,15)" fg:x="65" fg:w="1"/><text x="7.0492%" y="1279.50"></text></g><g><title>databend-query`&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="6.7992%" y="1253" width="0.1046%" height="15" fill="rgb(248,81,50)" fg:x="65" fg:w="1"/><text x="7.0492%" y="1263.50"></text></g><g><title>databend-query`core::slice::_&lt;impl [T]&gt;::split_at (1 samples, 0.10%)</title><rect x="6.7992%" y="1237" width="0.1046%" height="15" fill="rgb(214,120,4)" fg:x="65" fg:w="1"/><text x="7.0492%" y="1247.50"></text></g><g><title>databend-query`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (1 samples, 0.10%)</title><rect x="6.7992%" y="1221" width="0.1046%" height="15" fill="rgb(208,179,34)" fg:x="65" fg:w="1"/><text x="7.0492%" y="1231.50"></text></g><g><title>databend-query`core::slice::_&lt;impl [T]&gt;::get_unchecked (1 samples, 0.10%)</title><rect x="6.7992%" y="1205" width="0.1046%" height="15" fill="rgb(227,140,7)" fg:x="65" fg:w="1"/><text x="7.0492%" y="1215.50"></text></g><g><title>databend-query`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.10%)</title><rect x="6.7992%" y="1189" width="0.1046%" height="15" fill="rgb(214,22,6)" fg:x="65" fg:w="1"/><text x="7.0492%" y="1199.50"></text></g><g><title>databend-query`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.10%)</title><rect x="6.7992%" y="1173" width="0.1046%" height="15" fill="rgb(207,137,27)" fg:x="65" fg:w="1"/><text x="7.0492%" y="1183.50"></text></g><g><title>databend-query`core::ptr::slice_from_raw_parts (1 samples, 0.10%)</title><rect x="6.7992%" y="1157" width="0.1046%" height="15" fill="rgb(210,8,46)" fg:x="65" fg:w="1"/><text x="7.0492%" y="1167.50"></text></g><g><title>databend-query`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.10%)</title><rect x="6.9038%" y="1413" width="0.1046%" height="15" fill="rgb(240,16,54)" fg:x="66" fg:w="1"/><text x="7.1538%" y="1423.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::is_empty (1 samples, 0.10%)</title><rect x="7.1130%" y="1381" width="0.1046%" height="15" fill="rgb(211,209,29)" fg:x="68" fg:w="1"/><text x="7.3630%" y="1391.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::VecDeque&lt;T&gt;::new (1 samples, 0.10%)</title><rect x="7.2176%" y="1381" width="0.1046%" height="15" fill="rgb(226,228,24)" fg:x="69" fg:w="1"/><text x="7.4676%" y="1391.50"></text></g><g><title>databend-query`&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="7.9498%" y="1365" width="0.1046%" height="15" fill="rgb(222,84,9)" fg:x="76" fg:w="1"/><text x="8.1998%" y="1375.50"></text></g><g><title>databend-query`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="8.0544%" y="1365" width="0.1046%" height="15" fill="rgb(234,203,30)" fg:x="77" fg:w="1"/><text x="8.3044%" y="1375.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.10%)</title><rect x="8.0544%" y="1349" width="0.1046%" height="15" fill="rgb(238,109,14)" fg:x="77" fg:w="1"/><text x="8.3044%" y="1359.50"></text></g><g><title>databend-query`&lt;databend_query::pipelines::new::processors::resize_processor::ResizeProcessor as databend_query::pipelines::new::processors::processor::Processor&gt;::event (1 samples, 0.10%)</title><rect x="8.1590%" y="1365" width="0.1046%" height="15" fill="rgb(233,206,34)" fg:x="78" fg:w="1"/><text x="8.4090%" y="1375.50"></text></g><g><title>databend-query`&lt;databend_query::pipelines::new::processors::transforms::transform::Transformer&lt;T&gt; as databend_query::pipelines::new::processors::processor::Processor&gt;::event (1 samples, 0.10%)</title><rect x="8.2636%" y="1365" width="0.1046%" height="15" fill="rgb(220,167,47)" fg:x="79" fg:w="1"/><text x="8.5136%" y="1375.50"></text></g><g><title>databend-query`&lt;databend_query::pipelines::new::processors::transforms::transform_hash_join::TransformHashJoinProbe as databend_query::pipelines::new::processors::processor::Processor&gt;::event (1 samples, 0.10%)</title><rect x="8.3682%" y="1365" width="0.1046%" height="15" fill="rgb(238,105,10)" fg:x="80" fg:w="1"/><text x="8.6182%" y="1375.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="8.4728%" y="1349" width="0.1046%" height="15" fill="rgb(213,227,17)" fg:x="81" fg:w="1"/><text x="8.7228%" y="1359.50"></text></g><g><title>databend-query`core::option::Option&lt;T&gt;::as_ref (1 samples, 0.10%)</title><rect x="8.5774%" y="1349" width="0.1046%" height="15" fill="rgb(217,132,38)" fg:x="82" fg:w="1"/><text x="8.8274%" y="1359.50"></text></g><g><title>databend-query`petgraph::graph_impl::NodeIndex&lt;Ix&gt;::index (1 samples, 0.10%)</title><rect x="8.6820%" y="1349" width="0.1046%" height="15" fill="rgb(242,146,4)" fg:x="83" fg:w="1"/><text x="8.9320%" y="1359.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.10%)</title><rect x="8.8912%" y="1301" width="0.1046%" height="15" fill="rgb(212,61,9)" fg:x="85" fg:w="1"/><text x="9.1412%" y="1311.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::as_ptr (3 samples, 0.31%)</title><rect x="8.7866%" y="1317" width="0.3138%" height="15" fill="rgb(247,126,22)" fg:x="84" fg:w="3"/><text x="9.0366%" y="1327.50"></text></g><g><title>databend-query`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.10%)</title><rect x="8.9958%" y="1301" width="0.1046%" height="15" fill="rgb(220,196,2)" fg:x="86" fg:w="1"/><text x="9.2458%" y="1311.50"></text></g><g><title>databend-query`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.10%)</title><rect x="9.1004%" y="1317" width="0.1046%" height="15" fill="rgb(208,46,4)" fg:x="87" fg:w="1"/><text x="9.3504%" y="1327.50"></text></g><g><title>databend-query`core::ptr::metadata::from_raw_parts (1 samples, 0.10%)</title><rect x="9.3096%" y="1301" width="0.1046%" height="15" fill="rgb(252,104,46)" fg:x="89" fg:w="1"/><text x="9.5596%" y="1311.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.84%)</title><rect x="8.7866%" y="1333" width="0.8368%" height="15" fill="rgb(237,152,48)" fg:x="84" fg:w="8"/><text x="9.0366%" y="1343.50"></text></g><g><title>databend-query`core::slice::raw::from_raw_parts (4 samples, 0.42%)</title><rect x="9.2050%" y="1317" width="0.4184%" height="15" fill="rgb(221,59,37)" fg:x="88" fg:w="4"/><text x="9.4550%" y="1327.50"></text></g><g><title>databend-query`core::ptr::slice_from_raw_parts (2 samples, 0.21%)</title><rect x="9.4142%" y="1301" width="0.2092%" height="15" fill="rgb(209,202,51)" fg:x="90" fg:w="2"/><text x="9.6642%" y="1311.50"></text></g><g><title>databend-query`core::slice::_&lt;impl [T]&gt;::get (1 samples, 0.10%)</title><rect x="9.6234%" y="1333" width="0.1046%" height="15" fill="rgb(228,81,30)" fg:x="92" fg:w="1"/><text x="9.8734%" y="1343.50"></text></g><g><title>databend-query`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.10%)</title><rect x="9.6234%" y="1317" width="0.1046%" height="15" fill="rgb(227,42,39)" fg:x="92" fg:w="1"/><text x="9.8734%" y="1327.50"></text></g><g><title>databend-query`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.10%)</title><rect x="9.6234%" y="1301" width="0.1046%" height="15" fill="rgb(221,26,2)" fg:x="92" fg:w="1"/><text x="9.8734%" y="1311.50"></text></g><g><title>databend-query`&lt;petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt; as core::ops::index::Index&lt;petgraph::graph_impl::NodeIndex&lt;Ix&gt;&gt;&gt;::index (13 samples, 1.36%)</title><rect x="8.4728%" y="1365" width="1.3598%" height="15" fill="rgb(254,61,31)" fg:x="81" fg:w="13"/><text x="8.7228%" y="1375.50"></text></g><g><title>databend-query`petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::node_weight (10 samples, 1.05%)</title><rect x="8.7866%" y="1349" width="1.0460%" height="15" fill="rgb(222,173,38)" fg:x="84" fg:w="10"/><text x="9.0366%" y="1359.50"></text></g><g><title>databend-query`core::slice::raw::from_raw_parts (1 samples, 0.10%)</title><rect x="9.7280%" y="1333" width="0.1046%" height="15" fill="rgb(218,50,12)" fg:x="93" fg:w="1"/><text x="9.9780%" y="1343.50"></text></g><g><title>databend-query`&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="9.8326%" y="1365" width="0.1046%" height="15" fill="rgb(223,88,40)" fg:x="94" fg:w="1"/><text x="10.0826%" y="1375.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (2 samples, 0.21%)</title><rect x="9.9372%" y="1349" width="0.2092%" height="15" fill="rgb(237,54,19)" fg:x="95" fg:w="2"/><text x="10.1872%" y="1359.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::ptr (1 samples, 0.10%)</title><rect x="10.0418%" y="1333" width="0.1046%" height="15" fill="rgb(251,129,25)" fg:x="96" fg:w="1"/><text x="10.2918%" y="1343.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::cap (2 samples, 0.21%)</title><rect x="10.1464%" y="1349" width="0.2092%" height="15" fill="rgb(238,97,19)" fg:x="97" fg:w="2"/><text x="10.3964%" y="1359.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::wrap_add (2 samples, 0.21%)</title><rect x="10.3556%" y="1349" width="0.2092%" height="15" fill="rgb(240,169,18)" fg:x="99" fg:w="2"/><text x="10.6056%" y="1359.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (11 samples, 1.15%)</title><rect x="9.9372%" y="1365" width="1.1506%" height="15" fill="rgb(230,187,49)" fg:x="95" fg:w="11"/><text x="10.1872%" y="1375.50"></text></g><g><title>databend-query`core::ptr::read (5 samples, 0.52%)</title><rect x="10.5649%" y="1349" width="0.5230%" height="15" fill="rgb(209,44,26)" fg:x="101" fg:w="5"/><text x="10.8149%" y="1359.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_write (1 samples, 0.10%)</title><rect x="11.0879%" y="1349" width="0.1046%" height="15" fill="rgb(244,0,6)" fg:x="106" fg:w="1"/><text x="11.3379%" y="1359.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::ptr (1 samples, 0.10%)</title><rect x="11.0879%" y="1333" width="0.1046%" height="15" fill="rgb(248,18,21)" fg:x="106" fg:w="1"/><text x="11.3379%" y="1343.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.10%)</title><rect x="11.0879%" y="1317" width="0.1046%" height="15" fill="rgb(245,180,19)" fg:x="106" fg:w="1"/><text x="11.3379%" y="1327.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (2 samples, 0.21%)</title><rect x="11.0879%" y="1365" width="0.2092%" height="15" fill="rgb(252,118,36)" fg:x="106" fg:w="2"/><text x="11.3379%" y="1375.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::cap (1 samples, 0.10%)</title><rect x="11.1925%" y="1349" width="0.1046%" height="15" fill="rgb(210,224,19)" fg:x="107" fg:w="1"/><text x="11.4425%" y="1359.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="11.2971%" y="1317" width="0.1046%" height="15" fill="rgb(218,30,24)" fg:x="108" fg:w="1"/><text x="11.5471%" y="1327.50"></text></g><g><title>databend-query`alloc::alloc::Global::alloc_impl (4 samples, 0.42%)</title><rect x="11.5063%" y="1269" width="0.4184%" height="15" fill="rgb(219,75,50)" fg:x="110" fg:w="4"/><text x="11.7563%" y="1279.50"></text></g><g><title>databend-query`alloc::alloc::alloc (4 samples, 0.42%)</title><rect x="11.5063%" y="1253" width="0.4184%" height="15" fill="rgb(234,72,50)" fg:x="110" fg:w="4"/><text x="11.7563%" y="1263.50"></text></g><g><title>databend-query`__rg_alloc (4 samples, 0.42%)</title><rect x="11.5063%" y="1237" width="0.4184%" height="15" fill="rgb(219,100,48)" fg:x="110" fg:w="4"/><text x="11.7563%" y="1247.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::alloc (4 samples, 0.42%)</title><rect x="11.5063%" y="1221" width="0.4184%" height="15" fill="rgb(253,5,41)" fg:x="110" fg:w="4"/><text x="11.7563%" y="1231.50"></text></g><g><title>databend-query`_rjem_mallocx (4 samples, 0.42%)</title><rect x="11.5063%" y="1205" width="0.4184%" height="15" fill="rgb(247,181,11)" fg:x="110" fg:w="4"/><text x="11.7563%" y="1215.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.63%)</title><rect x="11.4017%" y="1285" width="0.6276%" height="15" fill="rgb(222,223,25)" fg:x="109" fg:w="6"/><text x="11.6517%" y="1295.50"></text></g><g><title>databend-query`core::alloc::layout::Layout::size (1 samples, 0.10%)</title><rect x="11.9247%" y="1269" width="0.1046%" height="15" fill="rgb(214,198,28)" fg:x="114" fg:w="1"/><text x="12.1747%" y="1279.50"></text></g><g><title>databend-query`alloc::raw_vec::alloc_guard (1 samples, 0.10%)</title><rect x="12.0293%" y="1285" width="0.1046%" height="15" fill="rgb(230,46,43)" fg:x="115" fg:w="1"/><text x="12.2793%" y="1295.50"></text></g><g><title>databend-query`core::alloc::layout::Layout::array (1 samples, 0.10%)</title><rect x="12.1339%" y="1285" width="0.1046%" height="15" fill="rgb(233,65,53)" fg:x="116" fg:w="1"/><text x="12.3839%" y="1295.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.94%)</title><rect x="11.4017%" y="1301" width="0.9414%" height="15" fill="rgb(221,121,27)" fg:x="109" fg:w="9"/><text x="11.6517%" y="1311.50"></text></g><g><title>databend-query`core::num::_&lt;impl usize&gt;::checked_mul (1 samples, 0.10%)</title><rect x="12.2385%" y="1285" width="0.1046%" height="15" fill="rgb(247,70,47)" fg:x="117" fg:w="1"/><text x="12.4885%" y="1295.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 1.05%)</title><rect x="11.4017%" y="1317" width="1.0460%" height="15" fill="rgb(228,85,35)" fg:x="109" fg:w="10"/><text x="11.6517%" y="1327.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.10%)</title><rect x="12.3431%" y="1301" width="0.1046%" height="15" fill="rgb(209,50,18)" fg:x="118" fg:w="1"/><text x="12.5931%" y="1311.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::VecDeque&lt;T&gt;::new (12 samples, 1.26%)</title><rect x="11.2971%" y="1365" width="1.2552%" height="15" fill="rgb(250,19,35)" fg:x="108" fg:w="12"/><text x="11.5471%" y="1375.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::new_in (12 samples, 1.26%)</title><rect x="11.2971%" y="1349" width="1.2552%" height="15" fill="rgb(253,107,29)" fg:x="108" fg:w="12"/><text x="11.5471%" y="1359.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::with_capacity_in (12 samples, 1.26%)</title><rect x="11.2971%" y="1333" width="1.2552%" height="15" fill="rgb(252,179,29)" fg:x="108" fg:w="12"/><text x="11.5471%" y="1343.50"></text></g><g><title>databend-query`core::num::_&lt;impl usize&gt;::next_power_of_two (1 samples, 0.10%)</title><rect x="12.4477%" y="1317" width="0.1046%" height="15" fill="rgb(238,194,6)" fg:x="119" fg:w="1"/><text x="12.6977%" y="1327.50"></text></g><g><title>databend-query`core::option::Option&lt;T&gt;::is_some (1 samples, 0.10%)</title><rect x="12.5523%" y="1365" width="0.1046%" height="15" fill="rgb(238,164,29)" fg:x="120" fg:w="1"/><text x="12.8023%" y="1375.50"></text></g><g><title>databend-query`_rjem_sdallocx (4 samples, 0.42%)</title><rect x="12.7615%" y="1253" width="0.4184%" height="15" fill="rgb(224,25,9)" fg:x="122" fg:w="4"/><text x="13.0115%" y="1263.50"></text></g><g><title>databend-query`ticker_trytick (1 samples, 0.10%)</title><rect x="13.1799%" y="1253" width="0.1046%" height="15" fill="rgb(244,153,23)" fg:x="126" fg:w="1"/><text x="13.4299%" y="1263.50"></text></g><g><title>databend-query`__rg_dealloc (6 samples, 0.63%)</title><rect x="12.7615%" y="1285" width="0.6276%" height="15" fill="rgb(212,203,14)" fg:x="122" fg:w="6"/><text x="13.0115%" y="1295.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::dealloc (6 samples, 0.63%)</title><rect x="12.7615%" y="1269" width="0.6276%" height="15" fill="rgb(220,164,20)" fg:x="122" fg:w="6"/><text x="13.0115%" y="1279.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (1 samples, 0.10%)</title><rect x="13.2845%" y="1253" width="0.1046%" height="15" fill="rgb(222,203,48)" fg:x="127" fg:w="1"/><text x="13.5345%" y="1263.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.73%)</title><rect x="12.7615%" y="1317" width="0.7322%" height="15" fill="rgb(215,159,22)" fg:x="122" fg:w="7"/><text x="13.0115%" y="1327.50"></text></g><g><title>databend-query`alloc::alloc::dealloc (7 samples, 0.73%)</title><rect x="12.7615%" y="1301" width="0.7322%" height="15" fill="rgb(216,183,47)" fg:x="122" fg:w="7"/><text x="13.0115%" y="1311.50"></text></g><g><title>databend-query`core::alloc::layout::Layout::align (1 samples, 0.10%)</title><rect x="13.3891%" y="1285" width="0.1046%" height="15" fill="rgb(229,195,25)" fg:x="128" fg:w="1"/><text x="13.6391%" y="1295.50"></text></g><g><title>databend-query`core::mem::valid_align::ValidAlign::as_nonzero (1 samples, 0.10%)</title><rect x="13.3891%" y="1269" width="0.1046%" height="15" fill="rgb(224,132,51)" fg:x="128" fg:w="1"/><text x="13.6391%" y="1279.50"></text></g><g><title>databend-query`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.10%)</title><rect x="13.4937%" y="1301" width="0.1046%" height="15" fill="rgb(240,63,7)" fg:x="129" fg:w="1"/><text x="13.7437%" y="1311.50"></text></g><g><title>databend-query`&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (1 samples, 0.10%)</title><rect x="13.4937%" y="1285" width="0.1046%" height="15" fill="rgb(249,182,41)" fg:x="129" fg:w="1"/><text x="13.7437%" y="1295.50"></text></g><g><title>databend-query`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.10%)</title><rect x="13.4937%" y="1269" width="0.1046%" height="15" fill="rgb(243,47,26)" fg:x="129" fg:w="1"/><text x="13.7437%" y="1279.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;databend_query::pipelines::new::processors::port_trigger::DirectedEdge&gt;&gt; (10 samples, 1.05%)</title><rect x="12.6569%" y="1365" width="1.0460%" height="15" fill="rgb(233,48,2)" fg:x="121" fg:w="10"/><text x="12.9069%" y="1375.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;databend_query::pipelines::new::processors::port_trigger::DirectedEdge&gt;&gt; (10 samples, 1.05%)</title><rect x="12.6569%" y="1349" width="1.0460%" height="15" fill="rgb(244,165,34)" fg:x="121" fg:w="10"/><text x="12.9069%" y="1359.50"></text></g><g><title>databend-query`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.94%)</title><rect x="12.7615%" y="1333" width="0.9414%" height="15" fill="rgb(207,89,7)" fg:x="122" fg:w="9"/><text x="13.0115%" y="1343.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.21%)</title><rect x="13.4937%" y="1317" width="0.2092%" height="15" fill="rgb(244,117,36)" fg:x="129" fg:w="2"/><text x="13.7437%" y="1327.50"></text></g><g><title>databend-query`core::ptr::unique::Unique&lt;T&gt;::cast (1 samples, 0.10%)</title><rect x="13.5983%" y="1301" width="0.1046%" height="15" fill="rgb(226,144,34)" fg:x="130" fg:w="1"/><text x="13.8483%" y="1311.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.10%)</title><rect x="13.5983%" y="1285" width="0.1046%" height="15" fill="rgb(213,23,19)" fg:x="130" fg:w="1"/><text x="13.8483%" y="1295.50"></text></g><g><title>databend-query`&lt;&amp;mut [T] as alloc::collections::vec_deque::ring_slices::RingSlices&gt;::slice (1 samples, 0.10%)</title><rect x="13.8075%" y="1301" width="0.1046%" height="15" fill="rgb(217,75,12)" fg:x="132" fg:w="1"/><text x="14.0575%" y="1311.50"></text></g><g><title>databend-query`&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.31%)</title><rect x="13.7029%" y="1349" width="0.3138%" height="15" fill="rgb(224,159,17)" fg:x="131" fg:w="3"/><text x="13.9529%" y="1359.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::as_mut_slices (3 samples, 0.31%)</title><rect x="13.7029%" y="1333" width="0.3138%" height="15" fill="rgb(217,118,1)" fg:x="131" fg:w="3"/><text x="13.9529%" y="1343.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::ring_slices::RingSlices::ring_slices (2 samples, 0.21%)</title><rect x="13.8075%" y="1317" width="0.2092%" height="15" fill="rgb(232,180,48)" fg:x="132" fg:w="2"/><text x="14.0575%" y="1327.50"></text></g><g><title>databend-query`&lt;&amp;mut [T] as alloc::collections::vec_deque::ring_slices::RingSlices&gt;::split_at (1 samples, 0.10%)</title><rect x="13.9121%" y="1301" width="0.1046%" height="15" fill="rgb(230,27,33)" fg:x="133" fg:w="1"/><text x="14.1621%" y="1311.50"></text></g><g><title>databend-query`core::slice::_&lt;impl [T]&gt;::split_at_mut (1 samples, 0.10%)</title><rect x="13.9121%" y="1285" width="0.1046%" height="15" fill="rgb(205,31,21)" fg:x="133" fg:w="1"/><text x="14.1621%" y="1295.50"></text></g><g><title>databend-query`core::slice::_&lt;impl [T]&gt;::split_at_mut_unchecked (1 samples, 0.10%)</title><rect x="13.9121%" y="1269" width="0.1046%" height="15" fill="rgb(253,59,4)" fg:x="133" fg:w="1"/><text x="14.1621%" y="1279.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.10%)</title><rect x="14.0167%" y="1317" width="0.1046%" height="15" fill="rgb(224,201,9)" fg:x="134" fg:w="1"/><text x="14.2667%" y="1327.50"></text></g><g><title>databend-query`alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="14.0167%" y="1301" width="0.1046%" height="15" fill="rgb(229,206,30)" fg:x="134" fg:w="1"/><text x="14.2667%" y="1311.50"></text></g><g><title>databend-query`__rg_dealloc (1 samples, 0.10%)</title><rect x="14.0167%" y="1285" width="0.1046%" height="15" fill="rgb(212,67,47)" fg:x="134" fg:w="1"/><text x="14.2667%" y="1295.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.10%)</title><rect x="14.0167%" y="1269" width="0.1046%" height="15" fill="rgb(211,96,50)" fg:x="134" fg:w="1"/><text x="14.2667%" y="1279.50"></text></g><g><title>databend-query`_rjem_sdallocx (1 samples, 0.10%)</title><rect x="14.0167%" y="1253" width="0.1046%" height="15" fill="rgb(252,114,18)" fg:x="134" fg:w="1"/><text x="14.2667%" y="1263.50"></text></g><g><title>databend-query`core::num::_&lt;impl usize&gt;::checked_mul (1 samples, 0.10%)</title><rect x="14.1213%" y="1301" width="0.1046%" height="15" fill="rgb(223,58,37)" fg:x="135" fg:w="1"/><text x="14.3713%" y="1311.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;petgraph::graph_impl::NodeIndex&gt;&gt; (6 samples, 0.63%)</title><rect x="13.7029%" y="1365" width="0.6276%" height="15" fill="rgb(237,70,4)" fg:x="131" fg:w="6"/><text x="13.9529%" y="1375.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::NodeIndex&gt;&gt; (3 samples, 0.31%)</title><rect x="14.0167%" y="1349" width="0.3138%" height="15" fill="rgb(244,85,46)" fg:x="134" fg:w="3"/><text x="14.2667%" y="1359.50"></text></g><g><title>databend-query`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.31%)</title><rect x="14.0167%" y="1333" width="0.3138%" height="15" fill="rgb(223,39,52)" fg:x="134" fg:w="3"/><text x="14.2667%" y="1343.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.21%)</title><rect x="14.1213%" y="1317" width="0.2092%" height="15" fill="rgb(218,200,14)" fg:x="135" fg:w="2"/><text x="14.3713%" y="1327.50"></text></g><g><title>databend-query`core::ptr::unique::Unique&lt;T&gt;::cast (1 samples, 0.10%)</title><rect x="14.2259%" y="1301" width="0.1046%" height="15" fill="rgb(208,171,16)" fg:x="136" fg:w="1"/><text x="14.4759%" y="1311.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.10%)</title><rect x="14.2259%" y="1285" width="0.1046%" height="15" fill="rgb(234,200,18)" fg:x="136" fg:w="1"/><text x="14.4759%" y="1295.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;core::option::Option&lt;std::sync::mutex::MutexGuard&lt;databend_query::pipelines::new::executor::executor_graph::State&gt;&gt;&gt; (1 samples, 0.10%)</title><rect x="14.3305%" y="1365" width="0.1046%" height="15" fill="rgb(228,45,11)" fg:x="137" fg:w="1"/><text x="14.5805%" y="1375.50"></text></g><g><title>databend-query`std::sync::poison::Flag::done (2 samples, 0.21%)</title><rect x="14.4351%" y="1333" width="0.2092%" height="15" fill="rgb(237,182,11)" fg:x="138" fg:w="2"/><text x="14.6851%" y="1343.50"></text></g><g><title>databend-query`std::thread::panicking (1 samples, 0.10%)</title><rect x="14.5397%" y="1317" width="0.1046%" height="15" fill="rgb(241,175,49)" fg:x="139" fg:w="1"/><text x="14.7897%" y="1327.50"></text></g><g><title>databend-query`std::panicking::panicking (1 samples, 0.10%)</title><rect x="14.5397%" y="1301" width="0.1046%" height="15" fill="rgb(247,38,35)" fg:x="139" fg:w="1"/><text x="14.7897%" y="1311.50"></text></g><g><title>databend-query`std::panicking::panic_count::count_is_zero (1 samples, 0.10%)</title><rect x="14.5397%" y="1285" width="0.1046%" height="15" fill="rgb(228,39,49)" fg:x="139" fg:w="1"/><text x="14.7897%" y="1295.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;databend_query::pipelines::new::executor::executor_graph::State&gt;&gt; (3 samples, 0.31%)</title><rect x="14.4351%" y="1365" width="0.3138%" height="15" fill="rgb(226,101,26)" fg:x="138" fg:w="3"/><text x="14.6851%" y="1375.50"></text></g><g><title>databend-query`&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.31%)</title><rect x="14.4351%" y="1349" width="0.3138%" height="15" fill="rgb(206,141,19)" fg:x="138" fg:w="3"/><text x="14.6851%" y="1359.50"></text></g><g><title>databend-query`std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.10%)</title><rect x="14.6444%" y="1333" width="0.1046%" height="15" fill="rgb(211,200,13)" fg:x="140" fg:w="1"/><text x="14.8944%" y="1343.50"></text></g><g><title>databend-query`std::sys::unix::locks::pthread_mutex::Mutex::unlock (1 samples, 0.10%)</title><rect x="14.6444%" y="1317" width="0.1046%" height="15" fill="rgb(241,121,6)" fg:x="140" fg:w="1"/><text x="14.8944%" y="1327.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.10%)</title><rect x="14.6444%" y="1301" width="0.1046%" height="15" fill="rgb(234,221,29)" fg:x="140" fg:w="1"/><text x="14.8944%" y="1311.50"></text></g><g><title>databend-query`core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.10%)</title><rect x="14.7490%" y="1365" width="0.1046%" height="15" fill="rgb(229,136,5)" fg:x="141" fg:w="1"/><text x="14.9990%" y="1375.50"></text></g><g><title>databend-query`&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.10%)</title><rect x="14.9582%" y="1349" width="0.1046%" height="15" fill="rgb(238,36,11)" fg:x="143" fg:w="1"/><text x="15.2082%" y="1359.50"></text></g><g><title>databend-query`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.21%)</title><rect x="15.0628%" y="1349" width="0.2092%" height="15" fill="rgb(251,55,41)" fg:x="144" fg:w="2"/><text x="15.3128%" y="1359.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.10%)</title><rect x="15.1674%" y="1333" width="0.1046%" height="15" fill="rgb(242,34,40)" fg:x="145" fg:w="1"/><text x="15.4174%" y="1343.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.10%)</title><rect x="15.1674%" y="1317" width="0.1046%" height="15" fill="rgb(215,42,17)" fg:x="145" fg:w="1"/><text x="15.4174%" y="1327.50"></text></g><g><title>databend-query`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="15.2720%" y="1349" width="0.1046%" height="15" fill="rgb(207,44,46)" fg:x="146" fg:w="1"/><text x="15.5220%" y="1359.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.10%)</title><rect x="15.5858%" y="1301" width="0.1046%" height="15" fill="rgb(211,206,28)" fg:x="149" fg:w="1"/><text x="15.8358%" y="1311.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.10%)</title><rect x="15.5858%" y="1285" width="0.1046%" height="15" fill="rgb(237,167,16)" fg:x="149" fg:w="1"/><text x="15.8358%" y="1295.50"></text></g><g><title>databend-query`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.10%)</title><rect x="15.5858%" y="1269" width="0.1046%" height="15" fill="rgb(233,66,6)" fg:x="149" fg:w="1"/><text x="15.8358%" y="1279.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.21%)</title><rect x="15.5858%" y="1317" width="0.2092%" height="15" fill="rgb(246,123,29)" fg:x="149" fg:w="2"/><text x="15.8358%" y="1327.50"></text></g><g><title>databend-query`core::ptr::slice_from_raw_parts (1 samples, 0.10%)</title><rect x="15.6904%" y="1301" width="0.1046%" height="15" fill="rgb(209,62,40)" fg:x="150" fg:w="1"/><text x="15.9404%" y="1311.50"></text></g><g><title>databend-query`core::slice::_&lt;impl [T]&gt;::as_ptr (1 samples, 0.10%)</title><rect x="15.8996%" y="1301" width="0.1046%" height="15" fill="rgb(218,4,25)" fg:x="152" fg:w="1"/><text x="16.1496%" y="1311.50"></text></g><g><title>databend-query`&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (6 samples, 0.63%)</title><rect x="15.5858%" y="1333" width="0.6276%" height="15" fill="rgb(253,91,49)" fg:x="149" fg:w="6"/><text x="15.8358%" y="1343.50"></text></g><g><title>databend-query`core::slice::_&lt;impl [T]&gt;::iter (4 samples, 0.42%)</title><rect x="15.7950%" y="1317" width="0.4184%" height="15" fill="rgb(228,155,29)" fg:x="151" fg:w="4"/><text x="16.0450%" y="1327.50"></text></g><g><title>databend-query`core::slice::iter::Iter&lt;T&gt;::new (2 samples, 0.21%)</title><rect x="16.0042%" y="1301" width="0.2092%" height="15" fill="rgb(243,57,37)" fg:x="153" fg:w="2"/><text x="16.2542%" y="1311.50"></text></g><g><title>databend-query`core::ptr::const_ptr::_&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.10%)</title><rect x="16.1088%" y="1285" width="0.1046%" height="15" fill="rgb(244,167,17)" fg:x="154" fg:w="1"/><text x="16.3588%" y="1295.50"></text></g><g><title>databend-query`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.21%)</title><rect x="16.2134%" y="1333" width="0.2092%" height="15" fill="rgb(207,181,38)" fg:x="155" fg:w="2"/><text x="16.4634%" y="1343.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::inner (2 samples, 0.21%)</title><rect x="16.2134%" y="1317" width="0.2092%" height="15" fill="rgb(211,8,23)" fg:x="155" fg:w="2"/><text x="16.4634%" y="1327.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.21%)</title><rect x="16.2134%" y="1301" width="0.2092%" height="15" fill="rgb(235,11,44)" fg:x="155" fg:w="2"/><text x="16.4634%" y="1311.50"></text></g><g><title>databend-query`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (3 samples, 0.31%)</title><rect x="16.8410%" y="1317" width="0.3138%" height="15" fill="rgb(248,18,52)" fg:x="161" fg:w="3"/><text x="17.0910%" y="1327.50"></text></g><g><title>databend-query`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.84%)</title><rect x="16.4226%" y="1333" width="0.8368%" height="15" fill="rgb(208,4,7)" fg:x="157" fg:w="8"/><text x="16.6726%" y="1343.50"></text></g><g><title>databend-query`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.10%)</title><rect x="17.1548%" y="1317" width="0.1046%" height="15" fill="rgb(240,17,39)" fg:x="164" fg:w="1"/><text x="17.4048%" y="1327.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_write (1 samples, 0.10%)</title><rect x="17.2594%" y="1317" width="0.1046%" height="15" fill="rgb(207,170,3)" fg:x="165" fg:w="1"/><text x="17.5094%" y="1327.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::ptr (1 samples, 0.10%)</title><rect x="17.2594%" y="1301" width="0.1046%" height="15" fill="rgb(236,100,52)" fg:x="165" fg:w="1"/><text x="17.5094%" y="1311.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.10%)</title><rect x="17.2594%" y="1285" width="0.1046%" height="15" fill="rgb(246,78,51)" fg:x="165" fg:w="1"/><text x="17.5094%" y="1295.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_front (2 samples, 0.21%)</title><rect x="17.2594%" y="1333" width="0.2092%" height="15" fill="rgb(211,17,15)" fg:x="165" fg:w="2"/><text x="17.5094%" y="1343.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::is_full (1 samples, 0.10%)</title><rect x="17.3640%" y="1317" width="0.1046%" height="15" fill="rgb(209,59,46)" fg:x="166" fg:w="1"/><text x="17.6140%" y="1327.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::pop (2 samples, 0.21%)</title><rect x="17.4686%" y="1333" width="0.2092%" height="15" fill="rgb(210,92,25)" fg:x="167" fg:w="2"/><text x="17.7186%" y="1343.50"></text></g><g><title>databend-query`databend_query::pipelines::new::executor::executor_graph::Node::trigger (30 samples, 3.14%)</title><rect x="14.8536%" y="1365" width="3.1381%" height="15" fill="rgb(238,174,52)" fg:x="142" fg:w="30"/><text x="15.1036%" y="1375.50">dat..</text></g><g><title>databend-query`databend_query::pipelines::new::processors::port_trigger::UpdateList::trigger (25 samples, 2.62%)</title><rect x="15.3766%" y="1349" width="2.6151%" height="15" fill="rgb(230,73,7)" fg:x="147" fg:w="25"/><text x="15.6266%" y="1359.50">da..</text></g><g><title>databend-query`core::ptr::read (3 samples, 0.31%)</title><rect x="17.6778%" y="1333" width="0.3138%" height="15" fill="rgb(243,124,40)" fg:x="169" fg:w="3"/><text x="17.9278%" y="1343.50"></text></g><g><title>databend-query`core::option::Option&lt;T&gt;::is_some (1 samples, 0.10%)</title><rect x="18.2008%" y="1349" width="0.1046%" height="15" fill="rgb(244,170,11)" fg:x="174" fg:w="1"/><text x="18.4508%" y="1359.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.10%)</title><rect x="18.3054%" y="1317" width="0.1046%" height="15" fill="rgb(207,114,54)" fg:x="175" fg:w="1"/><text x="18.5554%" y="1327.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.10%)</title><rect x="18.3054%" y="1301" width="0.1046%" height="15" fill="rgb(205,42,20)" fg:x="175" fg:w="1"/><text x="18.5554%" y="1311.50"></text></g><g><title>databend-query`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.10%)</title><rect x="18.3054%" y="1285" width="0.1046%" height="15" fill="rgb(230,30,28)" fg:x="175" fg:w="1"/><text x="18.5554%" y="1295.50"></text></g><g><title>databend-query`databend_query::pipelines::new::processors::port_trigger::DirectedEdge::get_target (5 samples, 0.52%)</title><rect x="17.9916%" y="1365" width="0.5230%" height="15" fill="rgb(205,73,54)" fg:x="172" fg:w="5"/><text x="18.2416%" y="1375.50"></text></g><g><title>databend-query`petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::edge_endpoints (2 samples, 0.21%)</title><rect x="18.3054%" y="1349" width="0.2092%" height="15" fill="rgb(254,227,23)" fg:x="175" fg:w="2"/><text x="18.5554%" y="1359.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.21%)</title><rect x="18.3054%" y="1333" width="0.2092%" height="15" fill="rgb(228,202,34)" fg:x="175" fg:w="2"/><text x="18.5554%" y="1343.50"></text></g><g><title>databend-query`core::ptr::slice_from_raw_parts (1 samples, 0.10%)</title><rect x="18.4100%" y="1317" width="0.1046%" height="15" fill="rgb(222,225,37)" fg:x="176" fg:w="1"/><text x="18.6600%" y="1327.50"></text></g><g><title>databend-query`&lt;databend_query::pipelines::new::unsafe_cell_wrap::UnSafeCellWrap&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="18.5146%" y="1333" width="0.1046%" height="15" fill="rgb(221,14,54)" fg:x="177" fg:w="1"/><text x="18.7646%" y="1343.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.21%)</title><rect x="18.6192%" y="1317" width="0.2092%" height="15" fill="rgb(254,102,2)" fg:x="178" fg:w="2"/><text x="18.8692%" y="1327.50"></text></g><g><title>databend-query`alloc::alloc::dealloc (2 samples, 0.21%)</title><rect x="18.6192%" y="1301" width="0.2092%" height="15" fill="rgb(232,104,17)" fg:x="178" fg:w="2"/><text x="18.8692%" y="1311.50"></text></g><g><title>databend-query`__rg_dealloc (2 samples, 0.21%)</title><rect x="18.6192%" y="1285" width="0.2092%" height="15" fill="rgb(250,220,14)" fg:x="178" fg:w="2"/><text x="18.8692%" y="1295.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::dealloc (2 samples, 0.21%)</title><rect x="18.6192%" y="1269" width="0.2092%" height="15" fill="rgb(241,158,9)" fg:x="178" fg:w="2"/><text x="18.8692%" y="1279.50"></text></g><g><title>databend-query`_rjem_sdallocx (2 samples, 0.21%)</title><rect x="18.6192%" y="1253" width="0.2092%" height="15" fill="rgb(246,9,43)" fg:x="178" fg:w="2"/><text x="18.8692%" y="1263.50"></text></g><g><title>databend-query`alloc::alloc::box_free (3 samples, 0.31%)</title><rect x="18.6192%" y="1333" width="0.3138%" height="15" fill="rgb(206,73,33)" fg:x="178" fg:w="3"/><text x="18.8692%" y="1343.50"></text></g><g><title>databend-query`core::ptr::unique::Unique&lt;T&gt;::as_ref (1 samples, 0.10%)</title><rect x="18.8285%" y="1317" width="0.1046%" height="15" fill="rgb(222,79,8)" fg:x="180" fg:w="1"/><text x="19.0785%" y="1327.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;databend_query::pipelines::new::processors::port::InputPort&gt;&gt; (1 samples, 0.10%)</title><rect x="18.9331%" y="1333" width="0.1046%" height="15" fill="rgb(234,8,54)" fg:x="181" fg:w="1"/><text x="19.1831%" y="1343.50"></text></g><g><title>databend-query`core::sync::atomic::AtomicPtr&lt;T&gt;::compare_exchange_weak (1 samples, 0.10%)</title><rect x="19.0377%" y="1333" width="0.1046%" height="15" fill="rgb(209,134,38)" fg:x="182" fg:w="1"/><text x="19.2877%" y="1343.50"></text></g><g><title>databend-query`core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.10%)</title><rect x="19.0377%" y="1317" width="0.1046%" height="15" fill="rgb(230,127,29)" fg:x="182" fg:w="1"/><text x="19.2877%" y="1327.50"></text></g><g><title>databend-query`core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.10%)</title><rect x="19.1423%" y="1333" width="0.1046%" height="15" fill="rgb(242,44,41)" fg:x="183" fg:w="1"/><text x="19.3923%" y="1343.50"></text></g><g><title>databend-query`core::sync::atomic::atomic_load (1 samples, 0.10%)</title><rect x="19.1423%" y="1317" width="0.1046%" height="15" fill="rgb(222,56,43)" fg:x="183" fg:w="1"/><text x="19.3923%" y="1327.50"></text></g><g><title>databend-query`&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="19.3515%" y="1317" width="0.1046%" height="15" fill="rgb(238,39,47)" fg:x="185" fg:w="1"/><text x="19.6015%" y="1327.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="19.4561%" y="1301" width="0.1046%" height="15" fill="rgb(226,79,43)" fg:x="186" fg:w="1"/><text x="19.7061%" y="1311.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.10%)</title><rect x="19.4561%" y="1285" width="0.1046%" height="15" fill="rgb(242,105,53)" fg:x="186" fg:w="1"/><text x="19.7061%" y="1295.50"></text></g><g><title>databend-query`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.10%)</title><rect x="19.4561%" y="1269" width="0.1046%" height="15" fill="rgb(251,132,46)" fg:x="186" fg:w="1"/><text x="19.7061%" y="1279.50"></text></g><g><title>databend-query`databend_query::pipelines::new::processors::resize_processor::ResizeProcessor::get_current_input (4 samples, 0.42%)</title><rect x="19.2469%" y="1333" width="0.4184%" height="15" fill="rgb(231,77,14)" fg:x="184" fg:w="4"/><text x="19.4969%" y="1343.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.21%)</title><rect x="19.4561%" y="1317" width="0.2092%" height="15" fill="rgb(240,135,9)" fg:x="186" fg:w="2"/><text x="19.7061%" y="1327.50"></text></g><g><title>databend-query`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.10%)</title><rect x="19.5607%" y="1301" width="0.1046%" height="15" fill="rgb(248,109,14)" fg:x="187" fg:w="1"/><text x="19.8107%" y="1311.50"></text></g><g><title>databend-query`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.10%)</title><rect x="19.5607%" y="1285" width="0.1046%" height="15" fill="rgb(227,146,52)" fg:x="187" fg:w="1"/><text x="19.8107%" y="1295.50"></text></g><g><title>databend-query`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.21%)</title><rect x="19.6653%" y="1317" width="0.2092%" height="15" fill="rgb(232,54,3)" fg:x="188" fg:w="2"/><text x="19.9153%" y="1327.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::inner (2 samples, 0.21%)</title><rect x="19.6653%" y="1301" width="0.2092%" height="15" fill="rgb(229,201,43)" fg:x="188" fg:w="2"/><text x="19.9153%" y="1311.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.10%)</title><rect x="19.7699%" y="1285" width="0.1046%" height="15" fill="rgb(252,161,33)" fg:x="189" fg:w="1"/><text x="20.0199%" y="1295.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="19.8745%" y="1301" width="0.1046%" height="15" fill="rgb(226,146,40)" fg:x="190" fg:w="1"/><text x="20.1245%" y="1311.50"></text></g><g><title>databend-query`core::slice::raw::from_raw_parts (1 samples, 0.10%)</title><rect x="19.8745%" y="1285" width="0.1046%" height="15" fill="rgb(219,47,25)" fg:x="190" fg:w="1"/><text x="20.1245%" y="1295.50"></text></g><g><title>databend-query`core::ptr::metadata::from_raw_parts (1 samples, 0.10%)</title><rect x="19.8745%" y="1269" width="0.1046%" height="15" fill="rgb(250,135,13)" fg:x="190" fg:w="1"/><text x="20.1245%" y="1279.50"></text></g><g><title>databend-query`databend_query::pipelines::new::processors::resize_processor::ResizeProcessor::get_current_output (4 samples, 0.42%)</title><rect x="19.6653%" y="1333" width="0.4184%" height="15" fill="rgb(219,229,18)" fg:x="188" fg:w="4"/><text x="19.9153%" y="1343.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.21%)</title><rect x="19.8745%" y="1317" width="0.2092%" height="15" fill="rgb(217,152,27)" fg:x="190" fg:w="2"/><text x="20.1245%" y="1327.50"></text></g><g><title>databend-query`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.10%)</title><rect x="19.9791%" y="1301" width="0.1046%" height="15" fill="rgb(225,71,47)" fg:x="191" fg:w="1"/><text x="20.2291%" y="1311.50"></text></g><g><title>databend-query`&lt;databend_query::pipelines::new::processors::resize_processor::ResizeProcessor as databend_query::pipelines::new::processors::processor::Processor&gt;::event (16 samples, 1.67%)</title><rect x="18.5146%" y="1349" width="1.6736%" height="15" fill="rgb(220,139,14)" fg:x="177" fg:w="16"/><text x="18.7646%" y="1359.50"></text></g><g><title>databend-query`databend_query::pipelines::new::processors::resize_processor::ResizeProcessor::inputs_need_data (1 samples, 0.10%)</title><rect x="20.0837%" y="1333" width="0.1046%" height="15" fill="rgb(247,54,32)" fg:x="192" fg:w="1"/><text x="20.3337%" y="1343.50"></text></g><g><title>databend-query`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="20.0837%" y="1317" width="0.1046%" height="15" fill="rgb(252,131,39)" fg:x="192" fg:w="1"/><text x="20.3337%" y="1327.50"></text></g><g><title>databend-query`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="20.1883%" y="1333" width="0.1046%" height="15" fill="rgb(210,108,39)" fg:x="193" fg:w="1"/><text x="20.4383%" y="1343.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.10%)</title><rect x="20.1883%" y="1317" width="0.1046%" height="15" fill="rgb(205,23,29)" fg:x="193" fg:w="1"/><text x="20.4383%" y="1327.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.10%)</title><rect x="20.1883%" y="1301" width="0.1046%" height="15" fill="rgb(246,139,46)" fg:x="193" fg:w="1"/><text x="20.4383%" y="1311.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.21%)</title><rect x="20.2929%" y="1333" width="0.2092%" height="15" fill="rgb(250,81,26)" fg:x="194" fg:w="2"/><text x="20.5429%" y="1343.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.21%)</title><rect x="20.2929%" y="1317" width="0.2092%" height="15" fill="rgb(214,104,7)" fg:x="194" fg:w="2"/><text x="20.5429%" y="1327.50"></text></g><g><title>databend-query`&lt;databend_query::pipelines::new::processors::sinks::sync_sink::Sinker&lt;T&gt; as databend_query::pipelines::new::processors::processor::Processor&gt;::event (4 samples, 0.42%)</title><rect x="20.1883%" y="1349" width="0.4184%" height="15" fill="rgb(233,189,8)" fg:x="193" fg:w="4"/><text x="20.4383%" y="1359.50"></text></g><g><title>databend-query`core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.10%)</title><rect x="20.5021%" y="1333" width="0.1046%" height="15" fill="rgb(228,141,17)" fg:x="196" fg:w="1"/><text x="20.7521%" y="1343.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.10%)</title><rect x="21.1297%" y="1317" width="0.1046%" height="15" fill="rgb(247,157,1)" fg:x="202" fg:w="1"/><text x="21.3797%" y="1327.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.10%)</title><rect x="21.1297%" y="1301" width="0.1046%" height="15" fill="rgb(249,225,5)" fg:x="202" fg:w="1"/><text x="21.3797%" y="1311.50"></text></g><g><title>databend-query`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.31%)</title><rect x="21.0251%" y="1333" width="0.3138%" height="15" fill="rgb(242,55,13)" fg:x="201" fg:w="3"/><text x="21.2751%" y="1343.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.10%)</title><rect x="21.2343%" y="1317" width="0.1046%" height="15" fill="rgb(230,49,50)" fg:x="203" fg:w="1"/><text x="21.4843%" y="1327.50"></text></g><g><title>databend-query`_rjem_mallocx (1 samples, 0.10%)</title><rect x="21.5481%" y="1237" width="0.1046%" height="15" fill="rgb(241,111,38)" fg:x="206" fg:w="1"/><text x="21.7981%" y="1247.50"></text></g><g><title>databend-query`alloc::alloc::exchange_malloc (4 samples, 0.42%)</title><rect x="21.3389%" y="1333" width="0.4184%" height="15" fill="rgb(252,155,4)" fg:x="204" fg:w="4"/><text x="21.5889%" y="1343.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.42%)</title><rect x="21.3389%" y="1317" width="0.4184%" height="15" fill="rgb(212,69,32)" fg:x="204" fg:w="4"/><text x="21.5889%" y="1327.50"></text></g><g><title>databend-query`alloc::alloc::Global::alloc_impl (4 samples, 0.42%)</title><rect x="21.3389%" y="1301" width="0.4184%" height="15" fill="rgb(243,107,47)" fg:x="204" fg:w="4"/><text x="21.5889%" y="1311.50"></text></g><g><title>databend-query`alloc::alloc::alloc (4 samples, 0.42%)</title><rect x="21.3389%" y="1285" width="0.4184%" height="15" fill="rgb(247,130,12)" fg:x="204" fg:w="4"/><text x="21.5889%" y="1295.50"></text></g><g><title>databend-query`__rg_alloc (4 samples, 0.42%)</title><rect x="21.3389%" y="1269" width="0.4184%" height="15" fill="rgb(233,74,16)" fg:x="204" fg:w="4"/><text x="21.5889%" y="1279.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::alloc (4 samples, 0.42%)</title><rect x="21.3389%" y="1253" width="0.4184%" height="15" fill="rgb(208,58,18)" fg:x="204" fg:w="4"/><text x="21.5889%" y="1263.50"></text></g><g><title>databend-query`common_base::base::runtime_tracker::ThreadTracker::alloc_memory (1 samples, 0.10%)</title><rect x="21.6527%" y="1237" width="0.1046%" height="15" fill="rgb(242,225,1)" fg:x="207" fg:w="1"/><text x="21.9027%" y="1247.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.21%)</title><rect x="21.7573%" y="1333" width="0.2092%" height="15" fill="rgb(249,39,40)" fg:x="208" fg:w="2"/><text x="22.0073%" y="1343.50"></text></g><g><title>databend-query`core::option::Option&lt;T&gt;::take (1 samples, 0.10%)</title><rect x="21.9665%" y="1333" width="0.1046%" height="15" fill="rgb(207,72,44)" fg:x="210" fg:w="1"/><text x="22.2165%" y="1343.50"></text></g><g><title>databend-query`core::ptr::write (1 samples, 0.10%)</title><rect x="21.9665%" y="1317" width="0.1046%" height="15" fill="rgb(215,193,12)" fg:x="210" fg:w="1"/><text x="22.2165%" y="1327.50"></text></g><g><title>databend-query`core::sync::atomic::AtomicPtr&lt;T&gt;::load (2 samples, 0.21%)</title><rect x="22.0711%" y="1333" width="0.2092%" height="15" fill="rgb(248,41,39)" fg:x="211" fg:w="2"/><text x="22.3211%" y="1343.50"></text></g><g><title>databend-query`core::sync::atomic::atomic_load (2 samples, 0.21%)</title><rect x="22.0711%" y="1317" width="0.2092%" height="15" fill="rgb(253,85,4)" fg:x="211" fg:w="2"/><text x="22.3211%" y="1327.50"></text></g><g><title>databend-query`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.10%)</title><rect x="22.3849%" y="1317" width="0.1046%" height="15" fill="rgb(243,70,31)" fg:x="214" fg:w="1"/><text x="22.6349%" y="1327.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::dealloc (2 samples, 0.21%)</title><rect x="22.4895%" y="1253" width="0.2092%" height="15" fill="rgb(253,195,26)" fg:x="215" fg:w="2"/><text x="22.7395%" y="1263.50"></text></g><g><title>databend-query`_rjem_sdallocx (2 samples, 0.21%)</title><rect x="22.4895%" y="1237" width="0.2092%" height="15" fill="rgb(243,42,11)" fg:x="215" fg:w="2"/><text x="22.7395%" y="1247.50"></text></g><g><title>databend-query`_rjem_je_sdallocx_default (1 samples, 0.10%)</title><rect x="22.5941%" y="1221" width="0.1046%" height="15" fill="rgb(239,66,17)" fg:x="216" fg:w="1"/><text x="22.8441%" y="1231.50"></text></g><g><title>databend-query`_rjem_je_tcache_event_hard (1 samples, 0.10%)</title><rect x="22.5941%" y="1205" width="0.1046%" height="15" fill="rgb(217,132,21)" fg:x="216" fg:w="1"/><text x="22.8441%" y="1215.50"></text></g><g><title>databend-query`_rjem_je_tcache_bin_flush_small (1 samples, 0.10%)</title><rect x="22.5941%" y="1189" width="0.1046%" height="15" fill="rgb(252,202,21)" fg:x="216" fg:w="1"/><text x="22.8441%" y="1199.50"></text></g><g><title>databend-query`_rjem_je_arena_dalloc_bin_junked_locked (1 samples, 0.10%)</title><rect x="22.5941%" y="1173" width="0.1046%" height="15" fill="rgb(233,98,36)" fg:x="216" fg:w="1"/><text x="22.8441%" y="1183.50"></text></g><g><title>databend-query`arena_dalloc_bin_locked_impl (1 samples, 0.10%)</title><rect x="22.5941%" y="1157" width="0.1046%" height="15" fill="rgb(216,153,54)" fg:x="216" fg:w="1"/><text x="22.8441%" y="1167.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.31%)</title><rect x="22.4895%" y="1301" width="0.3138%" height="15" fill="rgb(250,99,7)" fg:x="215" fg:w="3"/><text x="22.7395%" y="1311.50"></text></g><g><title>databend-query`alloc::alloc::dealloc (3 samples, 0.31%)</title><rect x="22.4895%" y="1285" width="0.3138%" height="15" fill="rgb(207,56,50)" fg:x="215" fg:w="3"/><text x="22.7395%" y="1295.50"></text></g><g><title>databend-query`__rg_dealloc (3 samples, 0.31%)</title><rect x="22.4895%" y="1269" width="0.3138%" height="15" fill="rgb(244,61,34)" fg:x="215" fg:w="3"/><text x="22.7395%" y="1279.50"></text></g><g><title>databend-query`core::alloc::layout::Layout::size (1 samples, 0.10%)</title><rect x="22.6987%" y="1253" width="0.1046%" height="15" fill="rgb(241,50,38)" fg:x="217" fg:w="1"/><text x="22.9487%" y="1263.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.10%)</title><rect x="22.8033%" y="1301" width="0.1046%" height="15" fill="rgb(212,166,30)" fg:x="218" fg:w="1"/><text x="23.0533%" y="1311.50"></text></g><g><title>databend-query`alloc::alloc::box_free (5 samples, 0.52%)</title><rect x="22.4895%" y="1317" width="0.5230%" height="15" fill="rgb(249,127,32)" fg:x="215" fg:w="5"/><text x="22.7395%" y="1327.50"></text></g><g><title>databend-query`core::ptr::unique::Unique&lt;T&gt;::cast (1 samples, 0.10%)</title><rect x="22.9079%" y="1301" width="0.1046%" height="15" fill="rgb(209,103,0)" fg:x="219" fg:w="1"/><text x="23.1579%" y="1311.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.10%)</title><rect x="22.9079%" y="1285" width="0.1046%" height="15" fill="rgb(238,209,51)" fg:x="219" fg:w="1"/><text x="23.1579%" y="1295.50"></text></g><g><title>databend-query`alloc::boxed::Box&lt;T&gt;::from_raw (2 samples, 0.21%)</title><rect x="23.0126%" y="1317" width="0.2092%" height="15" fill="rgb(237,56,23)" fg:x="220" fg:w="2"/><text x="23.2626%" y="1327.50"></text></g><g><title>databend-query`alloc::boxed::Box&lt;T,A&gt;::from_raw_in (2 samples, 0.21%)</title><rect x="23.0126%" y="1301" width="0.2092%" height="15" fill="rgb(215,153,46)" fg:x="220" fg:w="2"/><text x="23.2626%" y="1311.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.21%)</title><rect x="23.0126%" y="1285" width="0.2092%" height="15" fill="rgb(224,49,31)" fg:x="220" fg:w="2"/><text x="23.2626%" y="1295.50"></text></g><g><title>databend-query`&lt;databend_query::pipelines::new::processors::transforms::transform::Transformer&lt;T&gt; as databend_query::pipelines::new::processors::processor::Processor&gt;::event (26 samples, 2.72%)</title><rect x="20.6067%" y="1349" width="2.7197%" height="15" fill="rgb(250,18,42)" fg:x="197" fg:w="26"/><text x="20.8567%" y="1359.50">da..</text></g><g><title>databend-query`databend_query::pipelines::new::processors::transforms::transform::Transformer&lt;T&gt;::pull_data (10 samples, 1.05%)</title><rect x="22.2803%" y="1333" width="1.0460%" height="15" fill="rgb(215,176,39)" fg:x="213" fg:w="10"/><text x="22.5303%" y="1343.50"></text></g><g><title>databend-query`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.10%)</title><rect x="23.2218%" y="1317" width="0.1046%" height="15" fill="rgb(223,77,29)" fg:x="222" fg:w="1"/><text x="23.4718%" y="1327.50"></text></g><g><title>databend-query`_rjem_mallocx (1 samples, 0.10%)</title><rect x="23.4310%" y="1237" width="0.1046%" height="15" fill="rgb(234,94,52)" fg:x="224" fg:w="1"/><text x="23.6810%" y="1247.50"></text></g><g><title>databend-query`alloc::alloc::exchange_malloc (2 samples, 0.21%)</title><rect x="23.4310%" y="1333" width="0.2092%" height="15" fill="rgb(220,154,50)" fg:x="224" fg:w="2"/><text x="23.6810%" y="1343.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.21%)</title><rect x="23.4310%" y="1317" width="0.2092%" height="15" fill="rgb(212,11,10)" fg:x="224" fg:w="2"/><text x="23.6810%" y="1327.50"></text></g><g><title>databend-query`alloc::alloc::Global::alloc_impl (2 samples, 0.21%)</title><rect x="23.4310%" y="1301" width="0.2092%" height="15" fill="rgb(205,166,19)" fg:x="224" fg:w="2"/><text x="23.6810%" y="1311.50"></text></g><g><title>databend-query`alloc::alloc::alloc (2 samples, 0.21%)</title><rect x="23.4310%" y="1285" width="0.2092%" height="15" fill="rgb(244,198,16)" fg:x="224" fg:w="2"/><text x="23.6810%" y="1295.50"></text></g><g><title>databend-query`__rg_alloc (2 samples, 0.21%)</title><rect x="23.4310%" y="1269" width="0.2092%" height="15" fill="rgb(219,69,12)" fg:x="224" fg:w="2"/><text x="23.6810%" y="1279.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::alloc (2 samples, 0.21%)</title><rect x="23.4310%" y="1253" width="0.2092%" height="15" fill="rgb(245,30,7)" fg:x="224" fg:w="2"/><text x="23.6810%" y="1263.50"></text></g><g><title>databend-query`core::alloc::layout::Layout::align (1 samples, 0.10%)</title><rect x="23.5356%" y="1237" width="0.1046%" height="15" fill="rgb(218,221,48)" fg:x="225" fg:w="1"/><text x="23.7856%" y="1247.50"></text></g><g><title>databend-query`alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (1 samples, 0.10%)</title><rect x="23.6402%" y="1333" width="0.1046%" height="15" fill="rgb(216,66,15)" fg:x="226" fg:w="1"/><text x="23.8902%" y="1343.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.10%)</title><rect x="23.7448%" y="1333" width="0.1046%" height="15" fill="rgb(226,122,50)" fg:x="227" fg:w="1"/><text x="23.9948%" y="1343.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.10%)</title><rect x="23.7448%" y="1317" width="0.1046%" height="15" fill="rgb(239,156,16)" fg:x="227" fg:w="1"/><text x="23.9948%" y="1327.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.10%)</title><rect x="23.7448%" y="1301" width="0.1046%" height="15" fill="rgb(224,27,38)" fg:x="227" fg:w="1"/><text x="23.9948%" y="1311.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::remove (35 samples, 3.66%)</title><rect x="23.8494%" y="1333" width="3.6611%" height="15" fill="rgb(224,39,27)" fg:x="228" fg:w="35"/><text x="24.0994%" y="1343.50">data..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (34 samples, 3.56%)</title><rect x="23.9540%" y="1317" width="3.5565%" height="15" fill="rgb(215,92,29)" fg:x="229" fg:w="34"/><text x="24.2040%" y="1327.50">libs..</text></g><g><title>databend-query`&lt;databend_query::pipelines::new::processors::transforms::transform_hash_join::TransformHashJoinProbe as databend_query::pipelines::new::processors::processor::Processor&gt;::event (41 samples, 4.29%)</title><rect x="23.3264%" y="1349" width="4.2887%" height="15" fill="rgb(207,159,16)" fg:x="223" fg:w="41"/><text x="23.5764%" y="1359.50">datab..</text></g><g><title>databend-query`core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.10%)</title><rect x="27.5105%" y="1333" width="0.1046%" height="15" fill="rgb(238,163,47)" fg:x="263" fg:w="1"/><text x="27.7605%" y="1343.50"></text></g><g><title>databend-query`&lt;databend_query::pipelines::new::unsafe_cell_wrap::UnSafeCellWrap&lt;T&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.31%)</title><rect x="27.6151%" y="1349" width="0.3138%" height="15" fill="rgb(219,91,49)" fg:x="264" fg:w="3"/><text x="27.8651%" y="1359.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;databend_query::pipelines::new::processors::port::OutputPort&gt;&gt; (1 samples, 0.10%)</title><rect x="27.9289%" y="1349" width="0.1046%" height="15" fill="rgb(227,167,31)" fg:x="267" fg:w="1"/><text x="28.1789%" y="1359.50"></text></g><g><title>databend-query`core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.10%)</title><rect x="28.0335%" y="1349" width="0.1046%" height="15" fill="rgb(234,80,54)" fg:x="268" fg:w="1"/><text x="28.2835%" y="1359.50"></text></g><g><title>databend-query`databend_query::pipelines::new::processors::processor::ProcessorPtr::event (93 samples, 9.73%)</title><rect x="18.5146%" y="1365" width="9.7280%" height="15" fill="rgb(212,114,2)" fg:x="177" fg:w="93"/><text x="18.7646%" y="1375.50">databend-query..</text></g><g><title>databend-query`databend_query::pipelines::new::processors::transforms::transform::Transformer&lt;T&gt;::pull_data (1 samples, 0.10%)</title><rect x="28.1381%" y="1349" width="0.1046%" height="15" fill="rgb(234,50,24)" fg:x="269" fg:w="1"/><text x="28.3881%" y="1359.50"></text></g><g><title>databend-query`std::panicking::panic_count::count_is_zero (1 samples, 0.10%)</title><rect x="28.2427%" y="1301" width="0.1046%" height="15" fill="rgb(221,68,8)" fg:x="270" fg:w="1"/><text x="28.4927%" y="1311.50"></text></g><g><title>databend-query`std::sync::poison::Flag::borrow (2 samples, 0.21%)</title><rect x="28.2427%" y="1333" width="0.2092%" height="15" fill="rgb(254,180,31)" fg:x="270" fg:w="2"/><text x="28.4927%" y="1343.50"></text></g><g><title>databend-query`std::thread::panicking (2 samples, 0.21%)</title><rect x="28.2427%" y="1317" width="0.2092%" height="15" fill="rgb(247,130,50)" fg:x="270" fg:w="2"/><text x="28.4927%" y="1327.50"></text></g><g><title>databend-query`std::panicking::panicking (1 samples, 0.10%)</title><rect x="28.3473%" y="1301" width="0.1046%" height="15" fill="rgb(211,109,4)" fg:x="271" fg:w="1"/><text x="28.5973%" y="1311.50"></text></g><g><title>databend-query`std::panicking::panic_count::count_is_zero (1 samples, 0.10%)</title><rect x="28.3473%" y="1285" width="0.1046%" height="15" fill="rgb(238,50,21)" fg:x="271" fg:w="1"/><text x="28.5973%" y="1295.50"></text></g><g><title>databend-query`std::sync::mutex::MutexGuard&lt;T&gt;::new (4 samples, 0.42%)</title><rect x="28.2427%" y="1349" width="0.4184%" height="15" fill="rgb(225,57,45)" fg:x="270" fg:w="4"/><text x="28.4927%" y="1359.50"></text></g><g><title>databend-query`std::sync::poison::map_result (2 samples, 0.21%)</title><rect x="28.4519%" y="1333" width="0.2092%" height="15" fill="rgb(209,196,50)" fg:x="272" fg:w="2"/><text x="28.7019%" y="1343.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (1 samples, 0.10%)</title><rect x="28.6611%" y="1317" width="0.1046%" height="15" fill="rgb(242,140,13)" fg:x="274" fg:w="1"/><text x="28.9111%" y="1327.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (1 samples, 0.10%)</title><rect x="28.6611%" y="1301" width="0.1046%" height="15" fill="rgb(217,111,7)" fg:x="274" fg:w="1"/><text x="28.9111%" y="1311.50"></text></g><g><title>databend-query`databend_query::pipelines::new::executor::executor_graph::ExecutingGraph::schedule_queue (206 samples, 21.55%)</title><rect x="7.3222%" y="1381" width="21.5481%" height="15" fill="rgb(253,193,51)" fg:x="70" fg:w="206"/><text x="7.5722%" y="1391.50">databend-query`databend_query::pip..</text></g><g><title>databend-query`std::sync::mutex::Mutex&lt;T&gt;::lock (6 samples, 0.63%)</title><rect x="28.2427%" y="1365" width="0.6276%" height="15" fill="rgb(252,70,29)" fg:x="270" fg:w="6"/><text x="28.4927%" y="1375.50"></text></g><g><title>databend-query`std::sys_common::mutex::MovableMutex::raw_lock (2 samples, 0.21%)</title><rect x="28.6611%" y="1349" width="0.2092%" height="15" fill="rgb(232,127,12)" fg:x="274" fg:w="2"/><text x="28.9111%" y="1359.50"></text></g><g><title>databend-query`std::sys::unix::locks::pthread_mutex::Mutex::lock (2 samples, 0.21%)</title><rect x="28.6611%" y="1333" width="0.2092%" height="15" fill="rgb(211,180,21)" fg:x="274" fg:w="2"/><text x="28.9111%" y="1343.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.10%)</title><rect x="28.7657%" y="1317" width="0.1046%" height="15" fill="rgb(229,72,13)" fg:x="275" fg:w="1"/><text x="29.0157%" y="1327.50"></text></g><g><title>databend-query`_rjem_mallocx (6 samples, 0.63%)</title><rect x="29.0795%" y="1205" width="0.6276%" height="15" fill="rgb(240,211,49)" fg:x="278" fg:w="6"/><text x="29.3295%" y="1215.50"></text></g><g><title>databend-query`_rjem_je_tcache_event_hard (1 samples, 0.10%)</title><rect x="29.6025%" y="1189" width="0.1046%" height="15" fill="rgb(219,149,40)" fg:x="283" fg:w="1"/><text x="29.8525%" y="1199.50"></text></g><g><title>databend-query`_rjem_je_tcache_bin_flush_small (1 samples, 0.10%)</title><rect x="29.6025%" y="1173" width="0.1046%" height="15" fill="rgb(210,127,46)" fg:x="283" fg:w="1"/><text x="29.8525%" y="1183.50"></text></g><g><title>databend-query`alloc::alloc::alloc (7 samples, 0.73%)</title><rect x="29.0795%" y="1253" width="0.7322%" height="15" fill="rgb(220,106,7)" fg:x="278" fg:w="7"/><text x="29.3295%" y="1263.50"></text></g><g><title>databend-query`__rg_alloc (7 samples, 0.73%)</title><rect x="29.0795%" y="1237" width="0.7322%" height="15" fill="rgb(249,31,22)" fg:x="278" fg:w="7"/><text x="29.3295%" y="1247.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::alloc (7 samples, 0.73%)</title><rect x="29.0795%" y="1221" width="0.7322%" height="15" fill="rgb(253,1,49)" fg:x="278" fg:w="7"/><text x="29.3295%" y="1231.50"></text></g><g><title>databend-query`common_base::base::runtime_tracker::ThreadTracker::alloc_memory (1 samples, 0.10%)</title><rect x="29.7071%" y="1205" width="0.1046%" height="15" fill="rgb(227,144,33)" fg:x="284" fg:w="1"/><text x="29.9571%" y="1215.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.84%)</title><rect x="29.0795%" y="1285" width="0.8368%" height="15" fill="rgb(249,163,44)" fg:x="278" fg:w="8"/><text x="29.3295%" y="1295.50"></text></g><g><title>databend-query`alloc::alloc::Global::alloc_impl (8 samples, 0.84%)</title><rect x="29.0795%" y="1269" width="0.8368%" height="15" fill="rgb(234,15,39)" fg:x="278" fg:w="8"/><text x="29.3295%" y="1279.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.10%)</title><rect x="29.8117%" y="1253" width="0.1046%" height="15" fill="rgb(207,66,16)" fg:x="285" fg:w="1"/><text x="30.0617%" y="1263.50"></text></g><g><title>databend-query`core::num::_&lt;impl usize&gt;::checked_mul (1 samples, 0.10%)</title><rect x="29.9163%" y="1285" width="0.1046%" height="15" fill="rgb(233,112,24)" fg:x="286" fg:w="1"/><text x="30.1663%" y="1295.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.10%)</title><rect x="30.0209%" y="1285" width="0.1046%" height="15" fill="rgb(230,90,22)" fg:x="287" fg:w="1"/><text x="30.2709%" y="1295.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 1.26%)</title><rect x="28.9749%" y="1301" width="1.2552%" height="15" fill="rgb(229,61,13)" fg:x="277" fg:w="12"/><text x="29.2249%" y="1311.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.10%)</title><rect x="30.1255%" y="1285" width="0.1046%" height="15" fill="rgb(225,57,24)" fg:x="288" fg:w="1"/><text x="30.3755%" y="1295.50"></text></g><g><title>databend-query`alloc::raw_vec::alloc_guard (1 samples, 0.10%)</title><rect x="30.2301%" y="1301" width="0.1046%" height="15" fill="rgb(208,169,48)" fg:x="289" fg:w="1"/><text x="30.4801%" y="1311.50"></text></g><g><title>databend-query`databend_query::pipelines::new::executor::executor_graph::RunningGraph::schedule_queue (223 samples, 23.33%)</title><rect x="7.1130%" y="1397" width="23.3264%" height="15" fill="rgb(244,218,51)" fg:x="68" fg:w="223"/><text x="7.3630%" y="1407.50">databend-query`databend_query::pipeli..</text></g><g><title>databend-query`databend_query::pipelines::new::executor::executor_graph::ScheduleQueue::create (15 samples, 1.57%)</title><rect x="28.8703%" y="1381" width="1.5690%" height="15" fill="rgb(214,148,10)" fg:x="276" fg:w="15"/><text x="29.1203%" y="1391.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::VecDeque&lt;T&gt;::new (15 samples, 1.57%)</title><rect x="28.8703%" y="1365" width="1.5690%" height="15" fill="rgb(225,174,27)" fg:x="276" fg:w="15"/><text x="29.1203%" y="1375.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::new_in (15 samples, 1.57%)</title><rect x="28.8703%" y="1349" width="1.5690%" height="15" fill="rgb(230,96,26)" fg:x="276" fg:w="15"/><text x="29.1203%" y="1359.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::with_capacity_in (15 samples, 1.57%)</title><rect x="28.8703%" y="1333" width="1.5690%" height="15" fill="rgb(232,10,30)" fg:x="276" fg:w="15"/><text x="29.1203%" y="1343.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 1.46%)</title><rect x="28.9749%" y="1317" width="1.4644%" height="15" fill="rgb(222,8,50)" fg:x="277" fg:w="14"/><text x="29.2249%" y="1327.50"></text></g><g><title>databend-query`core::ptr::unique::Unique&lt;T&gt;::new_unchecked (1 samples, 0.10%)</title><rect x="30.3347%" y="1301" width="0.1046%" height="15" fill="rgb(213,81,27)" fg:x="290" fg:w="1"/><text x="30.5847%" y="1311.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_as_mut_slice (1 samples, 0.10%)</title><rect x="30.8577%" y="1317" width="0.1046%" height="15" fill="rgb(245,50,10)" fg:x="295" fg:w="1"/><text x="31.1077%" y="1327.50"></text></g><g><title>databend-query`&lt;&amp;mut [T] as alloc::collections::vec_deque::ring_slices::RingSlices&gt;::slice (2 samples, 0.21%)</title><rect x="30.9623%" y="1301" width="0.2092%" height="15" fill="rgb(216,100,18)" fg:x="296" fg:w="2"/><text x="31.2123%" y="1311.50"></text></g><g><title>databend-query`core::slice::index::_&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (2 samples, 0.21%)</title><rect x="30.9623%" y="1285" width="0.2092%" height="15" fill="rgb(236,147,54)" fg:x="296" fg:w="2"/><text x="31.2123%" y="1295.50"></text></g><g><title>databend-query`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.21%)</title><rect x="30.9623%" y="1269" width="0.2092%" height="15" fill="rgb(205,143,26)" fg:x="296" fg:w="2"/><text x="31.2123%" y="1279.50"></text></g><g><title>databend-query`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (2 samples, 0.21%)</title><rect x="30.9623%" y="1253" width="0.2092%" height="15" fill="rgb(236,26,9)" fg:x="296" fg:w="2"/><text x="31.2123%" y="1263.50"></text></g><g><title>databend-query`core::ptr::metadata::from_raw_parts_mut (2 samples, 0.21%)</title><rect x="30.9623%" y="1237" width="0.2092%" height="15" fill="rgb(221,165,53)" fg:x="296" fg:w="2"/><text x="31.2123%" y="1247.50"></text></g><g><title>databend-query`&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.63%)</title><rect x="30.6485%" y="1349" width="0.6276%" height="15" fill="rgb(214,110,17)" fg:x="293" fg:w="6"/><text x="30.8985%" y="1359.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::as_mut_slices (5 samples, 0.52%)</title><rect x="30.7531%" y="1333" width="0.5230%" height="15" fill="rgb(237,197,12)" fg:x="294" fg:w="5"/><text x="31.0031%" y="1343.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::ring_slices::RingSlices::ring_slices (3 samples, 0.31%)</title><rect x="30.9623%" y="1317" width="0.3138%" height="15" fill="rgb(205,84,17)" fg:x="296" fg:w="3"/><text x="31.2123%" y="1327.50"></text></g><g><title>databend-query`&lt;&amp;mut [T] as alloc::collections::vec_deque::ring_slices::RingSlices&gt;::split_at (1 samples, 0.10%)</title><rect x="31.1715%" y="1301" width="0.1046%" height="15" fill="rgb(237,18,45)" fg:x="298" fg:w="1"/><text x="31.4215%" y="1311.50"></text></g><g><title>databend-query`core::slice::_&lt;impl [T]&gt;::split_at_mut (1 samples, 0.10%)</title><rect x="31.1715%" y="1285" width="0.1046%" height="15" fill="rgb(221,87,14)" fg:x="298" fg:w="1"/><text x="31.4215%" y="1295.50"></text></g><g><title>databend-query`core::slice::_&lt;impl [T]&gt;::split_at_mut_unchecked (1 samples, 0.10%)</title><rect x="31.1715%" y="1269" width="0.1046%" height="15" fill="rgb(238,186,15)" fg:x="298" fg:w="1"/><text x="31.4215%" y="1279.50"></text></g><g><title>databend-query`__rg_dealloc (4 samples, 0.42%)</title><rect x="31.3808%" y="1285" width="0.4184%" height="15" fill="rgb(208,115,11)" fg:x="300" fg:w="4"/><text x="31.6308%" y="1295.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::dealloc (3 samples, 0.31%)</title><rect x="31.4854%" y="1269" width="0.3138%" height="15" fill="rgb(254,175,0)" fg:x="301" fg:w="3"/><text x="31.7354%" y="1279.50"></text></g><g><title>databend-query`_rjem_sdallocx (3 samples, 0.31%)</title><rect x="31.4854%" y="1253" width="0.3138%" height="15" fill="rgb(227,24,42)" fg:x="301" fg:w="3"/><text x="31.7354%" y="1263.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.63%)</title><rect x="31.2762%" y="1317" width="0.6276%" height="15" fill="rgb(223,211,37)" fg:x="299" fg:w="6"/><text x="31.5262%" y="1327.50"></text></g><g><title>databend-query`alloc::alloc::dealloc (6 samples, 0.63%)</title><rect x="31.2762%" y="1301" width="0.6276%" height="15" fill="rgb(235,49,27)" fg:x="299" fg:w="6"/><text x="31.5262%" y="1311.50"></text></g><g><title>databend-query`core::num::nonzero::NonZeroUsize::get (1 samples, 0.10%)</title><rect x="31.7992%" y="1285" width="0.1046%" height="15" fill="rgb(254,97,51)" fg:x="304" fg:w="1"/><text x="32.0492%" y="1295.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;databend_query::pipelines::new::processors::processor::ProcessorPtr&gt;&gt; (13 samples, 1.36%)</title><rect x="30.6485%" y="1365" width="1.3598%" height="15" fill="rgb(249,51,40)" fg:x="293" fg:w="13"/><text x="30.8985%" y="1375.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;databend_query::pipelines::new::processors::processor::ProcessorPtr&gt;&gt; (7 samples, 0.73%)</title><rect x="31.2762%" y="1349" width="0.7322%" height="15" fill="rgb(210,128,45)" fg:x="299" fg:w="7"/><text x="31.5262%" y="1359.50"></text></g><g><title>databend-query`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.73%)</title><rect x="31.2762%" y="1333" width="0.7322%" height="15" fill="rgb(224,137,50)" fg:x="299" fg:w="7"/><text x="31.5262%" y="1343.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.10%)</title><rect x="31.9038%" y="1317" width="0.1046%" height="15" fill="rgb(242,15,9)" fg:x="305" fg:w="1"/><text x="32.1538%" y="1327.50"></text></g><g><title>databend-query`core::ptr::unique::Unique&lt;T&gt;::cast (1 samples, 0.10%)</title><rect x="31.9038%" y="1301" width="0.1046%" height="15" fill="rgb(233,187,41)" fg:x="305" fg:w="1"/><text x="32.1538%" y="1311.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;databend_query::pipelines::new::executor::executor_graph::ScheduleQueue&gt; (14 samples, 1.46%)</title><rect x="30.6485%" y="1381" width="1.4644%" height="15" fill="rgb(227,2,29)" fg:x="293" fg:w="14"/><text x="30.8985%" y="1391.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;databend_query::pipelines::new::processors::processor::ProcessorPtr&gt;&gt; (1 samples, 0.10%)</title><rect x="32.0084%" y="1365" width="0.1046%" height="15" fill="rgb(222,70,3)" fg:x="306" fg:w="1"/><text x="32.2584%" y="1375.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::cap (1 samples, 0.10%)</title><rect x="32.2176%" y="1349" width="0.1046%" height="15" fill="rgb(213,11,42)" fg:x="308" fg:w="1"/><text x="32.4676%" y="1359.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (2 samples, 0.21%)</title><rect x="32.2176%" y="1365" width="0.2092%" height="15" fill="rgb(225,150,9)" fg:x="308" fg:w="2"/><text x="32.4676%" y="1375.50"></text></g><g><title>databend-query`core::ptr::read (1 samples, 0.10%)</title><rect x="32.3222%" y="1349" width="0.1046%" height="15" fill="rgb(230,162,45)" fg:x="309" fg:w="1"/><text x="32.5722%" y="1359.50"></text></g><g><title>databend-query`databend_query::pipelines::new::executor::executor_graph::ScheduleQueue::schedule_sync (4 samples, 0.42%)</title><rect x="32.1130%" y="1381" width="0.4184%" height="15" fill="rgb(222,14,52)" fg:x="307" fg:w="4"/><text x="32.3630%" y="1391.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;databend_query::pipelines::new::executor::executor_worker_context::ExecutorTask&gt; (1 samples, 0.10%)</title><rect x="32.4268%" y="1365" width="0.1046%" height="15" fill="rgb(254,198,14)" fg:x="310" fg:w="1"/><text x="32.6768%" y="1375.50"></text></g><g><title>databend-query`&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="32.5314%" y="1333" width="0.1046%" height="15" fill="rgb(220,217,30)" fg:x="311" fg:w="1"/><text x="32.7814%" y="1343.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;[databend_query::pipelines::new::processors::processor::ProcessorPtr]&gt; (1 samples, 0.10%)</title><rect x="32.5314%" y="1317" width="0.1046%" height="15" fill="rgb(215,146,41)" fg:x="311" fg:w="1"/><text x="32.7814%" y="1327.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;databend_query::pipelines::new::executor::executor_graph::ScheduleQueue&gt; (2 samples, 0.21%)</title><rect x="32.5314%" y="1365" width="0.2092%" height="15" fill="rgb(217,27,36)" fg:x="311" fg:w="2"/><text x="32.7814%" y="1375.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;databend_query::pipelines::new::processors::processor::ProcessorPtr&gt;&gt; (2 samples, 0.21%)</title><rect x="32.5314%" y="1349" width="0.2092%" height="15" fill="rgb(219,218,39)" fg:x="311" fg:w="2"/><text x="32.7814%" y="1359.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;databend_query::pipelines::new::processors::processor::ProcessorPtr&gt;&gt; (1 samples, 0.10%)</title><rect x="32.6360%" y="1333" width="0.1046%" height="15" fill="rgb(219,4,42)" fg:x="312" fg:w="1"/><text x="32.8860%" y="1343.50"></text></g><g><title>databend-query`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="32.6360%" y="1317" width="0.1046%" height="15" fill="rgb(249,119,36)" fg:x="312" fg:w="1"/><text x="32.8860%" y="1327.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.10%)</title><rect x="32.6360%" y="1301" width="0.1046%" height="15" fill="rgb(209,23,33)" fg:x="312" fg:w="1"/><text x="32.8860%" y="1311.50"></text></g><g><title>databend-query`core::ptr::unique::Unique&lt;T&gt;::cast (1 samples, 0.10%)</title><rect x="32.6360%" y="1285" width="0.1046%" height="15" fill="rgb(211,10,0)" fg:x="312" fg:w="1"/><text x="32.8860%" y="1295.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;databend_query::pipelines::new::executor::executor_worker_context::ExecutorTask&gt;&gt; (1 samples, 0.10%)</title><rect x="32.7406%" y="1349" width="0.1046%" height="15" fill="rgb(208,99,37)" fg:x="313" fg:w="1"/><text x="32.9906%" y="1359.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;databend_query::pipelines::new::executor::executor_worker_context::ExecutorTask&gt;&gt; (1 samples, 0.10%)</title><rect x="32.7406%" y="1333" width="0.1046%" height="15" fill="rgb(213,132,31)" fg:x="313" fg:w="1"/><text x="32.9906%" y="1343.50"></text></g><g><title>databend-query`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="32.7406%" y="1317" width="0.1046%" height="15" fill="rgb(243,129,40)" fg:x="313" fg:w="1"/><text x="32.9906%" y="1327.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.10%)</title><rect x="32.7406%" y="1301" width="0.1046%" height="15" fill="rgb(210,66,33)" fg:x="313" fg:w="1"/><text x="32.9906%" y="1311.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.10%)</title><rect x="32.7406%" y="1285" width="0.1046%" height="15" fill="rgb(209,189,4)" fg:x="313" fg:w="1"/><text x="32.9906%" y="1295.50"></text></g><g><title>databend-query`common_base::infallible::condvar::Condvar::notify_one (1 samples, 0.10%)</title><rect x="32.8452%" y="1333" width="0.1046%" height="15" fill="rgb(214,107,37)" fg:x="314" fg:w="1"/><text x="33.0952%" y="1343.50"></text></g><g><title>databend-query`parking_lot::condvar::Condvar::notify_one (1 samples, 0.10%)</title><rect x="32.8452%" y="1317" width="0.1046%" height="15" fill="rgb(245,88,54)" fg:x="314" fg:w="1"/><text x="33.0952%" y="1327.50"></text></g><g><title>databend-query`parking_lot::condvar::Condvar::notify_one_slow (1 samples, 0.10%)</title><rect x="32.8452%" y="1301" width="0.1046%" height="15" fill="rgb(205,146,20)" fg:x="314" fg:w="1"/><text x="33.0952%" y="1311.50"></text></g><g><title>databend-query`parking_lot_core::parking_lot::unpark_requeue (1 samples, 0.10%)</title><rect x="32.8452%" y="1285" width="0.1046%" height="15" fill="rgb(220,161,25)" fg:x="314" fg:w="1"/><text x="33.0952%" y="1295.50"></text></g><g><title>databend-query`core::cell::Cell&lt;T&gt;::set (1 samples, 0.10%)</title><rect x="32.8452%" y="1269" width="0.1046%" height="15" fill="rgb(215,152,15)" fg:x="314" fg:w="1"/><text x="33.0952%" y="1279.50"></text></g><g><title>databend-query`databend_query::pipelines::new::executor::executor_notify::WorkersNotify::wakeup (4 samples, 0.42%)</title><rect x="32.8452%" y="1349" width="0.4184%" height="15" fill="rgb(233,192,44)" fg:x="314" fg:w="4"/><text x="33.0952%" y="1359.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,bool&gt;&gt; (3 samples, 0.31%)</title><rect x="32.9498%" y="1333" width="0.3138%" height="15" fill="rgb(240,170,46)" fg:x="315" fg:w="3"/><text x="33.1998%" y="1343.50"></text></g><g><title>databend-query`&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.31%)</title><rect x="32.9498%" y="1317" width="0.3138%" height="15" fill="rgb(207,104,33)" fg:x="315" fg:w="3"/><text x="33.1998%" y="1327.50"></text></g><g><title>databend-query`&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (3 samples, 0.31%)</title><rect x="32.9498%" y="1301" width="0.3138%" height="15" fill="rgb(219,21,39)" fg:x="315" fg:w="3"/><text x="33.1998%" y="1311.50"></text></g><g><title>databend-query`parking_lot::raw_mutex::RawMutex::unlock_slow (3 samples, 0.31%)</title><rect x="32.9498%" y="1285" width="0.3138%" height="15" fill="rgb(214,133,29)" fg:x="315" fg:w="3"/><text x="33.1998%" y="1295.50"></text></g><g><title>databend-query`parking_lot_core::parking_lot::unpark_one (3 samples, 0.31%)</title><rect x="32.9498%" y="1269" width="0.3138%" height="15" fill="rgb(226,93,6)" fg:x="315" fg:w="3"/><text x="33.1998%" y="1279.50"></text></g><g><title>databend-query`&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (3 samples, 0.31%)</title><rect x="32.9498%" y="1253" width="0.3138%" height="15" fill="rgb(252,222,34)" fg:x="315" fg:w="3"/><text x="33.1998%" y="1263.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (3 samples, 0.31%)</title><rect x="32.9498%" y="1237" width="0.3138%" height="15" fill="rgb(252,92,48)" fg:x="315" fg:w="3"/><text x="33.1998%" y="1247.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.10%)</title><rect x="33.2636%" y="1333" width="0.1046%" height="15" fill="rgb(245,223,24)" fg:x="318" fg:w="1"/><text x="33.5136%" y="1343.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.10%)</title><rect x="33.2636%" y="1317" width="0.1046%" height="15" fill="rgb(205,176,3)" fg:x="318" fg:w="1"/><text x="33.5136%" y="1327.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.10%)</title><rect x="33.2636%" y="1301" width="0.1046%" height="15" fill="rgb(235,151,15)" fg:x="318" fg:w="1"/><text x="33.5136%" y="1311.50"></text></g><g><title>databend-query`databend_query::pipelines::new::executor::executor_graph::ScheduleQueue::schedule (29 samples, 3.03%)</title><rect x="30.4393%" y="1397" width="3.0335%" height="15" fill="rgb(237,209,11)" fg:x="291" fg:w="29"/><text x="30.6893%" y="1407.50">dat..</text></g><g><title>databend-query`databend_query::pipelines::new::executor::executor_graph::ScheduleQueue::schedule_tail (9 samples, 0.94%)</title><rect x="32.5314%" y="1381" width="0.9414%" height="15" fill="rgb(243,227,24)" fg:x="311" fg:w="9"/><text x="32.7814%" y="1391.50"></text></g><g><title>databend-query`databend_query::pipelines::new::executor::executor_tasks::ExecutorTasksQueue::push_tasks (7 samples, 0.73%)</title><rect x="32.7406%" y="1365" width="0.7322%" height="15" fill="rgb(239,193,16)" fg:x="313" fg:w="7"/><text x="32.9906%" y="1375.50"></text></g><g><title>databend-query`databend_query::pipelines::new::executor::executor_tasks::ExecutorTasks::push_task (2 samples, 0.21%)</title><rect x="33.2636%" y="1349" width="0.2092%" height="15" fill="rgb(231,27,9)" fg:x="318" fg:w="2"/><text x="33.5136%" y="1359.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (1 samples, 0.10%)</title><rect x="33.3682%" y="1333" width="0.1046%" height="15" fill="rgb(219,169,10)" fg:x="319" fg:w="1"/><text x="33.6182%" y="1343.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::is_full (1 samples, 0.10%)</title><rect x="33.3682%" y="1317" width="0.1046%" height="15" fill="rgb(244,229,43)" fg:x="319" fg:w="1"/><text x="33.6182%" y="1327.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.10%)</title><rect x="33.4728%" y="1365" width="0.1046%" height="15" fill="rgb(254,38,20)" fg:x="320" fg:w="1"/><text x="33.7228%" y="1375.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="33.4728%" y="1349" width="0.1046%" height="15" fill="rgb(250,47,30)" fg:x="320" fg:w="1"/><text x="33.7228%" y="1359.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.10%)</title><rect x="33.4728%" y="1333" width="0.1046%" height="15" fill="rgb(224,124,36)" fg:x="320" fg:w="1"/><text x="33.7228%" y="1343.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.10%)</title><rect x="33.4728%" y="1317" width="0.1046%" height="15" fill="rgb(246,68,51)" fg:x="320" fg:w="1"/><text x="33.7228%" y="1327.50"></text></g><g><title>databend-query`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.10%)</title><rect x="33.4728%" y="1301" width="0.1046%" height="15" fill="rgb(253,43,49)" fg:x="320" fg:w="1"/><text x="33.7228%" y="1311.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.10%)</title><rect x="33.5774%" y="1365" width="0.1046%" height="15" fill="rgb(219,54,36)" fg:x="321" fg:w="1"/><text x="33.8274%" y="1375.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.10%)</title><rect x="33.5774%" y="1349" width="0.1046%" height="15" fill="rgb(227,133,34)" fg:x="321" fg:w="1"/><text x="33.8274%" y="1359.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.10%)</title><rect x="33.5774%" y="1333" width="0.1046%" height="15" fill="rgb(247,227,15)" fg:x="321" fg:w="1"/><text x="33.8274%" y="1343.50"></text></g><g><title>databend-query`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.10%)</title><rect x="33.5774%" y="1317" width="0.1046%" height="15" fill="rgb(229,96,14)" fg:x="321" fg:w="1"/><text x="33.8274%" y="1327.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (2 samples, 0.21%)</title><rect x="33.7866%" y="1269" width="0.2092%" height="15" fill="rgb(220,79,17)" fg:x="323" fg:w="2"/><text x="34.0366%" y="1279.50"></text></g><g><title>databend-query`&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (3 samples, 0.31%)</title><rect x="33.7866%" y="1285" width="0.3138%" height="15" fill="rgb(205,131,53)" fg:x="323" fg:w="3"/><text x="34.0366%" y="1295.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (1 samples, 0.10%)</title><rect x="33.9958%" y="1269" width="0.1046%" height="15" fill="rgb(209,50,29)" fg:x="325" fg:w="1"/><text x="34.2458%" y="1279.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (1 samples, 0.10%)</title><rect x="33.9958%" y="1253" width="0.1046%" height="15" fill="rgb(245,86,46)" fg:x="325" fg:w="1"/><text x="34.2458%" y="1263.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (1 samples, 0.10%)</title><rect x="33.9958%" y="1237" width="0.1046%" height="15" fill="rgb(235,66,46)" fg:x="325" fg:w="1"/><text x="34.2458%" y="1247.50"></text></g><g><title>databend-query`core::cell::Cell&lt;T&gt;::set (1 samples, 0.10%)</title><rect x="34.1004%" y="1285" width="0.1046%" height="15" fill="rgb(232,148,31)" fg:x="326" fg:w="1"/><text x="34.3504%" y="1295.50"></text></g><g><title>databend-query`core::cell::Cell&lt;T&gt;::replace (1 samples, 0.10%)</title><rect x="34.1004%" y="1269" width="0.1046%" height="15" fill="rgb(217,149,8)" fg:x="326" fg:w="1"/><text x="34.3504%" y="1279.50"></text></g><g><title>databend-query`core::mem::replace (1 samples, 0.10%)</title><rect x="34.1004%" y="1253" width="0.1046%" height="15" fill="rgb(209,183,11)" fg:x="326" fg:w="1"/><text x="34.3504%" y="1263.50"></text></g><g><title>databend-query`core::result::Result&lt;T,E&gt;::is_ok (1 samples, 0.10%)</title><rect x="34.2050%" y="1253" width="0.1046%" height="15" fill="rgb(208,55,20)" fg:x="327" fg:w="1"/><text x="34.4550%" y="1263.50"></text></g><g><title>databend-query`common_base::infallible::condvar::Condvar::wait (7 samples, 0.73%)</title><rect x="33.6820%" y="1365" width="0.7322%" height="15" fill="rgb(218,39,14)" fg:x="322" fg:w="7"/><text x="33.9320%" y="1375.50"></text></g><g><title>databend-query`parking_lot::condvar::Condvar::wait (6 samples, 0.63%)</title><rect x="33.7866%" y="1349" width="0.6276%" height="15" fill="rgb(216,169,33)" fg:x="323" fg:w="6"/><text x="34.0366%" y="1359.50"></text></g><g><title>databend-query`parking_lot::condvar::Condvar::wait_until_internal (6 samples, 0.63%)</title><rect x="33.7866%" y="1333" width="0.6276%" height="15" fill="rgb(233,80,24)" fg:x="323" fg:w="6"/><text x="34.0366%" y="1343.50"></text></g><g><title>databend-query`parking_lot_core::parking_lot::park (6 samples, 0.63%)</title><rect x="33.7866%" y="1317" width="0.6276%" height="15" fill="rgb(213,179,31)" fg:x="323" fg:w="6"/><text x="34.0366%" y="1327.50"></text></g><g><title>databend-query`parking_lot_core::parking_lot::park::_{{closure}} (6 samples, 0.63%)</title><rect x="33.7866%" y="1301" width="0.6276%" height="15" fill="rgb(209,19,5)" fg:x="323" fg:w="6"/><text x="34.0366%" y="1311.50"></text></g><g><title>databend-query`core::ops::function::FnOnce::call_once (2 samples, 0.21%)</title><rect x="34.2050%" y="1285" width="0.2092%" height="15" fill="rgb(219,18,35)" fg:x="327" fg:w="2"/><text x="34.4550%" y="1295.50"></text></g><g><title>databend-query`parking_lot::condvar::Condvar::wait_until_internal::_{{closure}} (2 samples, 0.21%)</title><rect x="34.2050%" y="1269" width="0.2092%" height="15" fill="rgb(209,169,16)" fg:x="327" fg:w="2"/><text x="34.4550%" y="1279.50"></text></g><g><title>databend-query`core::sync::atomic::atomic_load (1 samples, 0.10%)</title><rect x="34.3096%" y="1253" width="0.1046%" height="15" fill="rgb(245,90,51)" fg:x="328" fg:w="1"/><text x="34.5596%" y="1263.50"></text></g><g><title>databend-query`databend_query::pipelines::new::executor::executor_tasks::ExecutorTasksQueue::steal_task_to_context (11 samples, 1.15%)</title><rect x="33.4728%" y="1397" width="1.1506%" height="15" fill="rgb(220,99,45)" fg:x="320" fg:w="11"/><text x="33.7228%" y="1407.50"></text></g><g><title>databend-query`databend_query::pipelines::new::executor::executor_notify::WorkersNotify::wait (11 samples, 1.15%)</title><rect x="33.4728%" y="1381" width="1.1506%" height="15" fill="rgb(249,89,25)" fg:x="320" fg:w="11"/><text x="33.7228%" y="1391.50"></text></g><g><title>databend-query`common_base::infallible::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.21%)</title><rect x="34.4142%" y="1365" width="0.2092%" height="15" fill="rgb(239,193,0)" fg:x="329" fg:w="2"/><text x="34.6642%" y="1375.50"></text></g><g><title>databend-query`lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.21%)</title><rect x="34.4142%" y="1349" width="0.2092%" height="15" fill="rgb(231,126,1)" fg:x="329" fg:w="2"/><text x="34.6642%" y="1359.50"></text></g><g><title>databend-query`&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.21%)</title><rect x="34.4142%" y="1333" width="0.2092%" height="15" fill="rgb(243,166,3)" fg:x="329" fg:w="2"/><text x="34.6642%" y="1343.50"></text></g><g><title>databend-query`core::sync::atomic::AtomicU8::compare_exchange_weak (2 samples, 0.21%)</title><rect x="34.4142%" y="1317" width="0.2092%" height="15" fill="rgb(223,22,34)" fg:x="329" fg:w="2"/><text x="34.6642%" y="1327.50"></text></g><g><title>databend-query`core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.21%)</title><rect x="34.4142%" y="1301" width="0.2092%" height="15" fill="rgb(251,52,51)" fg:x="329" fg:w="2"/><text x="34.6642%" y="1311.50"></text></g><g><title>databend-query`DYLD-STUB$$memcpy (1 samples, 0.10%)</title><rect x="34.6234%" y="1381" width="0.1046%" height="15" fill="rgb(221,165,28)" fg:x="331" fg:w="1"/><text x="34.8734%" y="1391.50"></text></g><g><title>databend-query`core::mem::replace (1 samples, 0.10%)</title><rect x="34.7280%" y="1381" width="0.1046%" height="15" fill="rgb(218,121,47)" fg:x="332" fg:w="1"/><text x="34.9780%" y="1391.50"></text></g><g><title>databend-query`core::ptr::write (1 samples, 0.10%)</title><rect x="34.7280%" y="1365" width="0.1046%" height="15" fill="rgb(209,120,9)" fg:x="332" fg:w="1"/><text x="34.9780%" y="1375.50"></text></g><g><title>databend-query`core::ptr::read (1 samples, 0.10%)</title><rect x="34.8326%" y="1381" width="0.1046%" height="15" fill="rgb(236,68,12)" fg:x="333" fg:w="1"/><text x="35.0826%" y="1391.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;databend_query::pipelines::new::processors::processor::ProcessorPtr&gt; (1 samples, 0.10%)</title><rect x="34.9372%" y="1365" width="0.1046%" height="15" fill="rgb(225,194,26)" fg:x="334" fg:w="1"/><text x="35.1872%" y="1375.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::cell::UnsafeCell&lt;alloc::boxed::Box&lt;dyn databend_query::pipelines::new::processors::processor::Processor&gt;&gt;&gt;&gt; (1 samples, 0.10%)</title><rect x="34.9372%" y="1349" width="0.1046%" height="15" fill="rgb(231,84,39)" fg:x="334" fg:w="1"/><text x="35.1872%" y="1359.50"></text></g><g><title>databend-query`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="34.9372%" y="1333" width="0.1046%" height="15" fill="rgb(210,11,45)" fg:x="334" fg:w="1"/><text x="35.1872%" y="1343.50"></text></g><g><title>databend-query`databend_query::pipelines::new::processors::processor::ProcessorPtr::id (1 samples, 0.10%)</title><rect x="35.0418%" y="1365" width="0.1046%" height="15" fill="rgb(224,54,52)" fg:x="335" fg:w="1"/><text x="35.2918%" y="1375.50"></text></g><g><title>databend-query`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="35.0418%" y="1349" width="0.1046%" height="15" fill="rgb(238,102,14)" fg:x="335" fg:w="1"/><text x="35.2918%" y="1359.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.10%)</title><rect x="35.0418%" y="1333" width="0.1046%" height="15" fill="rgb(243,160,52)" fg:x="335" fg:w="1"/><text x="35.2918%" y="1343.50"></text></g><g><title>databend-query`&lt;databend_query::pipelines::new::executor::pipeline_pulling_executor::PullingSink as databend_query::pipelines::new::processors::sinks::sync_sink::Sink&gt;::consume (1 samples, 0.10%)</title><rect x="35.1464%" y="1349" width="0.1046%" height="15" fill="rgb(216,114,19)" fg:x="336" fg:w="1"/><text x="35.3964%" y="1359.50"></text></g><g><title>databend-query`std::sync::mpsc::blocking::SignalToken::signal (1 samples, 0.10%)</title><rect x="35.3556%" y="1285" width="0.1046%" height="15" fill="rgb(244,166,37)" fg:x="338" fg:w="1"/><text x="35.6056%" y="1295.50"></text></g><g><title>databend-query`std::sync::mpsc::sync::Buffer&lt;T&gt;::enqueue (1 samples, 0.10%)</title><rect x="35.4603%" y="1285" width="0.1046%" height="15" fill="rgb(246,29,44)" fg:x="339" fg:w="1"/><text x="35.7103%" y="1295.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.10%)</title><rect x="35.4603%" y="1269" width="0.1046%" height="15" fill="rgb(215,56,53)" fg:x="339" fg:w="1"/><text x="35.7103%" y="1279.50"></text></g><g><title>databend-query`core::slice::index::_&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.10%)</title><rect x="35.4603%" y="1253" width="0.1046%" height="15" fill="rgb(217,60,2)" fg:x="339" fg:w="1"/><text x="35.7103%" y="1263.50"></text></g><g><title>databend-query`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.10%)</title><rect x="35.4603%" y="1237" width="0.1046%" height="15" fill="rgb(207,26,24)" fg:x="339" fg:w="1"/><text x="35.7103%" y="1247.50"></text></g><g><title>databend-query`&lt;databend_query::pipelines::new::processors::sinks::sync_sink::Sinker&lt;T&gt; as databend_query::pipelines::new::processors::processor::Processor&gt;::process (19 samples, 1.99%)</title><rect x="35.2510%" y="1349" width="1.9874%" height="15" fill="rgb(252,210,15)" fg:x="337" fg:w="19"/><text x="35.5010%" y="1359.50">d..</text></g><g><title>databend-query`&lt;databend_query::pipelines::new::executor::pipeline_pulling_executor::PullingSink as databend_query::pipelines::new::processors::sinks::sync_sink::Sink&gt;::consume (19 samples, 1.99%)</title><rect x="35.2510%" y="1333" width="1.9874%" height="15" fill="rgb(253,209,26)" fg:x="337" fg:w="19"/><text x="35.5010%" y="1343.50">d..</text></g><g><title>databend-query`std::sync::mpsc::SyncSender&lt;T&gt;::send (19 samples, 1.99%)</title><rect x="35.2510%" y="1317" width="1.9874%" height="15" fill="rgb(238,170,14)" fg:x="337" fg:w="19"/><text x="35.5010%" y="1327.50">d..</text></g><g><title>databend-query`std::sync::mpsc::sync::Packet&lt;T&gt;::send (19 samples, 1.99%)</title><rect x="35.2510%" y="1301" width="1.9874%" height="15" fill="rgb(216,178,15)" fg:x="337" fg:w="19"/><text x="35.5010%" y="1311.50">d..</text></g><g><title>databend-query`std::sync::mpsc::sync::wakeup (16 samples, 1.67%)</title><rect x="35.5649%" y="1285" width="1.6736%" height="15" fill="rgb(250,197,2)" fg:x="340" fg:w="16"/><text x="35.8149%" y="1295.50"></text></g><g><title>databend-query`std::sync::mpsc::blocking::SignalToken::signal (16 samples, 1.67%)</title><rect x="35.5649%" y="1269" width="1.6736%" height="15" fill="rgb(212,70,42)" fg:x="340" fg:w="16"/><text x="35.8149%" y="1279.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (16 samples, 1.67%)</title><rect x="35.5649%" y="1253" width="1.6736%" height="15" fill="rgb(227,213,9)" fg:x="340" fg:w="16"/><text x="35.8149%" y="1263.50"></text></g><g><title>databend-query`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.10%)</title><rect x="37.2385%" y="1189" width="0.1046%" height="15" fill="rgb(245,99,25)" fg:x="356" fg:w="1"/><text x="37.4885%" y="1199.50"></text></g><g><title>databend-query`&lt;databend_query::pipelines::new::processors::sources::sync_source::SyncSourcer&lt;T&gt; as databend_query::pipelines::new::processors::processor::Processor&gt;::process (2 samples, 0.21%)</title><rect x="37.2385%" y="1349" width="0.2092%" height="15" fill="rgb(250,82,29)" fg:x="356" fg:w="2"/><text x="37.4885%" y="1359.50"></text></g><g><title>databend-query`&lt;databend_query::table_functions::numbers_table::NumbersSource as databend_query::pipelines::new::processors::sources::sync_source::SyncSource&gt;::generate (2 samples, 0.21%)</title><rect x="37.2385%" y="1333" width="0.2092%" height="15" fill="rgb(241,226,54)" fg:x="356" fg:w="2"/><text x="37.4885%" y="1343.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::collect (2 samples, 0.21%)</title><rect x="37.2385%" y="1317" width="0.2092%" height="15" fill="rgb(221,99,41)" fg:x="356" fg:w="2"/><text x="37.4885%" y="1327.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.21%)</title><rect x="37.2385%" y="1301" width="0.2092%" height="15" fill="rgb(213,90,21)" fg:x="356" fg:w="2"/><text x="37.4885%" y="1311.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.21%)</title><rect x="37.2385%" y="1285" width="0.2092%" height="15" fill="rgb(205,208,24)" fg:x="356" fg:w="2"/><text x="37.4885%" y="1295.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.21%)</title><rect x="37.2385%" y="1269" width="0.2092%" height="15" fill="rgb(246,31,12)" fg:x="356" fg:w="2"/><text x="37.4885%" y="1279.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.21%)</title><rect x="37.2385%" y="1253" width="0.2092%" height="15" fill="rgb(213,154,6)" fg:x="356" fg:w="2"/><text x="37.4885%" y="1263.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::for_each (2 samples, 0.21%)</title><rect x="37.2385%" y="1237" width="0.2092%" height="15" fill="rgb(222,163,29)" fg:x="356" fg:w="2"/><text x="37.4885%" y="1247.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::fold (2 samples, 0.21%)</title><rect x="37.2385%" y="1221" width="0.2092%" height="15" fill="rgb(227,201,8)" fg:x="356" fg:w="2"/><text x="37.4885%" y="1231.50"></text></g><g><title>databend-query`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.21%)</title><rect x="37.2385%" y="1205" width="0.2092%" height="15" fill="rgb(233,9,32)" fg:x="356" fg:w="2"/><text x="37.4885%" y="1215.50"></text></g><g><title>databend-query`&lt;u64 as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.10%)</title><rect x="37.3431%" y="1189" width="0.1046%" height="15" fill="rgb(217,54,24)" fg:x="357" fg:w="1"/><text x="37.5931%" y="1199.50"></text></g><g><title>databend-query`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.10%)</title><rect x="37.4477%" y="1317" width="0.1046%" height="15" fill="rgb(235,192,0)" fg:x="358" fg:w="1"/><text x="37.6977%" y="1327.50"></text></g><g><title>databend-query`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.10%)</title><rect x="37.5523%" y="1317" width="0.1046%" height="15" fill="rgb(235,45,9)" fg:x="359" fg:w="1"/><text x="37.8023%" y="1327.50"></text></g><g><title>databend-query`common_datavalues::columns::column_with_field::ColumnWithField::new (1 samples, 0.10%)</title><rect x="37.6569%" y="1317" width="0.1046%" height="15" fill="rgb(246,42,40)" fg:x="360" fg:w="1"/><text x="37.9069%" y="1327.50"></text></g><g><title>databend-query`core::mem::drop (2 samples, 0.21%)</title><rect x="37.7615%" y="1253" width="0.2092%" height="15" fill="rgb(248,111,24)" fg:x="361" fg:w="2"/><text x="38.0115%" y="1263.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;common_datavalues::data_schema::DataSchema&gt;&gt; (2 samples, 0.21%)</title><rect x="37.7615%" y="1237" width="0.2092%" height="15" fill="rgb(249,65,22)" fg:x="361" fg:w="2"/><text x="38.0115%" y="1247.50"></text></g><g><title>databend-query`&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.21%)</title><rect x="37.7615%" y="1221" width="0.2092%" height="15" fill="rgb(238,111,51)" fg:x="361" fg:w="2"/><text x="38.0115%" y="1231.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.21%)</title><rect x="37.7615%" y="1205" width="0.2092%" height="15" fill="rgb(250,118,22)" fg:x="361" fg:w="2"/><text x="38.0115%" y="1215.50"></text></g><g><title>databend-query`alloc::alloc::dealloc (2 samples, 0.21%)</title><rect x="37.7615%" y="1189" width="0.2092%" height="15" fill="rgb(234,84,26)" fg:x="361" fg:w="2"/><text x="38.0115%" y="1199.50"></text></g><g><title>databend-query`__rg_dealloc (2 samples, 0.21%)</title><rect x="37.7615%" y="1173" width="0.2092%" height="15" fill="rgb(243,172,12)" fg:x="361" fg:w="2"/><text x="38.0115%" y="1183.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.10%)</title><rect x="37.8661%" y="1157" width="0.1046%" height="15" fill="rgb(236,150,49)" fg:x="362" fg:w="1"/><text x="38.1161%" y="1167.50"></text></g><g><title>databend-query`_rjem_sdallocx (1 samples, 0.10%)</title><rect x="37.8661%" y="1141" width="0.1046%" height="15" fill="rgb(225,197,26)" fg:x="362" fg:w="1"/><text x="38.1161%" y="1151.50"></text></g><g><title>databend-query`_rjem_je_sdallocx_default (1 samples, 0.10%)</title><rect x="37.8661%" y="1125" width="0.1046%" height="15" fill="rgb(214,17,42)" fg:x="362" fg:w="1"/><text x="38.1161%" y="1135.50"></text></g><g><title>databend-query`_rjem_je_tcache_event_hard (1 samples, 0.10%)</title><rect x="37.8661%" y="1109" width="0.1046%" height="15" fill="rgb(224,165,40)" fg:x="362" fg:w="1"/><text x="38.1161%" y="1119.50"></text></g><g><title>databend-query`_rjem_je_tcache_bin_flush_small (1 samples, 0.10%)</title><rect x="37.8661%" y="1093" width="0.1046%" height="15" fill="rgb(246,100,4)" fg:x="362" fg:w="1"/><text x="38.1161%" y="1103.50"></text></g><g><title>databend-query`_rjem_je_arena_dalloc_bin_junked_locked (1 samples, 0.10%)</title><rect x="37.8661%" y="1077" width="0.1046%" height="15" fill="rgb(222,103,0)" fg:x="362" fg:w="1"/><text x="38.1161%" y="1087.50"></text></g><g><title>databend-query`arena_dalloc_bin_locked_impl (1 samples, 0.10%)</title><rect x="37.8661%" y="1061" width="0.1046%" height="15" fill="rgb(227,189,26)" fg:x="362" fg:w="1"/><text x="38.1161%" y="1071.50"></text></g><g><title>databend-query`arena_slab_reg_dalloc (1 samples, 0.10%)</title><rect x="37.8661%" y="1045" width="0.1046%" height="15" fill="rgb(214,202,17)" fg:x="362" fg:w="1"/><text x="38.1161%" y="1055.50"></text></g><g><title>databend-query`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.10%)</title><rect x="37.9707%" y="1205" width="0.1046%" height="15" fill="rgb(229,111,3)" fg:x="363" fg:w="1"/><text x="38.2207%" y="1215.50"></text></g><g><title>databend-query`core::option::Option&lt;T&gt;::take (1 samples, 0.10%)</title><rect x="37.9707%" y="1189" width="0.1046%" height="15" fill="rgb(229,172,15)" fg:x="363" fg:w="1"/><text x="38.2207%" y="1199.50"></text></g><g><title>databend-query`core::ptr::read (1 samples, 0.10%)</title><rect x="37.9707%" y="1173" width="0.1046%" height="15" fill="rgb(230,224,35)" fg:x="363" fg:w="1"/><text x="38.2207%" y="1183.50"></text></g><g><title>databend-query`alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::none (1 samples, 0.10%)</title><rect x="38.0753%" y="1205" width="0.1046%" height="15" fill="rgb(251,141,6)" fg:x="364" fg:w="1"/><text x="38.3253%" y="1215.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,alloc::string::String&gt;&gt; (3 samples, 0.31%)</title><rect x="37.9707%" y="1237" width="0.3138%" height="15" fill="rgb(225,208,6)" fg:x="363" fg:w="3"/><text x="38.2207%" y="1247.50"></text></g><g><title>databend-query`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.31%)</title><rect x="37.9707%" y="1221" width="0.3138%" height="15" fill="rgb(246,181,16)" fg:x="363" fg:w="3"/><text x="38.2207%" y="1231.50"></text></g><g><title>databend-query`core::mem::drop (1 samples, 0.10%)</title><rect x="38.1799%" y="1205" width="0.1046%" height="15" fill="rgb(227,129,36)" fg:x="365" fg:w="1"/><text x="38.4299%" y="1215.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,alloc::string::String&gt;&gt; (1 samples, 0.10%)</title><rect x="38.1799%" y="1189" width="0.1046%" height="15" fill="rgb(248,117,24)" fg:x="365" fg:w="1"/><text x="38.4299%" y="1199.50"></text></g><g><title>databend-query`&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="38.1799%" y="1173" width="0.1046%" height="15" fill="rgb(214,185,35)" fg:x="365" fg:w="1"/><text x="38.4299%" y="1183.50"></text></g><g><title>databend-query`alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (1 samples, 0.10%)</title><rect x="38.1799%" y="1157" width="0.1046%" height="15" fill="rgb(236,150,34)" fg:x="365" fg:w="1"/><text x="38.4299%" y="1167.50"></text></g><g><title>databend-query`alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (1 samples, 0.10%)</title><rect x="38.1799%" y="1141" width="0.1046%" height="15" fill="rgb(243,228,27)" fg:x="365" fg:w="1"/><text x="38.4299%" y="1151.50"></text></g><g><title>databend-query`&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.10%)</title><rect x="38.1799%" y="1125" width="0.1046%" height="15" fill="rgb(245,77,44)" fg:x="365" fg:w="1"/><text x="38.4299%" y="1135.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;common_datavalues::data_field::DataField&gt;&gt; (3 samples, 0.31%)</title><rect x="38.2845%" y="1237" width="0.3138%" height="15" fill="rgb(235,214,42)" fg:x="366" fg:w="3"/><text x="38.5345%" y="1247.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.21%)</title><rect x="38.5983%" y="1221" width="0.2092%" height="15" fill="rgb(221,74,3)" fg:x="369" fg:w="2"/><text x="38.8483%" y="1231.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;[common_datavalues::data_field::DataField]&gt; (2 samples, 0.21%)</title><rect x="38.5983%" y="1205" width="0.2092%" height="15" fill="rgb(206,121,29)" fg:x="369" fg:w="2"/><text x="38.8483%" y="1215.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_datavalues::data_field::DataField&gt; (1 samples, 0.10%)</title><rect x="38.7029%" y="1189" width="0.1046%" height="15" fill="rgb(249,131,53)" fg:x="370" fg:w="1"/><text x="38.9529%" y="1199.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.10%)</title><rect x="38.7029%" y="1173" width="0.1046%" height="15" fill="rgb(236,170,29)" fg:x="370" fg:w="1"/><text x="38.9529%" y="1183.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.10%)</title><rect x="38.7029%" y="1157" width="0.1046%" height="15" fill="rgb(247,96,15)" fg:x="370" fg:w="1"/><text x="38.9529%" y="1167.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.10%)</title><rect x="38.7029%" y="1141" width="0.1046%" height="15" fill="rgb(211,210,7)" fg:x="370" fg:w="1"/><text x="38.9529%" y="1151.50"></text></g><g><title>databend-query`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="38.7029%" y="1125" width="0.1046%" height="15" fill="rgb(240,88,50)" fg:x="370" fg:w="1"/><text x="38.9529%" y="1135.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.10%)</title><rect x="38.7029%" y="1109" width="0.1046%" height="15" fill="rgb(209,229,26)" fg:x="370" fg:w="1"/><text x="38.9529%" y="1119.50"></text></g><g><title>databend-query`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.10%)</title><rect x="38.7029%" y="1093" width="0.1046%" height="15" fill="rgb(210,68,23)" fg:x="370" fg:w="1"/><text x="38.9529%" y="1103.50"></text></g><g><title>databend-query`&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (1 samples, 0.10%)</title><rect x="38.7029%" y="1077" width="0.1046%" height="15" fill="rgb(229,180,13)" fg:x="370" fg:w="1"/><text x="38.9529%" y="1087.50"></text></g><g><title>databend-query`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.10%)</title><rect x="38.8075%" y="1189" width="0.1046%" height="15" fill="rgb(236,53,44)" fg:x="371" fg:w="1"/><text x="39.0575%" y="1199.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.10%)</title><rect x="38.9121%" y="1189" width="0.1046%" height="15" fill="rgb(244,214,29)" fg:x="372" fg:w="1"/><text x="39.1621%" y="1199.50"></text></g><g><title>databend-query`alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="38.9121%" y="1173" width="0.1046%" height="15" fill="rgb(220,75,29)" fg:x="372" fg:w="1"/><text x="39.1621%" y="1183.50"></text></g><g><title>databend-query`__rg_dealloc (1 samples, 0.10%)</title><rect x="38.9121%" y="1157" width="0.1046%" height="15" fill="rgb(214,183,37)" fg:x="372" fg:w="1"/><text x="39.1621%" y="1167.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.10%)</title><rect x="38.9121%" y="1141" width="0.1046%" height="15" fill="rgb(239,117,29)" fg:x="372" fg:w="1"/><text x="39.1621%" y="1151.50"></text></g><g><title>databend-query`_rjem_sdallocx (1 samples, 0.10%)</title><rect x="38.9121%" y="1125" width="0.1046%" height="15" fill="rgb(237,171,35)" fg:x="372" fg:w="1"/><text x="39.1621%" y="1135.50"></text></g><g><title>databend-query`_rjem_je_sdallocx_default (1 samples, 0.10%)</title><rect x="38.9121%" y="1109" width="0.1046%" height="15" fill="rgb(229,178,53)" fg:x="372" fg:w="1"/><text x="39.1621%" y="1119.50"></text></g><g><title>databend-query`_rjem_je_tcache_bin_flush_small (1 samples, 0.10%)</title><rect x="38.9121%" y="1093" width="0.1046%" height="15" fill="rgb(210,102,19)" fg:x="372" fg:w="1"/><text x="39.1621%" y="1103.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;common_datavalues::data_schema::DataSchema&gt;&gt; (13 samples, 1.36%)</title><rect x="37.7615%" y="1301" width="1.3598%" height="15" fill="rgb(235,127,22)" fg:x="361" fg:w="13"/><text x="38.0115%" y="1311.50"></text></g><g><title>databend-query`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.36%)</title><rect x="37.7615%" y="1285" width="1.3598%" height="15" fill="rgb(244,31,31)" fg:x="361" fg:w="13"/><text x="38.0115%" y="1295.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (13 samples, 1.36%)</title><rect x="37.7615%" y="1269" width="1.3598%" height="15" fill="rgb(231,43,21)" fg:x="361" fg:w="13"/><text x="38.0115%" y="1279.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_datavalues::data_schema::DataSchema&gt; (11 samples, 1.15%)</title><rect x="37.9707%" y="1253" width="1.1506%" height="15" fill="rgb(217,131,35)" fg:x="363" fg:w="11"/><text x="38.2207%" y="1263.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;common_datavalues::data_field::DataField&gt;&gt; (5 samples, 0.52%)</title><rect x="38.5983%" y="1237" width="0.5230%" height="15" fill="rgb(221,149,4)" fg:x="369" fg:w="5"/><text x="38.8483%" y="1247.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;common_datavalues::data_field::DataField&gt;&gt; (3 samples, 0.31%)</title><rect x="38.8075%" y="1221" width="0.3138%" height="15" fill="rgb(232,170,28)" fg:x="371" fg:w="3"/><text x="39.0575%" y="1231.50"></text></g><g><title>databend-query`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.31%)</title><rect x="38.8075%" y="1205" width="0.3138%" height="15" fill="rgb(238,56,10)" fg:x="371" fg:w="3"/><text x="39.0575%" y="1215.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.10%)</title><rect x="39.0167%" y="1189" width="0.1046%" height="15" fill="rgb(235,196,14)" fg:x="373" fg:w="1"/><text x="39.2667%" y="1199.50"></text></g><g><title>databend-query`core::alloc::layout::Layout::array (1 samples, 0.10%)</title><rect x="39.0167%" y="1173" width="0.1046%" height="15" fill="rgb(216,45,48)" fg:x="373" fg:w="1"/><text x="39.2667%" y="1183.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.10%)</title><rect x="39.2259%" y="1173" width="0.1046%" height="15" fill="rgb(238,213,17)" fg:x="375" fg:w="1"/><text x="39.4759%" y="1183.50"></text></g><g><title>databend-query`_rjem_sdallocx (1 samples, 0.10%)</title><rect x="39.3305%" y="1093" width="0.1046%" height="15" fill="rgb(212,13,2)" fg:x="376" fg:w="1"/><text x="39.5805%" y="1103.50"></text></g><g><title>databend-query`_rjem_je_sdallocx_default (1 samples, 0.10%)</title><rect x="39.3305%" y="1077" width="0.1046%" height="15" fill="rgb(240,114,20)" fg:x="376" fg:w="1"/><text x="39.5805%" y="1087.50"></text></g><g><title>databend-query`core::mem::drop (3 samples, 0.31%)</title><rect x="39.2259%" y="1205" width="0.3138%" height="15" fill="rgb(228,41,40)" fg:x="375" fg:w="3"/><text x="39.4759%" y="1215.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;dyn common_datavalues::columns::column::Column&gt;&gt; (3 samples, 0.31%)</title><rect x="39.2259%" y="1189" width="0.3138%" height="15" fill="rgb(244,132,35)" fg:x="375" fg:w="3"/><text x="39.4759%" y="1199.50"></text></g><g><title>databend-query`&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.21%)</title><rect x="39.3305%" y="1173" width="0.2092%" height="15" fill="rgb(253,189,4)" fg:x="376" fg:w="2"/><text x="39.5805%" y="1183.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.21%)</title><rect x="39.3305%" y="1157" width="0.2092%" height="15" fill="rgb(224,37,19)" fg:x="376" fg:w="2"/><text x="39.5805%" y="1167.50"></text></g><g><title>databend-query`alloc::alloc::dealloc (2 samples, 0.21%)</title><rect x="39.3305%" y="1141" width="0.2092%" height="15" fill="rgb(235,223,18)" fg:x="376" fg:w="2"/><text x="39.5805%" y="1151.50"></text></g><g><title>databend-query`__rg_dealloc (2 samples, 0.21%)</title><rect x="39.3305%" y="1125" width="0.2092%" height="15" fill="rgb(235,163,25)" fg:x="376" fg:w="2"/><text x="39.5805%" y="1135.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::dealloc (2 samples, 0.21%)</title><rect x="39.3305%" y="1109" width="0.2092%" height="15" fill="rgb(217,145,28)" fg:x="376" fg:w="2"/><text x="39.5805%" y="1119.50"></text></g><g><title>databend-query`ticker_trytick (1 samples, 0.10%)</title><rect x="39.4351%" y="1093" width="0.1046%" height="15" fill="rgb(223,223,32)" fg:x="377" fg:w="1"/><text x="39.6851%" y="1103.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;arrow2::buffer::bytes::Bytes&lt;u64&gt;&gt;&gt; (1 samples, 0.10%)</title><rect x="39.5397%" y="1173" width="0.1046%" height="15" fill="rgb(227,189,39)" fg:x="378" fg:w="1"/><text x="39.7897%" y="1183.50"></text></g><g><title>databend-query`core::mem::drop (1 samples, 0.10%)</title><rect x="39.6444%" y="1109" width="0.1046%" height="15" fill="rgb(248,10,22)" fg:x="379" fg:w="1"/><text x="39.8944%" y="1119.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;arrow2::buffer::bytes::Bytes&lt;u64&gt;&gt;&gt; (1 samples, 0.10%)</title><rect x="39.6444%" y="1093" width="0.1046%" height="15" fill="rgb(248,46,39)" fg:x="379" fg:w="1"/><text x="39.8944%" y="1103.50"></text></g><g><title>databend-query`&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="39.6444%" y="1077" width="0.1046%" height="15" fill="rgb(248,113,48)" fg:x="379" fg:w="1"/><text x="39.8944%" y="1087.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.10%)</title><rect x="39.6444%" y="1061" width="0.1046%" height="15" fill="rgb(245,16,25)" fg:x="379" fg:w="1"/><text x="39.8944%" y="1071.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="39.7490%" y="1061" width="0.1046%" height="15" fill="rgb(249,152,16)" fg:x="380" fg:w="1"/><text x="39.9990%" y="1071.50"></text></g><g><title>databend-query`core::mem::take (1 samples, 0.10%)</title><rect x="39.8536%" y="1061" width="0.1046%" height="15" fill="rgb(250,16,1)" fg:x="381" fg:w="1"/><text x="40.1036%" y="1071.50"></text></g><g><title>databend-query`core::ptr::read (1 samples, 0.10%)</title><rect x="39.8536%" y="1045" width="0.1046%" height="15" fill="rgb(249,138,3)" fg:x="381" fg:w="1"/><text x="40.1036%" y="1055.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.10%)</title><rect x="40.0628%" y="965" width="0.1046%" height="15" fill="rgb(227,71,41)" fg:x="383" fg:w="1"/><text x="40.3128%" y="975.50"></text></g><g><title>databend-query`_rjem_sdallocx (1 samples, 0.10%)</title><rect x="40.0628%" y="949" width="0.1046%" height="15" fill="rgb(209,184,23)" fg:x="383" fg:w="1"/><text x="40.3128%" y="959.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.31%)</title><rect x="39.9582%" y="1013" width="0.3138%" height="15" fill="rgb(223,215,31)" fg:x="382" fg:w="3"/><text x="40.2082%" y="1023.50"></text></g><g><title>databend-query`alloc::alloc::dealloc (2 samples, 0.21%)</title><rect x="40.0628%" y="997" width="0.2092%" height="15" fill="rgb(210,146,28)" fg:x="383" fg:w="2"/><text x="40.3128%" y="1007.50"></text></g><g><title>databend-query`__rg_dealloc (2 samples, 0.21%)</title><rect x="40.0628%" y="981" width="0.2092%" height="15" fill="rgb(209,183,41)" fg:x="383" fg:w="2"/><text x="40.3128%" y="991.50"></text></g><g><title>databend-query`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.10%)</title><rect x="40.1674%" y="965" width="0.1046%" height="15" fill="rgb(209,224,45)" fg:x="384" fg:w="1"/><text x="40.4174%" y="975.50"></text></g><g><title>databend-query`arrow2::buffer::foreign::MaybeForeign&lt;T&gt;::drop_local (6 samples, 0.63%)</title><rect x="39.7490%" y="1077" width="0.6276%" height="15" fill="rgb(224,209,51)" fg:x="380" fg:w="6"/><text x="39.9990%" y="1087.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u64&gt;&gt; (4 samples, 0.42%)</title><rect x="39.9582%" y="1061" width="0.4184%" height="15" fill="rgb(223,17,39)" fg:x="382" fg:w="4"/><text x="40.2082%" y="1071.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u64&gt;&gt; (4 samples, 0.42%)</title><rect x="39.9582%" y="1045" width="0.4184%" height="15" fill="rgb(234,204,37)" fg:x="382" fg:w="4"/><text x="40.2082%" y="1055.50"></text></g><g><title>databend-query`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.42%)</title><rect x="39.9582%" y="1029" width="0.4184%" height="15" fill="rgb(236,120,5)" fg:x="382" fg:w="4"/><text x="40.2082%" y="1039.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.10%)</title><rect x="40.2720%" y="1013" width="0.1046%" height="15" fill="rgb(248,97,27)" fg:x="385" fg:w="1"/><text x="40.5220%" y="1023.50"></text></g><g><title>databend-query`core::num::_&lt;impl usize&gt;::checked_mul (1 samples, 0.10%)</title><rect x="40.2720%" y="997" width="0.1046%" height="15" fill="rgb(240,66,17)" fg:x="385" fg:w="1"/><text x="40.5220%" y="1007.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (8 samples, 0.84%)</title><rect x="39.6444%" y="1125" width="0.8368%" height="15" fill="rgb(210,79,3)" fg:x="379" fg:w="8"/><text x="39.8944%" y="1135.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;arrow2::buffer::bytes::Bytes&lt;u64&gt;&gt; (7 samples, 0.73%)</title><rect x="39.7490%" y="1109" width="0.7322%" height="15" fill="rgb(214,176,27)" fg:x="380" fg:w="7"/><text x="39.9990%" y="1119.50"></text></g><g><title>databend-query`&lt;arrow2::buffer::bytes::Bytes&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.73%)</title><rect x="39.7490%" y="1093" width="0.7322%" height="15" fill="rgb(235,185,3)" fg:x="380" fg:w="7"/><text x="39.9990%" y="1103.50"></text></g><g><title>databend-query`core::mem::take (1 samples, 0.10%)</title><rect x="40.3766%" y="1077" width="0.1046%" height="15" fill="rgb(227,24,12)" fg:x="386" fg:w="1"/><text x="40.6266%" y="1087.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (13 samples, 1.36%)</title><rect x="39.2259%" y="1221" width="1.3598%" height="15" fill="rgb(252,169,48)" fg:x="375" fg:w="13"/><text x="39.4759%" y="1231.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;dyn common_datavalues::columns::column::Column&gt; (10 samples, 1.05%)</title><rect x="39.5397%" y="1205" width="1.0460%" height="15" fill="rgb(212,65,1)" fg:x="378" fg:w="10"/><text x="39.7897%" y="1215.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_datavalues::columns::primitive::PrimitiveColumn&lt;u64&gt;&gt; (10 samples, 1.05%)</title><rect x="39.5397%" y="1189" width="1.0460%" height="15" fill="rgb(242,39,24)" fg:x="378" fg:w="10"/><text x="39.7897%" y="1199.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;arrow2::buffer::immutable::Buffer&lt;u64&gt;&gt; (9 samples, 0.94%)</title><rect x="39.6444%" y="1173" width="0.9414%" height="15" fill="rgb(249,32,23)" fg:x="379" fg:w="9"/><text x="39.8944%" y="1183.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;arrow2::buffer::bytes::Bytes&lt;u64&gt;&gt;&gt; (9 samples, 0.94%)</title><rect x="39.6444%" y="1157" width="0.9414%" height="15" fill="rgb(251,195,23)" fg:x="379" fg:w="9"/><text x="39.8944%" y="1167.50"></text></g><g><title>databend-query`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.94%)</title><rect x="39.6444%" y="1141" width="0.9414%" height="15" fill="rgb(236,174,8)" fg:x="379" fg:w="9"/><text x="39.8944%" y="1151.50"></text></g><g><title>databend-query`core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.10%)</title><rect x="40.4812%" y="1125" width="0.1046%" height="15" fill="rgb(220,197,8)" fg:x="387" fg:w="1"/><text x="40.7312%" y="1135.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.57%)</title><rect x="39.1213%" y="1285" width="1.5690%" height="15" fill="rgb(240,108,37)" fg:x="374" fg:w="15"/><text x="39.3713%" y="1295.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;dyn common_datavalues::columns::column::Column&gt;]&gt; (15 samples, 1.57%)</title><rect x="39.1213%" y="1269" width="1.5690%" height="15" fill="rgb(232,176,24)" fg:x="374" fg:w="15"/><text x="39.3713%" y="1279.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn common_datavalues::columns::column::Column&gt;&gt; (15 samples, 1.57%)</title><rect x="39.1213%" y="1253" width="1.5690%" height="15" fill="rgb(243,35,29)" fg:x="374" fg:w="15"/><text x="39.3713%" y="1263.50"></text></g><g><title>databend-query`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.57%)</title><rect x="39.1213%" y="1237" width="1.5690%" height="15" fill="rgb(210,37,18)" fg:x="374" fg:w="15"/><text x="39.3713%" y="1247.50"></text></g><g><title>databend-query`core::sync::atomic::atomic_sub (1 samples, 0.10%)</title><rect x="40.5858%" y="1221" width="0.1046%" height="15" fill="rgb(224,184,40)" fg:x="388" fg:w="1"/><text x="40.8358%" y="1231.50"></text></g><g><title>databend-query`__rg_dealloc (3 samples, 0.31%)</title><rect x="40.7950%" y="1221" width="0.3138%" height="15" fill="rgb(236,39,29)" fg:x="390" fg:w="3"/><text x="41.0450%" y="1231.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::dealloc (3 samples, 0.31%)</title><rect x="40.7950%" y="1205" width="0.3138%" height="15" fill="rgb(232,48,39)" fg:x="390" fg:w="3"/><text x="41.0450%" y="1215.50"></text></g><g><title>databend-query`_rjem_sdallocx (3 samples, 0.31%)</title><rect x="40.7950%" y="1189" width="0.3138%" height="15" fill="rgb(236,34,42)" fg:x="390" fg:w="3"/><text x="41.0450%" y="1199.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.52%)</title><rect x="40.6904%" y="1253" width="0.5230%" height="15" fill="rgb(243,106,37)" fg:x="389" fg:w="5"/><text x="40.9404%" y="1263.50"></text></g><g><title>databend-query`alloc::alloc::dealloc (4 samples, 0.42%)</title><rect x="40.7950%" y="1237" width="0.4184%" height="15" fill="rgb(218,96,6)" fg:x="390" fg:w="4"/><text x="41.0450%" y="1247.50"></text></g><g><title>databend-query`core::alloc::layout::Layout::align (1 samples, 0.10%)</title><rect x="41.1088%" y="1221" width="0.1046%" height="15" fill="rgb(235,130,12)" fg:x="393" fg:w="1"/><text x="41.3588%" y="1231.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_datablocks::data_block::DataBlock&gt; (34 samples, 3.56%)</title><rect x="37.7615%" y="1317" width="3.5565%" height="15" fill="rgb(231,95,0)" fg:x="361" fg:w="34"/><text x="38.0115%" y="1327.50">data..</text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;dyn common_datavalues::columns::column::Column&gt;&gt;&gt; (21 samples, 2.20%)</title><rect x="39.1213%" y="1301" width="2.1967%" height="15" fill="rgb(228,12,23)" fg:x="374" fg:w="21"/><text x="39.3713%" y="1311.50">d..</text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::sync::Arc&lt;dyn common_datavalues::columns::column::Column&gt;&gt;&gt; (6 samples, 0.63%)</title><rect x="40.6904%" y="1285" width="0.6276%" height="15" fill="rgb(216,12,1)" fg:x="389" fg:w="6"/><text x="40.9404%" y="1295.50"></text></g><g><title>databend-query`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.63%)</title><rect x="40.6904%" y="1269" width="0.6276%" height="15" fill="rgb(219,59,3)" fg:x="389" fg:w="6"/><text x="40.9404%" y="1279.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.10%)</title><rect x="41.2134%" y="1253" width="0.1046%" height="15" fill="rgb(215,208,46)" fg:x="394" fg:w="1"/><text x="41.4634%" y="1263.50"></text></g><g><title>databend-query`core::result::Result&lt;T,E&gt;::unwrap_unchecked (1 samples, 0.10%)</title><rect x="41.2134%" y="1237" width="0.1046%" height="15" fill="rgb(254,224,29)" fg:x="394" fg:w="1"/><text x="41.4634%" y="1247.50"></text></g><g><title>databend-query`&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.10%)</title><rect x="42.0502%" y="1301" width="0.1046%" height="15" fill="rgb(232,14,29)" fg:x="402" fg:w="1"/><text x="42.3002%" y="1311.50"></text></g><g><title>databend-query`core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.10%)</title><rect x="42.0502%" y="1285" width="0.1046%" height="15" fill="rgb(208,45,52)" fg:x="402" fg:w="1"/><text x="42.3002%" y="1295.50"></text></g><g><title>databend-query`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="42.1548%" y="1301" width="0.1046%" height="15" fill="rgb(234,191,28)" fg:x="403" fg:w="1"/><text x="42.4048%" y="1311.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.10%)</title><rect x="42.1548%" y="1285" width="0.1046%" height="15" fill="rgb(244,67,43)" fg:x="403" fg:w="1"/><text x="42.4048%" y="1295.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.10%)</title><rect x="42.1548%" y="1269" width="0.1046%" height="15" fill="rgb(236,189,24)" fg:x="403" fg:w="1"/><text x="42.4048%" y="1279.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.10%)</title><rect x="42.2594%" y="1285" width="0.1046%" height="15" fill="rgb(239,214,33)" fg:x="404" fg:w="1"/><text x="42.5094%" y="1295.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.10%)</title><rect x="42.3640%" y="1269" width="0.1046%" height="15" fill="rgb(226,176,41)" fg:x="405" fg:w="1"/><text x="42.6140%" y="1279.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.31%)</title><rect x="42.2594%" y="1301" width="0.3138%" height="15" fill="rgb(248,47,8)" fg:x="404" fg:w="3"/><text x="42.5094%" y="1311.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::as_ptr (2 samples, 0.21%)</title><rect x="42.3640%" y="1285" width="0.2092%" height="15" fill="rgb(218,81,44)" fg:x="405" fg:w="2"/><text x="42.6140%" y="1295.50"></text></g><g><title>databend-query`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.10%)</title><rect x="42.4686%" y="1269" width="0.1046%" height="15" fill="rgb(213,98,6)" fg:x="406" fg:w="1"/><text x="42.7186%" y="1279.50"></text></g><g><title>databend-query`_rjem_mallocx (6 samples, 0.63%)</title><rect x="42.6778%" y="1237" width="0.6276%" height="15" fill="rgb(222,85,22)" fg:x="408" fg:w="6"/><text x="42.9278%" y="1247.50"></text></g><g><title>databend-query`_rjem_je_tcache_bin_flush_small (1 samples, 0.10%)</title><rect x="43.2008%" y="1221" width="0.1046%" height="15" fill="rgb(239,46,39)" fg:x="413" fg:w="1"/><text x="43.4508%" y="1231.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::alloc (7 samples, 0.73%)</title><rect x="42.6778%" y="1253" width="0.7322%" height="15" fill="rgb(237,12,29)" fg:x="408" fg:w="7"/><text x="42.9278%" y="1263.50"></text></g><g><title>databend-query`common_base::base::runtime_tracker::ThreadTracker::alloc_memory (1 samples, 0.10%)</title><rect x="43.3054%" y="1237" width="0.1046%" height="15" fill="rgb(214,77,8)" fg:x="414" fg:w="1"/><text x="43.5554%" y="1247.50"></text></g><g><title>databend-query`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.10%)</title><rect x="43.3054%" y="1221" width="0.1046%" height="15" fill="rgb(217,168,37)" fg:x="414" fg:w="1"/><text x="43.5554%" y="1231.50"></text></g><g><title>databend-query`&lt;alloc::string::String as core::clone::Clone&gt;::clone (9 samples, 0.94%)</title><rect x="42.5732%" y="1285" width="0.9414%" height="15" fill="rgb(221,217,23)" fg:x="407" fg:w="9"/><text x="42.8232%" y="1295.50"></text></g><g><title>databend-query`__rg_alloc (9 samples, 0.94%)</title><rect x="42.5732%" y="1269" width="0.9414%" height="15" fill="rgb(243,229,36)" fg:x="407" fg:w="9"/><text x="42.8232%" y="1279.50"></text></g><g><title>databend-query`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.10%)</title><rect x="43.4100%" y="1253" width="0.1046%" height="15" fill="rgb(251,163,40)" fg:x="415" fg:w="1"/><text x="43.6600%" y="1263.50"></text></g><g><title>databend-query`&lt;common_datavalues::types::data_type::DataTypeImpl as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="43.5146%" y="1285" width="0.1046%" height="15" fill="rgb(237,222,12)" fg:x="416" fg:w="1"/><text x="43.7646%" y="1295.50"></text></g><g><title>databend-query`&lt;common_datavalues::types::type_primitive::PrimitiveDataType&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="43.5146%" y="1269" width="0.1046%" height="15" fill="rgb(248,132,6)" fg:x="416" fg:w="1"/><text x="43.7646%" y="1279.50"></text></g><g><title>databend-query`&lt;common_datavalues::data_field::DataField as core::clone::Clone&gt;::clone (11 samples, 1.15%)</title><rect x="42.5732%" y="1301" width="1.1506%" height="15" fill="rgb(227,167,50)" fg:x="407" fg:w="11"/><text x="42.8232%" y="1311.50"></text></g><g><title>databend-query`&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="43.6192%" y="1285" width="0.1046%" height="15" fill="rgb(242,84,37)" fg:x="417" fg:w="1"/><text x="43.8692%" y="1295.50"></text></g><g><title>databend-query`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.10%)</title><rect x="43.7238%" y="1301" width="0.1046%" height="15" fill="rgb(212,4,50)" fg:x="418" fg:w="1"/><text x="43.9738%" y="1311.50"></text></g><g><title>databend-query`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (1 samples, 0.10%)</title><rect x="43.8285%" y="1285" width="0.1046%" height="15" fill="rgb(230,228,32)" fg:x="419" fg:w="1"/><text x="44.0785%" y="1295.50"></text></g><g><title>databend-query`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.21%)</title><rect x="43.8285%" y="1301" width="0.2092%" height="15" fill="rgb(248,217,23)" fg:x="419" fg:w="2"/><text x="44.0785%" y="1311.50"></text></g><g><title>databend-query`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.10%)</title><rect x="43.9331%" y="1285" width="0.1046%" height="15" fill="rgb(238,197,32)" fg:x="420" fg:w="1"/><text x="44.1831%" y="1295.50"></text></g><g><title>databend-query`&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (1 samples, 0.10%)</title><rect x="44.0377%" y="1301" width="0.1046%" height="15" fill="rgb(236,106,1)" fg:x="421" fg:w="1"/><text x="44.2877%" y="1311.50"></text></g><g><title>databend-query`&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="44.1423%" y="1301" width="0.1046%" height="15" fill="rgb(219,228,13)" fg:x="422" fg:w="1"/><text x="44.3923%" y="1311.50"></text></g><g><title>databend-query`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="44.1423%" y="1285" width="0.1046%" height="15" fill="rgb(238,30,35)" fg:x="422" fg:w="1"/><text x="44.3923%" y="1295.50"></text></g><g><title>databend-query`&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="44.1423%" y="1269" width="0.1046%" height="15" fill="rgb(236,70,23)" fg:x="422" fg:w="1"/><text x="44.3923%" y="1279.50"></text></g><g><title>databend-query`&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="44.1423%" y="1253" width="0.1046%" height="15" fill="rgb(249,104,48)" fg:x="422" fg:w="1"/><text x="44.3923%" y="1263.50"></text></g><g><title>databend-query`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::sub (1 samples, 0.10%)</title><rect x="44.1423%" y="1237" width="0.1046%" height="15" fill="rgb(254,117,50)" fg:x="422" fg:w="1"/><text x="44.3923%" y="1247.50"></text></g><g><title>databend-query`DYLD-STUB$$memset (1 samples, 0.10%)</title><rect x="44.2469%" y="1301" width="0.1046%" height="15" fill="rgb(223,152,4)" fg:x="423" fg:w="1"/><text x="44.4969%" y="1311.50"></text></g><g><title>databend-query`_rjem_mallocx (3 samples, 0.31%)</title><rect x="44.3515%" y="1205" width="0.3138%" height="15" fill="rgb(245,6,2)" fg:x="424" fg:w="3"/><text x="44.6015%" y="1215.50"></text></g><g><title>databend-query`alloc::alloc::exchange_malloc (4 samples, 0.42%)</title><rect x="44.3515%" y="1301" width="0.4184%" height="15" fill="rgb(249,150,24)" fg:x="424" fg:w="4"/><text x="44.6015%" y="1311.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.42%)</title><rect x="44.3515%" y="1285" width="0.4184%" height="15" fill="rgb(228,185,42)" fg:x="424" fg:w="4"/><text x="44.6015%" y="1295.50"></text></g><g><title>databend-query`alloc::alloc::Global::alloc_impl (4 samples, 0.42%)</title><rect x="44.3515%" y="1269" width="0.4184%" height="15" fill="rgb(226,39,33)" fg:x="424" fg:w="4"/><text x="44.6015%" y="1279.50"></text></g><g><title>databend-query`alloc::alloc::alloc (4 samples, 0.42%)</title><rect x="44.3515%" y="1253" width="0.4184%" height="15" fill="rgb(221,166,19)" fg:x="424" fg:w="4"/><text x="44.6015%" y="1263.50"></text></g><g><title>databend-query`__rg_alloc (4 samples, 0.42%)</title><rect x="44.3515%" y="1237" width="0.4184%" height="15" fill="rgb(209,109,2)" fg:x="424" fg:w="4"/><text x="44.6015%" y="1247.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::alloc (4 samples, 0.42%)</title><rect x="44.3515%" y="1221" width="0.4184%" height="15" fill="rgb(252,216,26)" fg:x="424" fg:w="4"/><text x="44.6015%" y="1231.50"></text></g><g><title>databend-query`common_base::base::runtime_tracker::ThreadTracker::alloc_memory (1 samples, 0.10%)</title><rect x="44.6653%" y="1205" width="0.1046%" height="15" fill="rgb(227,173,36)" fg:x="427" fg:w="1"/><text x="44.9153%" y="1215.50"></text></g><g><title>databend-query`alloc::boxed::Box&lt;T,A&gt;::into_unique (1 samples, 0.10%)</title><rect x="44.7699%" y="1253" width="0.1046%" height="15" fill="rgb(209,90,7)" fg:x="428" fg:w="1"/><text x="45.0199%" y="1263.50"></text></g><g><title>databend-query`&lt;core::ptr::unique::Unique&lt;T&gt; as core::convert::From&lt;core::ptr::non_null::NonNull&lt;T&gt;&gt;&gt;::from (1 samples, 0.10%)</title><rect x="44.7699%" y="1237" width="0.1046%" height="15" fill="rgb(250,194,11)" fg:x="428" fg:w="1"/><text x="45.0199%" y="1247.50"></text></g><g><title>databend-query`alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (2 samples, 0.21%)</title><rect x="44.7699%" y="1269" width="0.2092%" height="15" fill="rgb(220,72,50)" fg:x="428" fg:w="2"/><text x="45.0199%" y="1279.50"></text></g><g><title>databend-query`core::ptr::read (1 samples, 0.10%)</title><rect x="44.8745%" y="1253" width="0.1046%" height="15" fill="rgb(222,106,48)" fg:x="429" fg:w="1"/><text x="45.1245%" y="1263.50"></text></g><g><title>databend-query`alloc::slice::_&lt;impl [T]&gt;::into_vec (3 samples, 0.31%)</title><rect x="44.7699%" y="1301" width="0.3138%" height="15" fill="rgb(216,220,45)" fg:x="428" fg:w="3"/><text x="45.0199%" y="1311.50"></text></g><g><title>databend-query`alloc::slice::hack::into_vec (3 samples, 0.31%)</title><rect x="44.7699%" y="1285" width="0.3138%" height="15" fill="rgb(234,112,18)" fg:x="428" fg:w="3"/><text x="45.0199%" y="1295.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (1 samples, 0.10%)</title><rect x="44.9791%" y="1269" width="0.1046%" height="15" fill="rgb(206,179,9)" fg:x="430" fg:w="1"/><text x="45.2291%" y="1279.50"></text></g><g><title>databend-query`core::ptr::unique::Unique&lt;T&gt;::new_unchecked (1 samples, 0.10%)</title><rect x="44.9791%" y="1253" width="0.1046%" height="15" fill="rgb(215,115,40)" fg:x="430" fg:w="1"/><text x="45.2291%" y="1263.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.21%)</title><rect x="45.0837%" y="1253" width="0.2092%" height="15" fill="rgb(222,69,34)" fg:x="431" fg:w="2"/><text x="45.3337%" y="1263.50"></text></g><g><title>databend-query`_rjem_mallocx (2 samples, 0.21%)</title><rect x="45.5021%" y="1157" width="0.2092%" height="15" fill="rgb(209,161,10)" fg:x="435" fg:w="2"/><text x="45.7521%" y="1167.50"></text></g><g><title>databend-query`alloc::alloc::Global::alloc_impl (4 samples, 0.42%)</title><rect x="45.3975%" y="1221" width="0.4184%" height="15" fill="rgb(217,6,38)" fg:x="434" fg:w="4"/><text x="45.6475%" y="1231.50"></text></g><g><title>databend-query`alloc::alloc::alloc (4 samples, 0.42%)</title><rect x="45.3975%" y="1205" width="0.4184%" height="15" fill="rgb(229,229,48)" fg:x="434" fg:w="4"/><text x="45.6475%" y="1215.50"></text></g><g><title>databend-query`__rg_alloc (4 samples, 0.42%)</title><rect x="45.3975%" y="1189" width="0.4184%" height="15" fill="rgb(225,21,28)" fg:x="434" fg:w="4"/><text x="45.6475%" y="1199.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::alloc (4 samples, 0.42%)</title><rect x="45.3975%" y="1173" width="0.4184%" height="15" fill="rgb(206,33,13)" fg:x="434" fg:w="4"/><text x="45.6475%" y="1183.50"></text></g><g><title>databend-query`witness_assert_depth_to_rank (1 samples, 0.10%)</title><rect x="45.7113%" y="1157" width="0.1046%" height="15" fill="rgb(242,178,17)" fg:x="437" fg:w="1"/><text x="45.9613%" y="1167.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.52%)</title><rect x="45.3975%" y="1237" width="0.5230%" height="15" fill="rgb(220,162,5)" fg:x="434" fg:w="5"/><text x="45.6475%" y="1247.50"></text></g><g><title>databend-query`alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="45.8159%" y="1221" width="0.1046%" height="15" fill="rgb(210,33,43)" fg:x="438" fg:w="1"/><text x="46.0659%" y="1231.50"></text></g><g><title>databend-query`alloc::raw_vec::alloc_guard (1 samples, 0.10%)</title><rect x="45.9205%" y="1237" width="0.1046%" height="15" fill="rgb(216,116,54)" fg:x="439" fg:w="1"/><text x="46.1705%" y="1247.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.84%)</title><rect x="45.2929%" y="1253" width="0.8368%" height="15" fill="rgb(249,92,24)" fg:x="433" fg:w="8"/><text x="45.5429%" y="1263.50"></text></g><g><title>databend-query`core::ptr::unique::Unique&lt;T&gt;::new_unchecked (1 samples, 0.10%)</title><rect x="46.0251%" y="1237" width="0.1046%" height="15" fill="rgb(231,189,14)" fg:x="440" fg:w="1"/><text x="46.2751%" y="1247.50"></text></g><g><title>databend-query`alloc::raw_vec::alloc_guard (1 samples, 0.10%)</title><rect x="46.1297%" y="1253" width="0.1046%" height="15" fill="rgb(230,8,41)" fg:x="441" fg:w="1"/><text x="46.3797%" y="1263.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T&gt;::with_capacity (12 samples, 1.26%)</title><rect x="45.0837%" y="1301" width="1.2552%" height="15" fill="rgb(249,7,27)" fg:x="431" fg:w="12"/><text x="45.3337%" y="1311.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 1.26%)</title><rect x="45.0837%" y="1285" width="1.2552%" height="15" fill="rgb(232,86,5)" fg:x="431" fg:w="12"/><text x="45.3337%" y="1295.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 1.26%)</title><rect x="45.0837%" y="1269" width="1.2552%" height="15" fill="rgb(224,175,18)" fg:x="431" fg:w="12"/><text x="45.3337%" y="1279.50"></text></g><g><title>databend-query`core::ptr::unique::Unique&lt;T&gt;::new_unchecked (1 samples, 0.10%)</title><rect x="46.2343%" y="1253" width="0.1046%" height="15" fill="rgb(220,129,12)" fg:x="442" fg:w="1"/><text x="46.4843%" y="1263.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.10%)</title><rect x="46.3389%" y="1253" width="0.1046%" height="15" fill="rgb(210,19,36)" fg:x="443" fg:w="1"/><text x="46.5889%" y="1263.50"></text></g><g><title>databend-query`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.10%)</title><rect x="46.4435%" y="1253" width="0.1046%" height="15" fill="rgb(219,96,14)" fg:x="444" fg:w="1"/><text x="46.6935%" y="1263.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (5 samples, 0.52%)</title><rect x="46.3389%" y="1285" width="0.5230%" height="15" fill="rgb(249,106,1)" fg:x="443" fg:w="5"/><text x="46.5889%" y="1295.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.52%)</title><rect x="46.3389%" y="1269" width="0.5230%" height="15" fill="rgb(249,155,20)" fg:x="443" fg:w="5"/><text x="46.5889%" y="1279.50"></text></g><g><title>databend-query`core::slice::raw::from_raw_parts (3 samples, 0.31%)</title><rect x="46.5481%" y="1253" width="0.3138%" height="15" fill="rgb(244,168,9)" fg:x="445" fg:w="3"/><text x="46.7981%" y="1263.50"></text></g><g><title>databend-query`core::ptr::slice_from_raw_parts (1 samples, 0.10%)</title><rect x="46.7573%" y="1237" width="0.1046%" height="15" fill="rgb(216,23,50)" fg:x="447" fg:w="1"/><text x="47.0073%" y="1247.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.10%)</title><rect x="46.8619%" y="1285" width="0.1046%" height="15" fill="rgb(224,219,20)" fg:x="448" fg:w="1"/><text x="47.1119%" y="1295.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.10%)</title><rect x="47.0711%" y="1269" width="0.1046%" height="15" fill="rgb(222,156,15)" fg:x="450" fg:w="1"/><text x="47.3211%" y="1279.50"></text></g><g><title>databend-query`&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (2 samples, 0.21%)</title><rect x="47.1757%" y="1237" width="0.2092%" height="15" fill="rgb(231,97,17)" fg:x="451" fg:w="2"/><text x="47.4257%" y="1247.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.21%)</title><rect x="47.1757%" y="1221" width="0.2092%" height="15" fill="rgb(218,70,48)" fg:x="451" fg:w="2"/><text x="47.4257%" y="1231.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::as_ptr (2 samples, 0.21%)</title><rect x="47.1757%" y="1205" width="0.2092%" height="15" fill="rgb(212,196,52)" fg:x="451" fg:w="2"/><text x="47.4257%" y="1215.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.10%)</title><rect x="47.2803%" y="1189" width="0.1046%" height="15" fill="rgb(243,203,18)" fg:x="452" fg:w="1"/><text x="47.5303%" y="1199.50"></text></g><g><title>databend-query`&lt;alloc::string::String as core::cmp::PartialEq&lt;str&gt;&gt;::eq (4 samples, 0.42%)</title><rect x="47.1757%" y="1253" width="0.4184%" height="15" fill="rgb(252,125,41)" fg:x="451" fg:w="4"/><text x="47.4257%" y="1263.50"></text></g><g><title>databend-query`core::str::traits::_&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.21%)</title><rect x="47.3849%" y="1237" width="0.2092%" height="15" fill="rgb(223,180,33)" fg:x="453" fg:w="2"/><text x="47.6349%" y="1247.50"></text></g><g><title>databend-query`core::cmp::impls::_&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.21%)</title><rect x="47.3849%" y="1221" width="0.2092%" height="15" fill="rgb(254,159,46)" fg:x="453" fg:w="2"/><text x="47.6349%" y="1231.50"></text></g><g><title>databend-query`core::slice::cmp::_&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.21%)</title><rect x="47.3849%" y="1205" width="0.2092%" height="15" fill="rgb(254,38,10)" fg:x="453" fg:w="2"/><text x="47.6349%" y="1215.50"></text></g><g><title>databend-query`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.21%)</title><rect x="47.3849%" y="1189" width="0.2092%" height="15" fill="rgb(208,217,32)" fg:x="453" fg:w="2"/><text x="47.6349%" y="1199.50"></text></g><g><title>databend-query`core::cmp::impls::_&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.52%)</title><rect x="47.1757%" y="1269" width="0.5230%" height="15" fill="rgb(221,120,13)" fg:x="451" fg:w="5"/><text x="47.4257%" y="1279.50"></text></g><g><title>databend-query`core::str::traits::_&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.10%)</title><rect x="47.5941%" y="1253" width="0.1046%" height="15" fill="rgb(246,54,52)" fg:x="455" fg:w="1"/><text x="47.8441%" y="1263.50"></text></g><g><title>databend-query`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.10%)</title><rect x="47.6987%" y="1253" width="0.1046%" height="15" fill="rgb(242,34,25)" fg:x="456" fg:w="1"/><text x="47.9487%" y="1263.50"></text></g><g><title>databend-query`common_datavalues::data_schema::DataSchema::index_of (9 samples, 0.94%)</title><rect x="46.9665%" y="1285" width="0.9414%" height="15" fill="rgb(247,209,9)" fg:x="449" fg:w="9"/><text x="47.2165%" y="1295.50"></text></g><g><title>databend-query`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.21%)</title><rect x="47.6987%" y="1269" width="0.2092%" height="15" fill="rgb(228,71,26)" fg:x="456" fg:w="2"/><text x="47.9487%" y="1279.50"></text></g><g><title>databend-query`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.10%)</title><rect x="47.8033%" y="1253" width="0.1046%" height="15" fill="rgb(222,145,49)" fg:x="457" fg:w="1"/><text x="48.0533%" y="1263.50"></text></g><g><title>databend-query`core::cmp::impls::_&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.21%)</title><rect x="47.9079%" y="1285" width="0.2092%" height="15" fill="rgb(218,121,17)" fg:x="458" fg:w="2"/><text x="48.1579%" y="1295.50"></text></g><g><title>databend-query`core::str::traits::_&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.21%)</title><rect x="47.9079%" y="1269" width="0.2092%" height="15" fill="rgb(244,50,7)" fg:x="458" fg:w="2"/><text x="48.1579%" y="1279.50"></text></g><g><title>databend-query`core::cmp::impls::_&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.10%)</title><rect x="48.0126%" y="1253" width="0.1046%" height="15" fill="rgb(246,229,37)" fg:x="459" fg:w="1"/><text x="48.2626%" y="1263.50"></text></g><g><title>databend-query`core::slice::cmp::_&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.10%)</title><rect x="48.0126%" y="1237" width="0.1046%" height="15" fill="rgb(225,18,5)" fg:x="459" fg:w="1"/><text x="48.2626%" y="1247.50"></text></g><g><title>databend-query`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.10%)</title><rect x="48.0126%" y="1221" width="0.1046%" height="15" fill="rgb(213,204,8)" fg:x="459" fg:w="1"/><text x="48.2626%" y="1231.50"></text></g><g><title>databend-query`common_datablocks::data_block::DataBlock::try_column_by_name (18 samples, 1.88%)</title><rect x="46.3389%" y="1301" width="1.8828%" height="15" fill="rgb(238,103,6)" fg:x="443" fg:w="18"/><text x="46.5889%" y="1311.50">d..</text></g><g><title>databend-query`core::str::traits::_&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.10%)</title><rect x="48.1172%" y="1285" width="0.1046%" height="15" fill="rgb(222,25,35)" fg:x="460" fg:w="1"/><text x="48.3672%" y="1295.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.10%)</title><rect x="48.2218%" y="1253" width="0.1046%" height="15" fill="rgb(213,203,35)" fg:x="461" fg:w="1"/><text x="48.4718%" y="1263.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.10%)</title><rect x="48.2218%" y="1237" width="0.1046%" height="15" fill="rgb(221,79,53)" fg:x="461" fg:w="1"/><text x="48.4718%" y="1247.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.31%)</title><rect x="48.2218%" y="1269" width="0.3138%" height="15" fill="rgb(243,200,35)" fg:x="461" fg:w="3"/><text x="48.4718%" y="1279.50"></text></g><g><title>databend-query`core::slice::raw::from_raw_parts (2 samples, 0.21%)</title><rect x="48.3264%" y="1253" width="0.2092%" height="15" fill="rgb(248,60,25)" fg:x="462" fg:w="2"/><text x="48.5764%" y="1263.50"></text></g><g><title>databend-query`core::ptr::const_ptr::_&lt;impl *const T&gt;::cast (1 samples, 0.10%)</title><rect x="48.4310%" y="1237" width="0.1046%" height="15" fill="rgb(227,53,46)" fg:x="463" fg:w="1"/><text x="48.6810%" y="1247.50"></text></g><g><title>databend-query`common_planners::plan_expression_action::ExpressionAction::column_name (4 samples, 0.42%)</title><rect x="48.2218%" y="1301" width="0.4184%" height="15" fill="rgb(216,120,32)" fg:x="461" fg:w="4"/><text x="48.4718%" y="1311.50"></text></g><g><title>databend-query`&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (4 samples, 0.42%)</title><rect x="48.2218%" y="1285" width="0.4184%" height="15" fill="rgb(220,134,1)" fg:x="461" fg:w="4"/><text x="48.4718%" y="1295.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.10%)</title><rect x="48.5356%" y="1269" width="0.1046%" height="15" fill="rgb(237,168,5)" fg:x="464" fg:w="1"/><text x="48.7856%" y="1279.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;core::option::Option&lt;common_datavalues::columns::column_with_field::ColumnWithField&gt;&gt; (2 samples, 0.21%)</title><rect x="48.6402%" y="1301" width="0.2092%" height="15" fill="rgb(231,100,33)" fg:x="465" fg:w="2"/><text x="48.8902%" y="1311.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_datavalues::columns::column_with_field::ColumnWithField&gt; (2 samples, 0.21%)</title><rect x="48.6402%" y="1285" width="0.2092%" height="15" fill="rgb(236,177,47)" fg:x="465" fg:w="2"/><text x="48.8902%" y="1295.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_datavalues::data_field::DataField&gt; (2 samples, 0.21%)</title><rect x="48.6402%" y="1269" width="0.2092%" height="15" fill="rgb(235,7,49)" fg:x="465" fg:w="2"/><text x="48.8902%" y="1279.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.10%)</title><rect x="48.7448%" y="1253" width="0.1046%" height="15" fill="rgb(232,119,22)" fg:x="466" fg:w="1"/><text x="48.9948%" y="1263.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.10%)</title><rect x="48.7448%" y="1237" width="0.1046%" height="15" fill="rgb(254,73,53)" fg:x="466" fg:w="1"/><text x="48.9948%" y="1247.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.10%)</title><rect x="48.7448%" y="1221" width="0.1046%" height="15" fill="rgb(251,35,20)" fg:x="466" fg:w="1"/><text x="48.9948%" y="1231.50"></text></g><g><title>databend-query`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="48.7448%" y="1205" width="0.1046%" height="15" fill="rgb(241,119,20)" fg:x="466" fg:w="1"/><text x="48.9948%" y="1215.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.10%)</title><rect x="48.7448%" y="1189" width="0.1046%" height="15" fill="rgb(207,102,14)" fg:x="466" fg:w="1"/><text x="48.9948%" y="1199.50"></text></g><g><title>databend-query`hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (2 samples, 0.21%)</title><rect x="48.8494%" y="1221" width="0.2092%" height="15" fill="rgb(248,201,50)" fg:x="467" fg:w="2"/><text x="49.0994%" y="1231.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.10%)</title><rect x="48.9540%" y="1205" width="0.1046%" height="15" fill="rgb(222,185,44)" fg:x="468" fg:w="1"/><text x="49.2040%" y="1215.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;&amp;str,&amp;common_datavalues::columns::column_with_field::ColumnWithField&gt;&gt; (3 samples, 0.31%)</title><rect x="48.8494%" y="1301" width="0.3138%" height="15" fill="rgb(218,107,18)" fg:x="467" fg:w="3"/><text x="49.0994%" y="1311.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;&amp;str,&amp;common_datavalues::columns::column_with_field::ColumnWithField,std::collections::hash::map::RandomState&gt;&gt; (3 samples, 0.31%)</title><rect x="48.8494%" y="1285" width="0.3138%" height="15" fill="rgb(237,177,39)" fg:x="467" fg:w="3"/><text x="49.0994%" y="1295.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(&amp;str,&amp;common_datavalues::columns::column_with_field::ColumnWithField)&gt;&gt; (3 samples, 0.31%)</title><rect x="48.8494%" y="1269" width="0.3138%" height="15" fill="rgb(246,69,6)" fg:x="467" fg:w="3"/><text x="49.0994%" y="1279.50"></text></g><g><title>databend-query`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.31%)</title><rect x="48.8494%" y="1253" width="0.3138%" height="15" fill="rgb(234,208,37)" fg:x="467" fg:w="3"/><text x="49.0994%" y="1263.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (3 samples, 0.31%)</title><rect x="48.8494%" y="1237" width="0.3138%" height="15" fill="rgb(225,4,6)" fg:x="467" fg:w="3"/><text x="49.0994%" y="1247.50"></text></g><g><title>databend-query`hashbrown::raw::TableLayout::new (1 samples, 0.10%)</title><rect x="49.0586%" y="1221" width="0.1046%" height="15" fill="rgb(233,45,0)" fg:x="469" fg:w="1"/><text x="49.3086%" y="1231.50"></text></g><g><title>databend-query`core::cmp::Ord::max (1 samples, 0.10%)</title><rect x="49.0586%" y="1205" width="0.1046%" height="15" fill="rgb(226,136,5)" fg:x="469" fg:w="1"/><text x="49.3086%" y="1215.50"></text></g><g><title>databend-query`&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="49.1632%" y="1221" width="0.1046%" height="15" fill="rgb(211,91,47)" fg:x="470" fg:w="1"/><text x="49.4132%" y="1231.50"></text></g><g><title>databend-query`&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="49.1632%" y="1205" width="0.1046%" height="15" fill="rgb(242,88,51)" fg:x="470" fg:w="1"/><text x="49.4132%" y="1215.50"></text></g><g><title>databend-query`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::sub (1 samples, 0.10%)</title><rect x="49.1632%" y="1189" width="0.1046%" height="15" fill="rgb(230,91,28)" fg:x="470" fg:w="1"/><text x="49.4132%" y="1199.50"></text></g><g><title>databend-query`hashbrown::raw::Bucket&lt;T&gt;::drop (2 samples, 0.21%)</title><rect x="49.2678%" y="1221" width="0.2092%" height="15" fill="rgb(254,186,29)" fg:x="471" fg:w="2"/><text x="49.5178%" y="1231.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;(&amp;str,alloc::vec::Vec&lt;&amp;str&gt;)&gt; (1 samples, 0.10%)</title><rect x="49.3724%" y="1205" width="0.1046%" height="15" fill="rgb(238,6,4)" fg:x="472" fg:w="1"/><text x="49.6224%" y="1215.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;str&gt;&gt; (1 samples, 0.10%)</title><rect x="49.3724%" y="1189" width="0.1046%" height="15" fill="rgb(221,151,16)" fg:x="472" fg:w="1"/><text x="49.6224%" y="1199.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;str&gt;&gt; (1 samples, 0.10%)</title><rect x="49.3724%" y="1173" width="0.1046%" height="15" fill="rgb(251,143,52)" fg:x="472" fg:w="1"/><text x="49.6224%" y="1183.50"></text></g><g><title>databend-query`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="49.3724%" y="1157" width="0.1046%" height="15" fill="rgb(206,90,15)" fg:x="472" fg:w="1"/><text x="49.6224%" y="1167.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.10%)</title><rect x="49.3724%" y="1141" width="0.1046%" height="15" fill="rgb(218,35,8)" fg:x="472" fg:w="1"/><text x="49.6224%" y="1151.50"></text></g><g><title>databend-query`alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="49.3724%" y="1125" width="0.1046%" height="15" fill="rgb(239,215,6)" fg:x="472" fg:w="1"/><text x="49.6224%" y="1135.50"></text></g><g><title>databend-query`__rg_dealloc (1 samples, 0.10%)</title><rect x="49.3724%" y="1109" width="0.1046%" height="15" fill="rgb(245,116,39)" fg:x="472" fg:w="1"/><text x="49.6224%" y="1119.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.10%)</title><rect x="49.3724%" y="1093" width="0.1046%" height="15" fill="rgb(242,65,28)" fg:x="472" fg:w="1"/><text x="49.6224%" y="1103.50"></text></g><g><title>libsystem_pthread.dylib`___chkstk_darwin (1 samples, 0.10%)</title><rect x="49.3724%" y="1077" width="0.1046%" height="15" fill="rgb(252,132,53)" fg:x="472" fg:w="1"/><text x="49.6224%" y="1087.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (5 samples, 0.52%)</title><rect x="49.1632%" y="1237" width="0.5230%" height="15" fill="rgb(224,159,50)" fg:x="470" fg:w="5"/><text x="49.4132%" y="1247.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::iter (2 samples, 0.21%)</title><rect x="49.4770%" y="1221" width="0.2092%" height="15" fill="rgb(224,93,4)" fg:x="473" fg:w="2"/><text x="49.7270%" y="1231.50"></text></g><g><title>databend-query`hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.10%)</title><rect x="49.5816%" y="1205" width="0.1046%" height="15" fill="rgb(208,81,34)" fg:x="474" fg:w="1"/><text x="49.8316%" y="1215.50"></text></g><g><title>databend-query`hashbrown::raw::generic::Group::load_aligned (1 samples, 0.10%)</title><rect x="49.5816%" y="1189" width="0.1046%" height="15" fill="rgb(233,92,54)" fg:x="474" fg:w="1"/><text x="49.8316%" y="1199.50"></text></g><g><title>databend-query`_rjem_sdallocx (1 samples, 0.10%)</title><rect x="49.7908%" y="1141" width="0.1046%" height="15" fill="rgb(237,21,14)" fg:x="476" fg:w="1"/><text x="50.0408%" y="1151.50"></text></g><g><title>databend-query`__rg_dealloc (3 samples, 0.31%)</title><rect x="49.7908%" y="1173" width="0.3138%" height="15" fill="rgb(249,128,51)" fg:x="476" fg:w="3"/><text x="50.0408%" y="1183.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::dealloc (3 samples, 0.31%)</title><rect x="49.7908%" y="1157" width="0.3138%" height="15" fill="rgb(223,129,24)" fg:x="476" fg:w="3"/><text x="50.0408%" y="1167.50"></text></g><g><title>databend-query`ticker_trytick (2 samples, 0.21%)</title><rect x="49.8954%" y="1141" width="0.2092%" height="15" fill="rgb(231,168,25)" fg:x="477" fg:w="2"/><text x="50.1454%" y="1151.50"></text></g><g><title>databend-query`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 1.05%)</title><rect x="49.1632%" y="1253" width="1.0460%" height="15" fill="rgb(224,39,20)" fg:x="470" fg:w="10"/><text x="49.4132%" y="1263.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (5 samples, 0.52%)</title><rect x="49.6862%" y="1237" width="0.5230%" height="15" fill="rgb(225,152,53)" fg:x="475" fg:w="5"/><text x="49.9362%" y="1247.50"></text></g><g><title>databend-query`hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (5 samples, 0.52%)</title><rect x="49.6862%" y="1221" width="0.5230%" height="15" fill="rgb(252,17,24)" fg:x="475" fg:w="5"/><text x="49.9362%" y="1231.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.52%)</title><rect x="49.6862%" y="1205" width="0.5230%" height="15" fill="rgb(250,114,30)" fg:x="475" fg:w="5"/><text x="49.9362%" y="1215.50"></text></g><g><title>databend-query`alloc::alloc::dealloc (5 samples, 0.52%)</title><rect x="49.6862%" y="1189" width="0.5230%" height="15" fill="rgb(229,5,4)" fg:x="475" fg:w="5"/><text x="49.9362%" y="1199.50"></text></g><g><title>databend-query`core::alloc::layout::Layout::align (1 samples, 0.10%)</title><rect x="50.1046%" y="1173" width="0.1046%" height="15" fill="rgb(225,176,49)" fg:x="479" fg:w="1"/><text x="50.3546%" y="1183.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;&amp;str,alloc::vec::Vec&lt;&amp;str&gt;&gt;&gt; (11 samples, 1.15%)</title><rect x="49.1632%" y="1301" width="1.1506%" height="15" fill="rgb(224,221,49)" fg:x="470" fg:w="11"/><text x="49.4132%" y="1311.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;&amp;str,alloc::vec::Vec&lt;&amp;str&gt;,std::collections::hash::map::RandomState&gt;&gt; (11 samples, 1.15%)</title><rect x="49.1632%" y="1285" width="1.1506%" height="15" fill="rgb(253,169,27)" fg:x="470" fg:w="11"/><text x="49.4132%" y="1295.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(&amp;str,alloc::vec::Vec&lt;&amp;str&gt;)&gt;&gt; (11 samples, 1.15%)</title><rect x="49.1632%" y="1269" width="1.1506%" height="15" fill="rgb(211,206,16)" fg:x="470" fg:w="11"/><text x="49.4132%" y="1279.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.10%)</title><rect x="50.2092%" y="1253" width="0.1046%" height="15" fill="rgb(244,87,35)" fg:x="480" fg:w="1"/><text x="50.4592%" y="1263.50"></text></g><g><title>databend-query`core::mem::needs_drop (1 samples, 0.10%)</title><rect x="50.3138%" y="1237" width="0.1046%" height="15" fill="rgb(246,28,10)" fg:x="481" fg:w="1"/><text x="50.5638%" y="1247.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn common_datavalues::columns::column::Column&gt;&gt; (1 samples, 0.10%)</title><rect x="50.5230%" y="1173" width="0.1046%" height="15" fill="rgb(229,12,44)" fg:x="483" fg:w="1"/><text x="50.7730%" y="1183.50"></text></g><g><title>databend-query`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="50.5230%" y="1157" width="0.1046%" height="15" fill="rgb(210,145,37)" fg:x="483" fg:w="1"/><text x="50.7730%" y="1167.50"></text></g><g><title>databend-query`core::sync::atomic::atomic_sub (1 samples, 0.10%)</title><rect x="50.5230%" y="1141" width="0.1046%" height="15" fill="rgb(227,112,52)" fg:x="483" fg:w="1"/><text x="50.7730%" y="1151.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="50.6276%" y="1125" width="0.1046%" height="15" fill="rgb(238,155,34)" fg:x="484" fg:w="1"/><text x="50.8776%" y="1135.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.10%)</title><rect x="50.6276%" y="1109" width="0.1046%" height="15" fill="rgb(239,226,36)" fg:x="484" fg:w="1"/><text x="50.8776%" y="1119.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.10%)</title><rect x="50.6276%" y="1093" width="0.1046%" height="15" fill="rgb(230,16,23)" fg:x="484" fg:w="1"/><text x="50.8776%" y="1103.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.10%)</title><rect x="50.6276%" y="1077" width="0.1046%" height="15" fill="rgb(236,171,36)" fg:x="484" fg:w="1"/><text x="50.8776%" y="1087.50"></text></g><g><title>databend-query`_rjem_sdallocx (3 samples, 0.31%)</title><rect x="50.7322%" y="1029" width="0.3138%" height="15" fill="rgb(221,22,14)" fg:x="485" fg:w="3"/><text x="50.9822%" y="1039.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.42%)</title><rect x="50.7322%" y="1093" width="0.4184%" height="15" fill="rgb(242,43,11)" fg:x="485" fg:w="4"/><text x="50.9822%" y="1103.50"></text></g><g><title>databend-query`alloc::alloc::dealloc (4 samples, 0.42%)</title><rect x="50.7322%" y="1077" width="0.4184%" height="15" fill="rgb(232,69,23)" fg:x="485" fg:w="4"/><text x="50.9822%" y="1087.50"></text></g><g><title>databend-query`__rg_dealloc (4 samples, 0.42%)</title><rect x="50.7322%" y="1061" width="0.4184%" height="15" fill="rgb(216,180,54)" fg:x="485" fg:w="4"/><text x="50.9822%" y="1071.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::dealloc (4 samples, 0.42%)</title><rect x="50.7322%" y="1045" width="0.4184%" height="15" fill="rgb(216,5,24)" fg:x="485" fg:w="4"/><text x="50.9822%" y="1055.50"></text></g><g><title>databend-query`ticker_trytick (1 samples, 0.10%)</title><rect x="51.0460%" y="1029" width="0.1046%" height="15" fill="rgb(225,89,9)" fg:x="488" fg:w="1"/><text x="51.2960%" y="1039.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.10%)</title><rect x="51.1506%" y="1093" width="0.1046%" height="15" fill="rgb(243,75,33)" fg:x="489" fg:w="1"/><text x="51.4006%" y="1103.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::string::String&gt; (7 samples, 0.73%)</title><rect x="50.6276%" y="1157" width="0.7322%" height="15" fill="rgb(247,141,45)" fg:x="484" fg:w="7"/><text x="50.8776%" y="1167.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7 samples, 0.73%)</title><rect x="50.6276%" y="1141" width="0.7322%" height="15" fill="rgb(232,177,36)" fg:x="484" fg:w="7"/><text x="50.8776%" y="1151.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6 samples, 0.63%)</title><rect x="50.7322%" y="1125" width="0.6276%" height="15" fill="rgb(219,125,36)" fg:x="485" fg:w="6"/><text x="50.9822%" y="1135.50"></text></g><g><title>databend-query`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.63%)</title><rect x="50.7322%" y="1109" width="0.6276%" height="15" fill="rgb(227,94,9)" fg:x="485" fg:w="6"/><text x="50.9822%" y="1119.50"></text></g><g><title>databend-query`core::alloc::layout::Layout::size (1 samples, 0.10%)</title><rect x="51.2552%" y="1093" width="0.1046%" height="15" fill="rgb(240,34,52)" fg:x="490" fg:w="1"/><text x="51.5052%" y="1103.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_datavalues::data_field::DataField&gt; (8 samples, 0.84%)</title><rect x="50.6276%" y="1173" width="0.8368%" height="15" fill="rgb(216,45,12)" fg:x="484" fg:w="8"/><text x="50.8776%" y="1183.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_datavalues::types::data_type::DataTypeImpl&gt; (1 samples, 0.10%)</title><rect x="51.3598%" y="1157" width="0.1046%" height="15" fill="rgb(246,21,19)" fg:x="491" fg:w="1"/><text x="51.6098%" y="1167.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;(&amp;str,common_datavalues::columns::column_with_field::ColumnWithField)&gt; (10 samples, 1.05%)</title><rect x="50.5230%" y="1205" width="1.0460%" height="15" fill="rgb(213,98,42)" fg:x="483" fg:w="10"/><text x="50.7730%" y="1215.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_datavalues::columns::column_with_field::ColumnWithField&gt; (10 samples, 1.05%)</title><rect x="50.5230%" y="1189" width="1.0460%" height="15" fill="rgb(250,136,47)" fg:x="483" fg:w="10"/><text x="50.7730%" y="1199.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1 samples, 0.10%)</title><rect x="51.4644%" y="1173" width="0.1046%" height="15" fill="rgb(251,124,27)" fg:x="492" fg:w="1"/><text x="51.7144%" y="1183.50"></text></g><g><title>databend-query`hashbrown::raw::Bucket&lt;T&gt;::drop (11 samples, 1.15%)</title><rect x="50.5230%" y="1221" width="1.1506%" height="15" fill="rgb(229,180,14)" fg:x="483" fg:w="11"/><text x="50.7730%" y="1231.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_datavalues::columns::column_with_field::ColumnWithField&gt; (1 samples, 0.10%)</title><rect x="51.5690%" y="1205" width="0.1046%" height="15" fill="rgb(245,216,25)" fg:x="493" fg:w="1"/><text x="51.8190%" y="1215.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (13 samples, 1.36%)</title><rect x="50.4184%" y="1237" width="1.3598%" height="15" fill="rgb(251,43,5)" fg:x="482" fg:w="13"/><text x="50.6684%" y="1247.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::iter (1 samples, 0.10%)</title><rect x="51.6736%" y="1221" width="0.1046%" height="15" fill="rgb(250,128,24)" fg:x="494" fg:w="1"/><text x="51.9236%" y="1231.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.10%)</title><rect x="51.8828%" y="1205" width="0.1046%" height="15" fill="rgb(217,117,27)" fg:x="496" fg:w="1"/><text x="52.1328%" y="1215.50"></text></g><g><title>databend-query`alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="51.8828%" y="1189" width="0.1046%" height="15" fill="rgb(245,147,4)" fg:x="496" fg:w="1"/><text x="52.1328%" y="1199.50"></text></g><g><title>databend-query`__rg_dealloc (1 samples, 0.10%)</title><rect x="51.8828%" y="1173" width="0.1046%" height="15" fill="rgb(242,201,35)" fg:x="496" fg:w="1"/><text x="52.1328%" y="1183.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.10%)</title><rect x="51.8828%" y="1157" width="0.1046%" height="15" fill="rgb(218,181,1)" fg:x="496" fg:w="1"/><text x="52.1328%" y="1167.50"></text></g><g><title>databend-query`core::num::_&lt;impl usize&gt;::checked_mul (1 samples, 0.10%)</title><rect x="51.9874%" y="1205" width="0.1046%" height="15" fill="rgb(222,6,29)" fg:x="497" fg:w="1"/><text x="52.2374%" y="1215.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;&amp;str,common_datavalues::columns::column_with_field::ColumnWithField&gt;&gt; (18 samples, 1.88%)</title><rect x="50.3138%" y="1301" width="1.8828%" height="15" fill="rgb(208,186,3)" fg:x="481" fg:w="18"/><text x="50.5638%" y="1311.50">d..</text></g><g><title>databend-query`core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;&amp;str,common_datavalues::columns::column_with_field::ColumnWithField,std::collections::hash::map::RandomState&gt;&gt; (18 samples, 1.88%)</title><rect x="50.3138%" y="1285" width="1.8828%" height="15" fill="rgb(216,36,26)" fg:x="481" fg:w="18"/><text x="50.5638%" y="1295.50">d..</text></g><g><title>databend-query`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(&amp;str,common_datavalues::columns::column_with_field::ColumnWithField)&gt;&gt; (18 samples, 1.88%)</title><rect x="50.3138%" y="1269" width="1.8828%" height="15" fill="rgb(248,201,23)" fg:x="481" fg:w="18"/><text x="50.5638%" y="1279.50">d..</text></g><g><title>databend-query`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 1.88%)</title><rect x="50.3138%" y="1253" width="1.8828%" height="15" fill="rgb(251,170,31)" fg:x="481" fg:w="18"/><text x="50.5638%" y="1263.50">d..</text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (4 samples, 0.42%)</title><rect x="51.7782%" y="1237" width="0.4184%" height="15" fill="rgb(207,110,25)" fg:x="495" fg:w="4"/><text x="52.0282%" y="1247.50"></text></g><g><title>databend-query`hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (3 samples, 0.31%)</title><rect x="51.8828%" y="1221" width="0.3138%" height="15" fill="rgb(250,54,15)" fg:x="496" fg:w="3"/><text x="52.1328%" y="1231.50"></text></g><g><title>databend-query`hashbrown::raw::TableLayout::calculate_layout_for (1 samples, 0.10%)</title><rect x="52.0921%" y="1205" width="0.1046%" height="15" fill="rgb(227,68,33)" fg:x="498" fg:w="1"/><text x="52.3421%" y="1215.50"></text></g><g><title>databend-query`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.10%)</title><rect x="52.0921%" y="1189" width="0.1046%" height="15" fill="rgb(238,34,41)" fg:x="498" fg:w="1"/><text x="52.3421%" y="1199.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.21%)</title><rect x="52.1967%" y="1301" width="0.2092%" height="15" fill="rgb(220,11,15)" fg:x="499" fg:w="2"/><text x="52.4467%" y="1311.50"></text></g><g><title>databend-query`core::slice::_&lt;impl [T]&gt;::iter (2 samples, 0.21%)</title><rect x="52.4059%" y="1301" width="0.2092%" height="15" fill="rgb(246,111,35)" fg:x="501" fg:w="2"/><text x="52.6559%" y="1311.50"></text></g><g><title>databend-query`core::slice::iter::Iter&lt;T&gt;::new (2 samples, 0.21%)</title><rect x="52.4059%" y="1285" width="0.2092%" height="15" fill="rgb(209,88,53)" fg:x="501" fg:w="2"/><text x="52.6559%" y="1295.50"></text></g><g><title>databend-query`core::ptr::const_ptr::_&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.10%)</title><rect x="52.5105%" y="1269" width="0.1046%" height="15" fill="rgb(231,185,47)" fg:x="502" fg:w="1"/><text x="52.7605%" y="1279.50"></text></g><g><title>databend-query`core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.10%)</title><rect x="52.6151%" y="1301" width="0.1046%" height="15" fill="rgb(233,154,1)" fg:x="503" fg:w="1"/><text x="52.8651%" y="1311.50"></text></g><g><title>databend-query`core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.10%)</title><rect x="52.7197%" y="1301" width="0.1046%" height="15" fill="rgb(225,15,46)" fg:x="504" fg:w="1"/><text x="52.9697%" y="1311.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.10%)</title><rect x="52.8243%" y="1301" width="0.1046%" height="15" fill="rgb(211,135,41)" fg:x="505" fg:w="1"/><text x="53.0743%" y="1311.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (1 samples, 0.10%)</title><rect x="52.9289%" y="1253" width="0.1046%" height="15" fill="rgb(208,54,0)" fg:x="506" fg:w="1"/><text x="53.1789%" y="1263.50"></text></g><g><title>databend-query`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.21%)</title><rect x="53.0335%" y="1221" width="0.2092%" height="15" fill="rgb(244,136,14)" fg:x="507" fg:w="2"/><text x="53.2835%" y="1231.50"></text></g><g><title>databend-query`&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.21%)</title><rect x="53.0335%" y="1205" width="0.2092%" height="15" fill="rgb(241,56,14)" fg:x="507" fg:w="2"/><text x="53.2835%" y="1215.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.21%)</title><rect x="53.0335%" y="1189" width="0.2092%" height="15" fill="rgb(205,80,24)" fg:x="507" fg:w="2"/><text x="53.2835%" y="1199.50"></text></g><g><title>databend-query`&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.10%)</title><rect x="53.2427%" y="1221" width="0.1046%" height="15" fill="rgb(220,57,4)" fg:x="509" fg:w="1"/><text x="53.4927%" y="1231.50"></text></g><g><title>databend-query`core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.10%)</title><rect x="53.2427%" y="1205" width="0.1046%" height="15" fill="rgb(226,193,50)" fg:x="509" fg:w="1"/><text x="53.4927%" y="1215.50"></text></g><g><title>databend-query`core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.10%)</title><rect x="53.2427%" y="1189" width="0.1046%" height="15" fill="rgb(231,168,22)" fg:x="509" fg:w="1"/><text x="53.4927%" y="1199.50"></text></g><g><title>databend-query`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.21%)</title><rect x="53.3473%" y="1189" width="0.2092%" height="15" fill="rgb(254,215,14)" fg:x="510" fg:w="2"/><text x="53.5973%" y="1199.50"></text></g><g><title>databend-query`&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.21%)</title><rect x="53.3473%" y="1173" width="0.2092%" height="15" fill="rgb(211,115,16)" fg:x="510" fg:w="2"/><text x="53.5973%" y="1183.50"></text></g><g><title>databend-query`core::slice::_&lt;impl [T]&gt;::as_ptr (2 samples, 0.21%)</title><rect x="53.3473%" y="1157" width="0.2092%" height="15" fill="rgb(236,210,16)" fg:x="510" fg:w="2"/><text x="53.5973%" y="1167.50"></text></g><g><title>databend-query`hashbrown::map::make_hash (7 samples, 0.73%)</title><rect x="53.0335%" y="1253" width="0.7322%" height="15" fill="rgb(221,94,12)" fg:x="507" fg:w="7"/><text x="53.2835%" y="1263.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (7 samples, 0.73%)</title><rect x="53.0335%" y="1237" width="0.7322%" height="15" fill="rgb(235,218,49)" fg:x="507" fg:w="7"/><text x="53.2835%" y="1247.50"></text></g><g><title>databend-query`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.42%)</title><rect x="53.3473%" y="1221" width="0.4184%" height="15" fill="rgb(217,114,14)" fg:x="510" fg:w="4"/><text x="53.5973%" y="1231.50"></text></g><g><title>databend-query`core::hash::impls::_&lt;impl core::hash::Hash for str&gt;::hash (4 samples, 0.42%)</title><rect x="53.3473%" y="1205" width="0.4184%" height="15" fill="rgb(216,145,22)" fg:x="510" fg:w="4"/><text x="53.5973%" y="1215.50"></text></g><g><title>databend-query`core::hash::Hasher::write_u8 (2 samples, 0.21%)</title><rect x="53.5565%" y="1189" width="0.2092%" height="15" fill="rgb(217,112,39)" fg:x="512" fg:w="2"/><text x="53.8065%" y="1199.50"></text></g><g><title>databend-query`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.21%)</title><rect x="53.5565%" y="1173" width="0.2092%" height="15" fill="rgb(225,85,32)" fg:x="512" fg:w="2"/><text x="53.8065%" y="1183.50"></text></g><g><title>databend-query`&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.21%)</title><rect x="53.5565%" y="1157" width="0.2092%" height="15" fill="rgb(245,209,47)" fg:x="512" fg:w="2"/><text x="53.8065%" y="1167.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.21%)</title><rect x="53.5565%" y="1141" width="0.2092%" height="15" fill="rgb(218,220,15)" fg:x="512" fg:w="2"/><text x="53.8065%" y="1151.50"></text></g><g><title>databend-query`core::cmp::min (1 samples, 0.10%)</title><rect x="53.6611%" y="1125" width="0.1046%" height="15" fill="rgb(222,202,31)" fg:x="513" fg:w="1"/><text x="53.9111%" y="1135.50"></text></g><g><title>databend-query`core::cmp::Ord::min (1 samples, 0.10%)</title><rect x="53.6611%" y="1109" width="0.1046%" height="15" fill="rgb(243,203,4)" fg:x="513" fg:w="1"/><text x="53.9111%" y="1119.50"></text></g><g><title>databend-query`core::cmp::min_by (1 samples, 0.10%)</title><rect x="53.6611%" y="1093" width="0.1046%" height="15" fill="rgb(237,92,17)" fg:x="513" fg:w="1"/><text x="53.9111%" y="1103.50"></text></g><g><title>databend-query`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.10%)</title><rect x="53.6611%" y="1077" width="0.1046%" height="15" fill="rgb(231,119,7)" fg:x="513" fg:w="1"/><text x="53.9111%" y="1087.50"></text></g><g><title>databend-query`hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.10%)</title><rect x="53.7657%" y="1237" width="0.1046%" height="15" fill="rgb(237,82,41)" fg:x="514" fg:w="1"/><text x="54.0157%" y="1247.50"></text></g><g><title>databend-query`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::sub (1 samples, 0.10%)</title><rect x="53.7657%" y="1221" width="0.1046%" height="15" fill="rgb(226,81,48)" fg:x="514" fg:w="1"/><text x="54.0157%" y="1231.50"></text></g><g><title>databend-query`hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.10%)</title><rect x="53.8703%" y="1189" width="0.1046%" height="15" fill="rgb(234,70,51)" fg:x="515" fg:w="1"/><text x="54.1203%" y="1199.50"></text></g><g><title>databend-query`core::str::traits::_&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.10%)</title><rect x="53.8703%" y="1173" width="0.1046%" height="15" fill="rgb(251,86,4)" fg:x="515" fg:w="1"/><text x="54.1203%" y="1183.50"></text></g><g><title>databend-query`core::cmp::impls::_&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.10%)</title><rect x="53.8703%" y="1157" width="0.1046%" height="15" fill="rgb(244,144,28)" fg:x="515" fg:w="1"/><text x="54.1203%" y="1167.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.10%)</title><rect x="53.9749%" y="1173" width="0.1046%" height="15" fill="rgb(232,161,39)" fg:x="516" fg:w="1"/><text x="54.2249%" y="1183.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (3 samples, 0.31%)</title><rect x="53.8703%" y="1205" width="0.3138%" height="15" fill="rgb(247,34,51)" fg:x="515" fg:w="3"/><text x="54.1203%" y="1215.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::bucket (2 samples, 0.21%)</title><rect x="53.9749%" y="1189" width="0.2092%" height="15" fill="rgb(225,132,2)" fg:x="516" fg:w="2"/><text x="54.2249%" y="1199.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.10%)</title><rect x="54.0795%" y="1173" width="0.1046%" height="15" fill="rgb(209,159,44)" fg:x="517" fg:w="1"/><text x="54.3295%" y="1183.50"></text></g><g><title>databend-query`hashbrown::raw::generic::Group::load (1 samples, 0.10%)</title><rect x="54.1841%" y="1205" width="0.1046%" height="15" fill="rgb(251,214,1)" fg:x="518" fg:w="1"/><text x="54.4341%" y="1215.50"></text></g><g><title>databend-query`core::ptr::read_unaligned (1 samples, 0.10%)</title><rect x="54.1841%" y="1189" width="0.1046%" height="15" fill="rgb(247,84,47)" fg:x="518" fg:w="1"/><text x="54.4341%" y="1199.50"></text></g><g><title>databend-query`std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (15 samples, 1.57%)</title><rect x="52.9289%" y="1301" width="1.5690%" height="15" fill="rgb(240,111,43)" fg:x="506" fg:w="15"/><text x="53.1789%" y="1311.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (15 samples, 1.57%)</title><rect x="52.9289%" y="1285" width="1.5690%" height="15" fill="rgb(215,214,35)" fg:x="506" fg:w="15"/><text x="53.1789%" y="1295.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (15 samples, 1.57%)</title><rect x="52.9289%" y="1269" width="1.5690%" height="15" fill="rgb(248,207,23)" fg:x="506" fg:w="15"/><text x="53.1789%" y="1279.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::get (7 samples, 0.73%)</title><rect x="53.7657%" y="1253" width="0.7322%" height="15" fill="rgb(214,186,4)" fg:x="514" fg:w="7"/><text x="54.0157%" y="1263.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.63%)</title><rect x="53.8703%" y="1237" width="0.6276%" height="15" fill="rgb(220,133,22)" fg:x="515" fg:w="6"/><text x="54.1203%" y="1247.50"></text></g><g><title>databend-query`hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.63%)</title><rect x="53.8703%" y="1221" width="0.6276%" height="15" fill="rgb(239,134,19)" fg:x="515" fg:w="6"/><text x="54.1203%" y="1231.50"></text></g><g><title>databend-query`hashbrown::raw::h2 (2 samples, 0.21%)</title><rect x="54.2887%" y="1205" width="0.2092%" height="15" fill="rgb(250,140,9)" fg:x="519" fg:w="2"/><text x="54.5387%" y="1215.50"></text></g><g><title>databend-query`core::cmp::Ord::min (2 samples, 0.21%)</title><rect x="54.2887%" y="1189" width="0.2092%" height="15" fill="rgb(225,59,14)" fg:x="519" fg:w="2"/><text x="54.5387%" y="1199.50"></text></g><g><title>databend-query`core::cmp::min_by (2 samples, 0.21%)</title><rect x="54.2887%" y="1173" width="0.2092%" height="15" fill="rgb(214,152,51)" fg:x="519" fg:w="2"/><text x="54.5387%" y="1183.50"></text></g><g><title>databend-query`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.10%)</title><rect x="54.3933%" y="1157" width="0.1046%" height="15" fill="rgb(251,227,43)" fg:x="520" fg:w="1"/><text x="54.6433%" y="1167.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.10%)</title><rect x="54.9163%" y="1189" width="0.1046%" height="15" fill="rgb(241,96,17)" fg:x="525" fg:w="1"/><text x="55.1663%" y="1199.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.31%)</title><rect x="55.0209%" y="1189" width="0.3138%" height="15" fill="rgb(234,198,43)" fg:x="526" fg:w="3"/><text x="55.2709%" y="1199.50"></text></g><g><title>databend-query`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.94%)</title><rect x="54.9163%" y="1221" width="0.9414%" height="15" fill="rgb(220,108,29)" fg:x="525" fg:w="9"/><text x="55.1663%" y="1231.50"></text></g><g><title>databend-query`&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.94%)</title><rect x="54.9163%" y="1205" width="0.9414%" height="15" fill="rgb(226,163,33)" fg:x="525" fg:w="9"/><text x="55.1663%" y="1215.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 0.52%)</title><rect x="55.3347%" y="1189" width="0.5230%" height="15" fill="rgb(205,194,45)" fg:x="529" fg:w="5"/><text x="55.5847%" y="1199.50"></text></g><g><title>databend-query`&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.21%)</title><rect x="55.8577%" y="1221" width="0.2092%" height="15" fill="rgb(206,143,44)" fg:x="534" fg:w="2"/><text x="56.1077%" y="1231.50"></text></g><g><title>databend-query`core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.10%)</title><rect x="55.9623%" y="1205" width="0.1046%" height="15" fill="rgb(236,136,36)" fg:x="535" fg:w="1"/><text x="56.2123%" y="1215.50"></text></g><g><title>databend-query`core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.10%)</title><rect x="55.9623%" y="1189" width="0.1046%" height="15" fill="rgb(249,172,42)" fg:x="535" fg:w="1"/><text x="56.2123%" y="1199.50"></text></g><g><title>databend-query`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.10%)</title><rect x="56.0669%" y="1205" width="0.1046%" height="15" fill="rgb(216,139,23)" fg:x="536" fg:w="1"/><text x="56.3169%" y="1215.50"></text></g><g><title>databend-query`core::hash::impls::_&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.10%)</title><rect x="56.0669%" y="1189" width="0.1046%" height="15" fill="rgb(207,166,20)" fg:x="536" fg:w="1"/><text x="56.3169%" y="1199.50"></text></g><g><title>databend-query`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="56.0669%" y="1173" width="0.1046%" height="15" fill="rgb(210,209,22)" fg:x="536" fg:w="1"/><text x="56.3169%" y="1183.50"></text></g><g><title>databend-query`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.21%)</title><rect x="56.0669%" y="1221" width="0.2092%" height="15" fill="rgb(232,118,20)" fg:x="536" fg:w="2"/><text x="56.3169%" y="1231.50"></text></g><g><title>databend-query`core::hash::impls::_&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.10%)</title><rect x="56.1715%" y="1205" width="0.1046%" height="15" fill="rgb(238,113,42)" fg:x="537" fg:w="1"/><text x="56.4215%" y="1215.50"></text></g><g><title>databend-query`hashbrown::map::make_hash (16 samples, 1.67%)</title><rect x="54.7071%" y="1253" width="1.6736%" height="15" fill="rgb(231,42,5)" fg:x="523" fg:w="16"/><text x="54.9571%" y="1263.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (15 samples, 1.57%)</title><rect x="54.8117%" y="1237" width="1.5690%" height="15" fill="rgb(243,166,24)" fg:x="524" fg:w="15"/><text x="55.0617%" y="1247.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.10%)</title><rect x="56.2762%" y="1221" width="0.1046%" height="15" fill="rgb(237,226,12)" fg:x="538" fg:w="1"/><text x="56.5262%" y="1231.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.10%)</title><rect x="56.6946%" y="1221" width="0.1046%" height="15" fill="rgb(229,133,24)" fg:x="542" fg:w="1"/><text x="56.9446%" y="1231.50"></text></g><g><title>databend-query`&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::FromResidual&gt;::from_residual (1 samples, 0.10%)</title><rect x="56.7992%" y="1205" width="0.1046%" height="15" fill="rgb(238,33,43)" fg:x="543" fg:w="1"/><text x="57.0492%" y="1215.50"></text></g><g><title>databend-query`hashbrown::map::equivalent_key::_{{closure}} (2 samples, 0.21%)</title><rect x="56.9038%" y="1189" width="0.2092%" height="15" fill="rgb(227,59,38)" fg:x="544" fg:w="2"/><text x="57.1538%" y="1199.50"></text></g><g><title>databend-query`core::cmp::impls::_&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.10%)</title><rect x="57.0084%" y="1173" width="0.1046%" height="15" fill="rgb(230,97,0)" fg:x="545" fg:w="1"/><text x="57.2584%" y="1183.50"></text></g><g><title>databend-query`core::str::traits::_&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.10%)</title><rect x="57.0084%" y="1157" width="0.1046%" height="15" fill="rgb(250,173,50)" fg:x="545" fg:w="1"/><text x="57.2584%" y="1167.50"></text></g><g><title>databend-query`core::cmp::impls::_&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.10%)</title><rect x="57.0084%" y="1141" width="0.1046%" height="15" fill="rgb(240,15,50)" fg:x="545" fg:w="1"/><text x="57.2584%" y="1151.50"></text></g><g><title>databend-query`core::slice::cmp::_&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.10%)</title><rect x="57.0084%" y="1125" width="0.1046%" height="15" fill="rgb(221,93,22)" fg:x="545" fg:w="1"/><text x="57.2584%" y="1135.50"></text></g><g><title>databend-query`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.10%)</title><rect x="57.0084%" y="1109" width="0.1046%" height="15" fill="rgb(245,180,53)" fg:x="545" fg:w="1"/><text x="57.2584%" y="1119.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (3 samples, 0.31%)</title><rect x="56.9038%" y="1205" width="0.3138%" height="15" fill="rgb(231,88,51)" fg:x="544" fg:w="3"/><text x="57.1538%" y="1215.50"></text></g><g><title>databend-query`hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.10%)</title><rect x="57.1130%" y="1189" width="0.1046%" height="15" fill="rgb(240,58,21)" fg:x="546" fg:w="1"/><text x="57.3630%" y="1199.50"></text></g><g><title>databend-query`hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.10%)</title><rect x="57.1130%" y="1173" width="0.1046%" height="15" fill="rgb(237,21,10)" fg:x="546" fg:w="1"/><text x="57.3630%" y="1183.50"></text></g><g><title>databend-query`hashbrown::raw::generic::Group::load (2 samples, 0.21%)</title><rect x="57.2176%" y="1205" width="0.2092%" height="15" fill="rgb(218,43,11)" fg:x="547" fg:w="2"/><text x="57.4676%" y="1215.50"></text></g><g><title>databend-query`core::ptr::read_unaligned (2 samples, 0.21%)</title><rect x="57.2176%" y="1189" width="0.2092%" height="15" fill="rgb(218,221,29)" fg:x="547" fg:w="2"/><text x="57.4676%" y="1199.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (30 samples, 3.14%)</title><rect x="54.7071%" y="1269" width="3.1381%" height="15" fill="rgb(214,118,42)" fg:x="523" fg:w="30"/><text x="54.9571%" y="1279.50">dat..</text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::get (14 samples, 1.46%)</title><rect x="56.3808%" y="1253" width="1.4644%" height="15" fill="rgb(251,200,26)" fg:x="539" fg:w="14"/><text x="56.6308%" y="1263.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::find (13 samples, 1.36%)</title><rect x="56.4854%" y="1237" width="1.3598%" height="15" fill="rgb(237,101,39)" fg:x="540" fg:w="13"/><text x="56.7354%" y="1247.50"></text></g><g><title>databend-query`hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (10 samples, 1.05%)</title><rect x="56.7992%" y="1221" width="1.0460%" height="15" fill="rgb(251,117,11)" fg:x="543" fg:w="10"/><text x="57.0492%" y="1231.50"></text></g><g><title>databend-query`hashbrown::raw::h2 (4 samples, 0.42%)</title><rect x="57.4268%" y="1205" width="0.4184%" height="15" fill="rgb(216,223,23)" fg:x="549" fg:w="4"/><text x="57.6768%" y="1215.50"></text></g><g><title>databend-query`core::cmp::Ord::min (4 samples, 0.42%)</title><rect x="57.4268%" y="1189" width="0.4184%" height="15" fill="rgb(251,54,12)" fg:x="549" fg:w="4"/><text x="57.6768%" y="1199.50"></text></g><g><title>databend-query`core::cmp::min_by (4 samples, 0.42%)</title><rect x="57.4268%" y="1173" width="0.4184%" height="15" fill="rgb(254,176,54)" fg:x="549" fg:w="4"/><text x="57.6768%" y="1183.50"></text></g><g><title>databend-query`core::ops::function::FnOnce::call_once (2 samples, 0.21%)</title><rect x="57.6360%" y="1157" width="0.2092%" height="15" fill="rgb(210,32,8)" fg:x="551" fg:w="2"/><text x="57.8860%" y="1167.50"></text></g><g><title>databend-query`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (33 samples, 3.45%)</title><rect x="54.4979%" y="1301" width="3.4519%" height="15" fill="rgb(235,52,38)" fg:x="521" fg:w="33"/><text x="54.7479%" y="1311.50">dat..</text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (33 samples, 3.45%)</title><rect x="54.4979%" y="1285" width="3.4519%" height="15" fill="rgb(231,4,44)" fg:x="521" fg:w="33"/><text x="54.7479%" y="1295.50">dat..</text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.10%)</title><rect x="57.8452%" y="1269" width="0.1046%" height="15" fill="rgb(249,2,32)" fg:x="553" fg:w="1"/><text x="58.0952%" y="1279.50"></text></g><g><title>databend-query`core::ptr::read (1 samples, 0.10%)</title><rect x="58.0544%" y="1269" width="0.1046%" height="15" fill="rgb(224,65,26)" fg:x="555" fg:w="1"/><text x="58.3044%" y="1279.50"></text></g><g><title>databend-query`core::ptr::write (1 samples, 0.10%)</title><rect x="58.1590%" y="1269" width="0.1046%" height="15" fill="rgb(250,73,40)" fg:x="556" fg:w="1"/><text x="58.4090%" y="1279.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.10%)</title><rect x="58.2636%" y="1221" width="0.1046%" height="15" fill="rgb(253,177,16)" fg:x="557" fg:w="1"/><text x="58.5136%" y="1231.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.21%)</title><rect x="58.3682%" y="1205" width="0.2092%" height="15" fill="rgb(217,32,34)" fg:x="558" fg:w="2"/><text x="58.6182%" y="1215.50"></text></g><g><title>databend-query`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (11 samples, 1.15%)</title><rect x="58.2636%" y="1237" width="1.1506%" height="15" fill="rgb(212,7,10)" fg:x="557" fg:w="11"/><text x="58.5136%" y="1247.50"></text></g><g><title>databend-query`&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (10 samples, 1.05%)</title><rect x="58.3682%" y="1221" width="1.0460%" height="15" fill="rgb(245,89,8)" fg:x="558" fg:w="10"/><text x="58.6182%" y="1231.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8 samples, 0.84%)</title><rect x="58.5774%" y="1205" width="0.8368%" height="15" fill="rgb(237,16,53)" fg:x="560" fg:w="8"/><text x="58.8274%" y="1215.50"></text></g><g><title>databend-query`core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.10%)</title><rect x="59.4142%" y="1221" width="0.1046%" height="15" fill="rgb(250,204,30)" fg:x="568" fg:w="1"/><text x="59.6642%" y="1231.50"></text></g><g><title>databend-query`&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.21%)</title><rect x="59.4142%" y="1237" width="0.2092%" height="15" fill="rgb(208,77,27)" fg:x="568" fg:w="2"/><text x="59.6642%" y="1247.50"></text></g><g><title>databend-query`core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.10%)</title><rect x="59.5188%" y="1221" width="0.1046%" height="15" fill="rgb(250,204,28)" fg:x="569" fg:w="1"/><text x="59.7688%" y="1231.50"></text></g><g><title>databend-query`core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.10%)</title><rect x="59.5188%" y="1205" width="0.1046%" height="15" fill="rgb(244,63,21)" fg:x="569" fg:w="1"/><text x="59.7688%" y="1215.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.31%)</title><rect x="59.8326%" y="1157" width="0.3138%" height="15" fill="rgb(236,85,44)" fg:x="572" fg:w="3"/><text x="60.0826%" y="1167.50"></text></g><g><title>databend-query`core::hash::sip::u8to64_le (1 samples, 0.10%)</title><rect x="60.0418%" y="1141" width="0.1046%" height="15" fill="rgb(215,98,4)" fg:x="574" fg:w="1"/><text x="60.2918%" y="1151.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.10%)</title><rect x="60.0418%" y="1125" width="0.1046%" height="15" fill="rgb(235,38,11)" fg:x="574" fg:w="1"/><text x="60.2918%" y="1135.50"></text></g><g><title>databend-query`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.52%)</title><rect x="59.7280%" y="1189" width="0.5230%" height="15" fill="rgb(254,186,25)" fg:x="571" fg:w="5"/><text x="59.9780%" y="1199.50"></text></g><g><title>databend-query`&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.42%)</title><rect x="59.8326%" y="1173" width="0.4184%" height="15" fill="rgb(225,55,31)" fg:x="572" fg:w="4"/><text x="60.0826%" y="1183.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.10%)</title><rect x="60.1464%" y="1157" width="0.1046%" height="15" fill="rgb(211,15,21)" fg:x="575" fg:w="1"/><text x="60.3964%" y="1167.50"></text></g><g><title>databend-query`core::cmp::min (1 samples, 0.10%)</title><rect x="60.4603%" y="1125" width="0.1046%" height="15" fill="rgb(215,187,41)" fg:x="578" fg:w="1"/><text x="60.7103%" y="1135.50"></text></g><g><title>databend-query`core::cmp::Ord::min (1 samples, 0.10%)</title><rect x="60.4603%" y="1109" width="0.1046%" height="15" fill="rgb(248,69,32)" fg:x="578" fg:w="1"/><text x="60.7103%" y="1119.50"></text></g><g><title>databend-query`core::cmp::min_by (1 samples, 0.10%)</title><rect x="60.4603%" y="1093" width="0.1046%" height="15" fill="rgb(252,102,52)" fg:x="578" fg:w="1"/><text x="60.7103%" y="1103.50"></text></g><g><title>databend-query`hashbrown::map::make_insert_hash (23 samples, 2.41%)</title><rect x="58.2636%" y="1269" width="2.4059%" height="15" fill="rgb(253,140,32)" fg:x="557" fg:w="23"/><text x="58.5136%" y="1279.50">da..</text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (23 samples, 2.41%)</title><rect x="58.2636%" y="1253" width="2.4059%" height="15" fill="rgb(216,56,42)" fg:x="557" fg:w="23"/><text x="58.5136%" y="1263.50">da..</text></g><g><title>databend-query`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (10 samples, 1.05%)</title><rect x="59.6234%" y="1237" width="1.0460%" height="15" fill="rgb(216,184,14)" fg:x="570" fg:w="10"/><text x="59.8734%" y="1247.50"></text></g><g><title>databend-query`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (10 samples, 1.05%)</title><rect x="59.6234%" y="1221" width="1.0460%" height="15" fill="rgb(237,187,27)" fg:x="570" fg:w="10"/><text x="59.8734%" y="1231.50"></text></g><g><title>databend-query`core::hash::impls::_&lt;impl core::hash::Hash for str&gt;::hash (10 samples, 1.05%)</title><rect x="59.6234%" y="1205" width="1.0460%" height="15" fill="rgb(219,65,3)" fg:x="570" fg:w="10"/><text x="59.8734%" y="1215.50"></text></g><g><title>databend-query`core::hash::Hasher::write_u8 (4 samples, 0.42%)</title><rect x="60.2510%" y="1189" width="0.4184%" height="15" fill="rgb(245,83,25)" fg:x="576" fg:w="4"/><text x="60.5010%" y="1199.50"></text></g><g><title>databend-query`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.31%)</title><rect x="60.3556%" y="1173" width="0.3138%" height="15" fill="rgb(214,205,45)" fg:x="577" fg:w="3"/><text x="60.6056%" y="1183.50"></text></g><g><title>databend-query`&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.31%)</title><rect x="60.3556%" y="1157" width="0.3138%" height="15" fill="rgb(241,20,18)" fg:x="577" fg:w="3"/><text x="60.6056%" y="1167.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.21%)</title><rect x="60.4603%" y="1141" width="0.2092%" height="15" fill="rgb(232,163,23)" fg:x="578" fg:w="2"/><text x="60.7103%" y="1151.50"></text></g><g><title>databend-query`core::hash::sip::u8to64_le (1 samples, 0.10%)</title><rect x="60.5649%" y="1125" width="0.1046%" height="15" fill="rgb(214,5,46)" fg:x="579" fg:w="1"/><text x="60.8149%" y="1135.50"></text></g><g><title>databend-query`core::slice::_&lt;impl [T]&gt;::get_unchecked (1 samples, 0.10%)</title><rect x="60.5649%" y="1109" width="0.1046%" height="15" fill="rgb(229,78,17)" fg:x="579" fg:w="1"/><text x="60.8149%" y="1119.50"></text></g><g><title>databend-query`hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.10%)</title><rect x="60.6695%" y="1269" width="0.1046%" height="15" fill="rgb(248,89,10)" fg:x="580" fg:w="1"/><text x="60.9195%" y="1279.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.10%)</title><rect x="60.7741%" y="1269" width="0.1046%" height="15" fill="rgb(248,54,15)" fg:x="581" fg:w="1"/><text x="61.0241%" y="1279.50"></text></g><g><title>databend-query`&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.10%)</title><rect x="61.2971%" y="1221" width="0.1046%" height="15" fill="rgb(223,116,6)" fg:x="586" fg:w="1"/><text x="61.5471%" y="1231.50"></text></g><g><title>databend-query`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="61.4017%" y="1221" width="0.1046%" height="15" fill="rgb(205,125,38)" fg:x="587" fg:w="1"/><text x="61.6517%" y="1231.50"></text></g><g><title>databend-query`hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.10%)</title><rect x="61.4017%" y="1205" width="0.1046%" height="15" fill="rgb(251,78,38)" fg:x="587" fg:w="1"/><text x="61.6517%" y="1215.50"></text></g><g><title>databend-query`hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.10%)</title><rect x="61.5063%" y="1205" width="0.1046%" height="15" fill="rgb(253,78,28)" fg:x="588" fg:w="1"/><text x="61.7563%" y="1215.50"></text></g><g><title>databend-query`core::cmp::impls::_&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.10%)</title><rect x="61.5063%" y="1189" width="0.1046%" height="15" fill="rgb(209,120,3)" fg:x="588" fg:w="1"/><text x="61.7563%" y="1199.50"></text></g><g><title>databend-query`core::str::traits::_&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.10%)</title><rect x="61.5063%" y="1173" width="0.1046%" height="15" fill="rgb(238,229,9)" fg:x="588" fg:w="1"/><text x="61.7563%" y="1183.50"></text></g><g><title>databend-query`core::cmp::impls::_&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.10%)</title><rect x="61.5063%" y="1157" width="0.1046%" height="15" fill="rgb(253,159,18)" fg:x="588" fg:w="1"/><text x="61.7563%" y="1167.50"></text></g><g><title>databend-query`core::slice::cmp::_&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.10%)</title><rect x="61.5063%" y="1141" width="0.1046%" height="15" fill="rgb(244,42,34)" fg:x="588" fg:w="1"/><text x="61.7563%" y="1151.50"></text></g><g><title>databend-query`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.10%)</title><rect x="61.5063%" y="1125" width="0.1046%" height="15" fill="rgb(224,8,7)" fg:x="588" fg:w="1"/><text x="61.7563%" y="1135.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (2 samples, 0.21%)</title><rect x="61.5063%" y="1221" width="0.2092%" height="15" fill="rgb(210,201,45)" fg:x="588" fg:w="2"/><text x="61.7563%" y="1231.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.10%)</title><rect x="61.6109%" y="1205" width="0.1046%" height="15" fill="rgb(252,185,21)" fg:x="589" fg:w="1"/><text x="61.8609%" y="1215.50"></text></g><g><title>databend-query`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::sub (1 samples, 0.10%)</title><rect x="61.6109%" y="1189" width="0.1046%" height="15" fill="rgb(223,131,1)" fg:x="589" fg:w="1"/><text x="61.8609%" y="1199.50"></text></g><g><title>databend-query`hashbrown::raw::generic::Group::load (1 samples, 0.10%)</title><rect x="61.7155%" y="1221" width="0.1046%" height="15" fill="rgb(245,141,16)" fg:x="590" fg:w="1"/><text x="61.9655%" y="1231.50"></text></g><g><title>databend-query`hashbrown::raw::generic::Group::match_byte (1 samples, 0.10%)</title><rect x="61.8201%" y="1221" width="0.1046%" height="15" fill="rgb(229,55,45)" fg:x="591" fg:w="1"/><text x="62.0701%" y="1231.50"></text></g><g><title>databend-query`core::num::_&lt;impl u64&gt;::from_ne_bytes (1 samples, 0.10%)</title><rect x="61.8201%" y="1205" width="0.1046%" height="15" fill="rgb(208,92,15)" fg:x="591" fg:w="1"/><text x="62.0701%" y="1215.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (12 samples, 1.26%)</title><rect x="60.8787%" y="1269" width="1.2552%" height="15" fill="rgb(234,185,47)" fg:x="582" fg:w="12"/><text x="61.1287%" y="1279.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 1.05%)</title><rect x="61.0879%" y="1253" width="1.0460%" height="15" fill="rgb(253,104,50)" fg:x="584" fg:w="10"/><text x="61.3379%" y="1263.50"></text></g><g><title>databend-query`hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (9 samples, 0.94%)</title><rect x="61.1925%" y="1237" width="0.9414%" height="15" fill="rgb(205,70,7)" fg:x="585" fg:w="9"/><text x="61.4425%" y="1247.50"></text></g><g><title>databend-query`hashbrown::raw::h2 (2 samples, 0.21%)</title><rect x="61.9247%" y="1221" width="0.2092%" height="15" fill="rgb(240,178,43)" fg:x="592" fg:w="2"/><text x="62.1747%" y="1231.50"></text></g><g><title>databend-query`core::cmp::Ord::min (1 samples, 0.10%)</title><rect x="62.0293%" y="1205" width="0.1046%" height="15" fill="rgb(214,112,2)" fg:x="593" fg:w="1"/><text x="62.2793%" y="1215.50"></text></g><g><title>databend-query`core::cmp::min_by (1 samples, 0.10%)</title><rect x="62.0293%" y="1189" width="0.1046%" height="15" fill="rgb(206,46,17)" fg:x="593" fg:w="1"/><text x="62.2793%" y="1199.50"></text></g><g><title>databend-query`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::sub (1 samples, 0.10%)</title><rect x="62.5523%" y="1237" width="0.1046%" height="15" fill="rgb(225,220,16)" fg:x="598" fg:w="1"/><text x="62.8023%" y="1247.50"></text></g><g><title>databend-query`hashbrown::raw::Bucket&lt;T&gt;::write (3 samples, 0.31%)</title><rect x="62.4477%" y="1253" width="0.3138%" height="15" fill="rgb(238,65,40)" fg:x="597" fg:w="3"/><text x="62.6977%" y="1263.50"></text></g><g><title>databend-query`hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.10%)</title><rect x="62.6569%" y="1237" width="0.1046%" height="15" fill="rgb(230,151,21)" fg:x="599" fg:w="1"/><text x="62.9069%" y="1247.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.10%)</title><rect x="62.7615%" y="1237" width="0.1046%" height="15" fill="rgb(218,58,49)" fg:x="600" fg:w="1"/><text x="63.0115%" y="1247.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.10%)</title><rect x="62.8661%" y="1237" width="0.1046%" height="15" fill="rgb(219,179,14)" fg:x="601" fg:w="1"/><text x="63.1161%" y="1247.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::bucket (3 samples, 0.31%)</title><rect x="62.7615%" y="1253" width="0.3138%" height="15" fill="rgb(223,72,1)" fg:x="600" fg:w="3"/><text x="63.0115%" y="1263.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::data_end (1 samples, 0.10%)</title><rect x="62.9707%" y="1237" width="0.1046%" height="15" fill="rgb(238,126,10)" fg:x="602" fg:w="1"/><text x="63.2207%" y="1247.50"></text></g><g><title>databend-query`core::mem::needs_drop (2 samples, 0.21%)</title><rect x="63.1799%" y="1237" width="0.2092%" height="15" fill="rgb(224,206,38)" fg:x="604" fg:w="2"/><text x="63.4299%" y="1247.50"></text></g><g><title>databend-query`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.21%)</title><rect x="63.7029%" y="1221" width="0.2092%" height="15" fill="rgb(212,201,54)" fg:x="609" fg:w="2"/><text x="63.9529%" y="1231.50"></text></g><g><title>databend-query`core::mem::swap (1 samples, 0.10%)</title><rect x="63.9121%" y="1221" width="0.1046%" height="15" fill="rgb(218,154,48)" fg:x="611" fg:w="1"/><text x="64.1621%" y="1231.50"></text></g><g><title>databend-query`core::mem::swap_simple (1 samples, 0.10%)</title><rect x="63.9121%" y="1205" width="0.1046%" height="15" fill="rgb(232,93,24)" fg:x="611" fg:w="1"/><text x="64.1621%" y="1215.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (1 samples, 0.10%)</title><rect x="64.0167%" y="1221" width="0.1046%" height="15" fill="rgb(245,30,21)" fg:x="612" fg:w="1"/><text x="64.2667%" y="1231.50"></text></g><g><title>databend-query`&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="64.0167%" y="1205" width="0.1046%" height="15" fill="rgb(242,148,29)" fg:x="612" fg:w="1"/><text x="64.2667%" y="1215.50"></text></g><g><title>databend-query`core::num::_&lt;impl usize&gt;::checked_add (2 samples, 0.21%)</title><rect x="64.8536%" y="1173" width="0.2092%" height="15" fill="rgb(244,153,54)" fg:x="620" fg:w="2"/><text x="65.1036%" y="1183.50"></text></g><g><title>databend-query`core::num::_&lt;impl usize&gt;::checked_mul (1 samples, 0.10%)</title><rect x="65.0628%" y="1173" width="0.1046%" height="15" fill="rgb(252,87,22)" fg:x="622" fg:w="1"/><text x="65.3128%" y="1183.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.10%)</title><rect x="65.1674%" y="1173" width="0.1046%" height="15" fill="rgb(210,51,29)" fg:x="623" fg:w="1"/><text x="65.4174%" y="1183.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.10%)</title><rect x="65.2720%" y="1173" width="0.1046%" height="15" fill="rgb(242,136,47)" fg:x="624" fg:w="1"/><text x="65.5220%" y="1183.50"></text></g><g><title>databend-query`hashbrown::raw::TableLayout::calculate_layout_for (1 samples, 0.10%)</title><rect x="65.3766%" y="1173" width="0.1046%" height="15" fill="rgb(238,68,4)" fg:x="625" fg:w="1"/><text x="65.6266%" y="1183.50"></text></g><g><title>databend-query`_rjem_mallocx (3 samples, 0.31%)</title><rect x="65.5858%" y="1077" width="0.3138%" height="15" fill="rgb(242,161,30)" fg:x="627" fg:w="3"/><text x="65.8358%" y="1087.50"></text></g><g><title>databend-query`ticker_tick (1 samples, 0.10%)</title><rect x="65.7950%" y="1061" width="0.1046%" height="15" fill="rgb(218,58,44)" fg:x="629" fg:w="1"/><text x="66.0450%" y="1071.50"></text></g><g><title>databend-query`ticker_ticks (1 samples, 0.10%)</title><rect x="65.7950%" y="1045" width="0.1046%" height="15" fill="rgb(252,125,32)" fg:x="629" fg:w="1"/><text x="66.0450%" y="1055.50"></text></g><g><title>databend-query`__rg_alloc (4 samples, 0.42%)</title><rect x="65.5858%" y="1109" width="0.4184%" height="15" fill="rgb(219,178,0)" fg:x="627" fg:w="4"/><text x="65.8358%" y="1119.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::alloc (4 samples, 0.42%)</title><rect x="65.5858%" y="1093" width="0.4184%" height="15" fill="rgb(213,152,7)" fg:x="627" fg:w="4"/><text x="65.8358%" y="1103.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.10%)</title><rect x="65.8996%" y="1077" width="0.1046%" height="15" fill="rgb(249,109,34)" fg:x="630" fg:w="1"/><text x="66.1496%" y="1087.50"></text></g><g><title>databend-query`alloc::alloc::alloc (5 samples, 0.52%)</title><rect x="65.5858%" y="1125" width="0.5230%" height="15" fill="rgb(232,96,21)" fg:x="627" fg:w="5"/><text x="65.8358%" y="1135.50"></text></g><g><title>databend-query`core::alloc::layout::Layout::align (1 samples, 0.10%)</title><rect x="66.0042%" y="1109" width="0.1046%" height="15" fill="rgb(228,27,39)" fg:x="631" fg:w="1"/><text x="66.2542%" y="1119.50"></text></g><g><title>databend-query`core::num::nonzero::NonZeroUsize::new_unchecked (1 samples, 0.10%)</title><rect x="66.0042%" y="1093" width="0.1046%" height="15" fill="rgb(211,182,52)" fg:x="631" fg:w="1"/><text x="66.2542%" y="1103.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.73%)</title><rect x="65.4812%" y="1157" width="0.7322%" height="15" fill="rgb(234,178,38)" fg:x="626" fg:w="7"/><text x="65.7312%" y="1167.50"></text></g><g><title>databend-query`alloc::alloc::Global::alloc_impl (7 samples, 0.73%)</title><rect x="65.4812%" y="1141" width="0.7322%" height="15" fill="rgb(221,111,3)" fg:x="626" fg:w="7"/><text x="65.7312%" y="1151.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (1 samples, 0.10%)</title><rect x="66.1088%" y="1125" width="0.1046%" height="15" fill="rgb(228,175,21)" fg:x="632" fg:w="1"/><text x="66.3588%" y="1135.50"></text></g><g><title>databend-query`core::ptr::slice_from_raw_parts_mut (1 samples, 0.10%)</title><rect x="66.1088%" y="1109" width="0.1046%" height="15" fill="rgb(228,174,43)" fg:x="632" fg:w="1"/><text x="66.3588%" y="1119.50"></text></g><g><title>databend-query`hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (21 samples, 2.20%)</title><rect x="64.1213%" y="1221" width="2.1967%" height="15" fill="rgb(211,191,0)" fg:x="613" fg:w="21"/><text x="64.3713%" y="1231.50">d..</text></g><g><title>databend-query`hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (21 samples, 2.20%)</title><rect x="64.1213%" y="1205" width="2.1967%" height="15" fill="rgb(253,117,3)" fg:x="613" fg:w="21"/><text x="64.3713%" y="1215.50">d..</text></g><g><title>databend-query`hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (16 samples, 1.67%)</title><rect x="64.6444%" y="1189" width="1.6736%" height="15" fill="rgb(241,127,19)" fg:x="618" fg:w="16"/><text x="64.8944%" y="1199.50"></text></g><g><title>databend-query`hashbrown::raw::alloc::inner::do_alloc (8 samples, 0.84%)</title><rect x="65.4812%" y="1173" width="0.8368%" height="15" fill="rgb(218,103,12)" fg:x="626" fg:w="8"/><text x="65.7312%" y="1183.50"></text></g><g><title>databend-query`core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.10%)</title><rect x="66.2134%" y="1157" width="0.1046%" height="15" fill="rgb(236,214,43)" fg:x="633" fg:w="1"/><text x="66.4634%" y="1167.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (29 samples, 3.03%)</title><rect x="63.3891%" y="1237" width="3.0335%" height="15" fill="rgb(244,144,19)" fg:x="606" fg:w="29"/><text x="63.6391%" y="1247.50">dat..</text></g><g><title>databend-query`hashbrown::raw::TableLayout::new (1 samples, 0.10%)</title><rect x="66.3180%" y="1221" width="0.1046%" height="15" fill="rgb(246,188,10)" fg:x="634" fg:w="1"/><text x="66.5680%" y="1231.50"></text></g><g><title>databend-query`core::cmp::Ord::max (1 samples, 0.10%)</title><rect x="66.3180%" y="1205" width="0.1046%" height="15" fill="rgb(212,193,33)" fg:x="634" fg:w="1"/><text x="66.5680%" y="1215.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (33 samples, 3.45%)</title><rect x="63.0753%" y="1253" width="3.4519%" height="15" fill="rgb(241,51,29)" fg:x="603" fg:w="33"/><text x="63.3253%" y="1263.50">dat..</text></g><g><title>databend-query`hashbrown::raw::RawTableInner&lt;A&gt;::buckets (1 samples, 0.10%)</title><rect x="66.4226%" y="1237" width="0.1046%" height="15" fill="rgb(211,58,19)" fg:x="635" fg:w="1"/><text x="66.6726%" y="1247.50"></text></g><g><title>databend-query`hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (2 samples, 0.21%)</title><rect x="66.7364%" y="1237" width="0.2092%" height="15" fill="rgb(229,111,26)" fg:x="638" fg:w="2"/><text x="66.9864%" y="1247.50"></text></g><g><title>databend-query`hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (1 samples, 0.10%)</title><rect x="66.9456%" y="1237" width="0.1046%" height="15" fill="rgb(213,115,40)" fg:x="640" fg:w="1"/><text x="67.1956%" y="1247.50"></text></g><g><title>databend-query`hashbrown::raw::generic::Group::load (3 samples, 0.31%)</title><rect x="67.0502%" y="1237" width="0.3138%" height="15" fill="rgb(209,56,44)" fg:x="641" fg:w="3"/><text x="67.3002%" y="1247.50"></text></g><g><title>databend-query`core::ptr::read_unaligned (3 samples, 0.31%)</title><rect x="67.0502%" y="1221" width="0.3138%" height="15" fill="rgb(230,108,32)" fg:x="641" fg:w="3"/><text x="67.3002%" y="1231.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.10%)</title><rect x="67.2594%" y="1205" width="0.1046%" height="15" fill="rgb(216,165,31)" fg:x="643" fg:w="1"/><text x="67.5094%" y="1215.50"></text></g><g><title>databend-query`core::num::_&lt;impl u64&gt;::from_ne_bytes (1 samples, 0.10%)</title><rect x="67.3640%" y="1221" width="0.1046%" height="15" fill="rgb(218,122,21)" fg:x="644" fg:w="1"/><text x="67.6140%" y="1231.50"></text></g><g><title>databend-query`hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (10 samples, 1.05%)</title><rect x="66.5272%" y="1253" width="1.0460%" height="15" fill="rgb(223,224,47)" fg:x="636" fg:w="10"/><text x="66.7772%" y="1263.50"></text></g><g><title>databend-query`hashbrown::raw::generic::Group::match_empty_or_deleted (2 samples, 0.21%)</title><rect x="67.3640%" y="1237" width="0.2092%" height="15" fill="rgb(238,102,44)" fg:x="644" fg:w="2"/><text x="67.6140%" y="1247.50"></text></g><g><title>databend-query`hashbrown::raw::generic::repeat (1 samples, 0.10%)</title><rect x="67.4686%" y="1221" width="0.1046%" height="15" fill="rgb(236,46,40)" fg:x="645" fg:w="1"/><text x="67.7186%" y="1231.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::insert (54 samples, 5.65%)</title><rect x="62.1339%" y="1269" width="5.6485%" height="15" fill="rgb(247,202,50)" fg:x="594" fg:w="54"/><text x="62.3839%" y="1279.50">databen..</text></g><g><title>databend-query`hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (2 samples, 0.21%)</title><rect x="67.5732%" y="1253" width="0.2092%" height="15" fill="rgb(209,99,20)" fg:x="646" fg:w="2"/><text x="67.8232%" y="1263.50"></text></g><g><title>databend-query`hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (2 samples, 0.21%)</title><rect x="67.5732%" y="1237" width="0.2092%" height="15" fill="rgb(252,27,34)" fg:x="646" fg:w="2"/><text x="67.8232%" y="1247.50"></text></g><g><title>databend-query`hashbrown::raw::h2 (1 samples, 0.10%)</title><rect x="67.6778%" y="1221" width="0.1046%" height="15" fill="rgb(215,206,23)" fg:x="647" fg:w="1"/><text x="67.9278%" y="1231.50"></text></g><g><title>databend-query`core::cmp::Ord::min (1 samples, 0.10%)</title><rect x="67.6778%" y="1205" width="0.1046%" height="15" fill="rgb(212,135,36)" fg:x="647" fg:w="1"/><text x="67.9278%" y="1215.50"></text></g><g><title>databend-query`core::ops::function::FnOnce::call_once (1 samples, 0.10%)</title><rect x="67.6778%" y="1189" width="0.1046%" height="15" fill="rgb(240,189,1)" fg:x="647" fg:w="1"/><text x="67.9278%" y="1199.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (95 samples, 9.94%)</title><rect x="57.9498%" y="1285" width="9.9372%" height="15" fill="rgb(242,56,20)" fg:x="554" fg:w="95"/><text x="58.1998%" y="1295.50">databend-query..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.10%)</title><rect x="67.7824%" y="1269" width="0.1046%" height="15" fill="rgb(247,132,33)" fg:x="648" fg:w="1"/><text x="68.0324%" y="1279.50"></text></g><g><title>databend-query`hashbrown::map::equivalent_key (1 samples, 0.10%)</title><rect x="67.8870%" y="1285" width="0.1046%" height="15" fill="rgb(208,149,11)" fg:x="649" fg:w="1"/><text x="68.1370%" y="1295.50"></text></g><g><title>databend-query`std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (97 samples, 10.15%)</title><rect x="57.9498%" y="1301" width="10.1464%" height="15" fill="rgb(211,33,11)" fg:x="554" fg:w="97"/><text x="58.1998%" y="1311.50">databend-query`..</text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.10%)</title><rect x="67.9916%" y="1285" width="0.1046%" height="15" fill="rgb(221,29,38)" fg:x="650" fg:w="1"/><text x="68.2416%" y="1295.50"></text></g><g><title>databend-query`hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.10%)</title><rect x="68.0962%" y="1253" width="0.1046%" height="15" fill="rgb(206,182,49)" fg:x="651" fg:w="1"/><text x="68.3462%" y="1263.50"></text></g><g><title>databend-query`hashbrown::raw::generic::Group::load_aligned (1 samples, 0.10%)</title><rect x="68.0962%" y="1237" width="0.1046%" height="15" fill="rgb(216,140,1)" fg:x="651" fg:w="1"/><text x="68.3462%" y="1247.50"></text></g><g><title>databend-query`std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (2 samples, 0.21%)</title><rect x="68.0962%" y="1301" width="0.2092%" height="15" fill="rgb(232,57,40)" fg:x="651" fg:w="2"/><text x="68.3462%" y="1311.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (2 samples, 0.21%)</title><rect x="68.0962%" y="1285" width="0.2092%" height="15" fill="rgb(224,186,18)" fg:x="651" fg:w="2"/><text x="68.3462%" y="1295.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::iter (2 samples, 0.21%)</title><rect x="68.0962%" y="1269" width="0.2092%" height="15" fill="rgb(215,121,11)" fg:x="651" fg:w="2"/><text x="68.3462%" y="1279.50"></text></g><g><title>databend-query`hashbrown::raw::generic::Group::load_aligned (1 samples, 0.10%)</title><rect x="68.2008%" y="1253" width="0.1046%" height="15" fill="rgb(245,147,10)" fg:x="652" fg:w="1"/><text x="68.4508%" y="1263.50"></text></g><g><title>databend-query`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.10%)</title><rect x="68.4100%" y="1221" width="0.1046%" height="15" fill="rgb(238,153,13)" fg:x="654" fg:w="1"/><text x="68.6600%" y="1231.50"></text></g><g><title>databend-query`std::collections::hash::map::RandomState::new::KEYS::__getit (2 samples, 0.21%)</title><rect x="68.5146%" y="1205" width="0.2092%" height="15" fill="rgb(233,108,0)" fg:x="655" fg:w="2"/><text x="68.7646%" y="1215.50"></text></g><g><title>databend-query`std::thread::local::fast::Key&lt;T&gt;::get (2 samples, 0.21%)</title><rect x="68.5146%" y="1189" width="0.2092%" height="15" fill="rgb(212,157,17)" fg:x="655" fg:w="2"/><text x="68.7646%" y="1199.50"></text></g><g><title>databend-query`std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (2 samples, 0.21%)</title><rect x="68.5146%" y="1173" width="0.2092%" height="15" fill="rgb(225,213,38)" fg:x="655" fg:w="2"/><text x="68.7646%" y="1183.50"></text></g><g><title>databend-query`core::mem::replace (1 samples, 0.10%)</title><rect x="68.7238%" y="1157" width="0.1046%" height="15" fill="rgb(248,16,11)" fg:x="657" fg:w="1"/><text x="68.9738%" y="1167.50"></text></g><g><title>databend-query`&lt;databend_query::pipelines::new::processors::transforms::transform_expression::ExpressionTransformImpl&lt;_&gt; as databend_query::pipelines::new::processors::transforms::transform::Transform&gt;::transform (301 samples, 31.49%)</title><rect x="37.4477%" y="1333" width="31.4854%" height="15" fill="rgb(241,33,4)" fg:x="358" fg:w="301"/><text x="37.6977%" y="1343.50">databend-query`&lt;databend_query::pipelines::new::pro..</text></g><g><title>databend-query`databend_query::pipelines::transforms::transform_expression_executor::ExpressionExecutor::execute (264 samples, 27.62%)</title><rect x="41.3180%" y="1317" width="27.6151%" height="15" fill="rgb(222,26,43)" fg:x="395" fg:w="264"/><text x="41.5680%" y="1327.50">databend-query`databend_query::pipelines::tr..</text></g><g><title>databend-query`std::collections::hash::map::HashMap&lt;K,V&gt;::new (6 samples, 0.63%)</title><rect x="68.3054%" y="1301" width="0.6276%" height="15" fill="rgb(243,29,36)" fg:x="653" fg:w="6"/><text x="68.5554%" y="1311.50"></text></g><g><title>databend-query`&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (6 samples, 0.63%)</title><rect x="68.3054%" y="1285" width="0.6276%" height="15" fill="rgb(241,9,27)" fg:x="653" fg:w="6"/><text x="68.5554%" y="1295.50"></text></g><g><title>databend-query`&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (6 samples, 0.63%)</title><rect x="68.3054%" y="1269" width="0.6276%" height="15" fill="rgb(205,117,26)" fg:x="653" fg:w="6"/><text x="68.5554%" y="1279.50"></text></g><g><title>databend-query`std::collections::hash::map::RandomState::new (5 samples, 0.52%)</title><rect x="68.4100%" y="1253" width="0.5230%" height="15" fill="rgb(209,80,39)" fg:x="654" fg:w="5"/><text x="68.6600%" y="1263.50"></text></g><g><title>databend-query`std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.52%)</title><rect x="68.4100%" y="1237" width="0.5230%" height="15" fill="rgb(239,155,6)" fg:x="654" fg:w="5"/><text x="68.6600%" y="1247.50"></text></g><g><title>databend-query`std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.42%)</title><rect x="68.5146%" y="1221" width="0.4184%" height="15" fill="rgb(212,104,12)" fg:x="655" fg:w="4"/><text x="68.7646%" y="1231.50"></text></g><g><title>databend-query`std::collections::hash::map::RandomState::new::_{{closure}} (2 samples, 0.21%)</title><rect x="68.7238%" y="1205" width="0.2092%" height="15" fill="rgb(234,204,3)" fg:x="657" fg:w="2"/><text x="68.9738%" y="1215.50"></text></g><g><title>databend-query`core::cell::Cell&lt;T&gt;::set (2 samples, 0.21%)</title><rect x="68.7238%" y="1189" width="0.2092%" height="15" fill="rgb(251,218,7)" fg:x="657" fg:w="2"/><text x="68.9738%" y="1199.50"></text></g><g><title>databend-query`core::cell::Cell&lt;T&gt;::replace (2 samples, 0.21%)</title><rect x="68.7238%" y="1173" width="0.2092%" height="15" fill="rgb(221,81,32)" fg:x="657" fg:w="2"/><text x="68.9738%" y="1183.50"></text></g><g><title>databend-query`core::ptr::read (1 samples, 0.10%)</title><rect x="68.8285%" y="1157" width="0.1046%" height="15" fill="rgb(214,152,26)" fg:x="658" fg:w="1"/><text x="69.0785%" y="1167.50"></text></g><g><title>databend-query`&lt;databend_query::pipelines::new::processors::transforms::transform::Transformer&lt;T&gt; as databend_query::pipelines::new::processors::processor::Processor&gt;::process (302 samples, 31.59%)</title><rect x="37.4477%" y="1349" width="31.5900%" height="15" fill="rgb(223,22,3)" fg:x="358" fg:w="302"/><text x="37.6977%" y="1359.50">databend-query`&lt;databend_query::pipelines::new::pro..</text></g><g><title>databend-query`core::option::Option&lt;T&gt;::take (1 samples, 0.10%)</title><rect x="68.9331%" y="1333" width="0.1046%" height="15" fill="rgb(207,174,7)" fg:x="659" fg:w="1"/><text x="69.1831%" y="1343.50"></text></g><g><title>databend-query`core::ptr::read (1 samples, 0.10%)</title><rect x="68.9331%" y="1317" width="0.1046%" height="15" fill="rgb(224,19,52)" fg:x="659" fg:w="1"/><text x="69.1831%" y="1327.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="69.0377%" y="1301" width="0.1046%" height="15" fill="rgb(228,24,14)" fg:x="660" fg:w="1"/><text x="69.2877%" y="1311.50"></text></g><g><title>databend-query`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.10%)</title><rect x="69.0377%" y="1285" width="0.1046%" height="15" fill="rgb(230,153,43)" fg:x="660" fg:w="1"/><text x="69.2877%" y="1295.50"></text></g><g><title>databend-query`&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="69.1423%" y="1285" width="0.1046%" height="15" fill="rgb(231,106,12)" fg:x="661" fg:w="1"/><text x="69.3923%" y="1295.50"></text></g><g><title>databend-query`__rg_alloc (1 samples, 0.10%)</title><rect x="69.1423%" y="1269" width="0.1046%" height="15" fill="rgb(215,92,2)" fg:x="661" fg:w="1"/><text x="69.3923%" y="1279.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.10%)</title><rect x="69.1423%" y="1253" width="0.1046%" height="15" fill="rgb(249,143,25)" fg:x="661" fg:w="1"/><text x="69.3923%" y="1263.50"></text></g><g><title>databend-query`_rjem_je_malloc_initialized (1 samples, 0.10%)</title><rect x="69.1423%" y="1237" width="0.1046%" height="15" fill="rgb(252,7,35)" fg:x="661" fg:w="1"/><text x="69.3923%" y="1247.50"></text></g><g><title>databend-query`&lt;common_datavalues::data_field::DataField as core::clone::Clone&gt;::clone (2 samples, 0.21%)</title><rect x="69.1423%" y="1301" width="0.2092%" height="15" fill="rgb(216,69,40)" fg:x="661" fg:w="2"/><text x="69.3923%" y="1311.50"></text></g><g><title>databend-query`&lt;common_datavalues::types::data_type::DataTypeImpl as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="69.2469%" y="1285" width="0.1046%" height="15" fill="rgb(240,36,33)" fg:x="662" fg:w="1"/><text x="69.4969%" y="1295.50"></text></g><g><title>databend-query`&lt;common_datavalues::types::type_primitive::PrimitiveDataType&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="69.2469%" y="1269" width="0.1046%" height="15" fill="rgb(231,128,14)" fg:x="662" fg:w="1"/><text x="69.4969%" y="1279.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.10%)</title><rect x="69.3515%" y="1301" width="0.1046%" height="15" fill="rgb(245,143,14)" fg:x="663" fg:w="1"/><text x="69.6015%" y="1311.50"></text></g><g><title>databend-query`_rjem_je_large_ralloc (1 samples, 0.10%)</title><rect x="69.4561%" y="1125" width="0.1046%" height="15" fill="rgb(222,130,28)" fg:x="664" fg:w="1"/><text x="69.7061%" y="1135.50"></text></g><g><title>databend-query`large_ralloc_move_helper (1 samples, 0.10%)</title><rect x="69.4561%" y="1109" width="0.1046%" height="15" fill="rgb(212,10,48)" fg:x="664" fg:w="1"/><text x="69.7061%" y="1119.50"></text></g><g><title>databend-query`_rjem_je_large_malloc (1 samples, 0.10%)</title><rect x="69.4561%" y="1093" width="0.1046%" height="15" fill="rgb(254,118,45)" fg:x="664" fg:w="1"/><text x="69.7061%" y="1103.50"></text></g><g><title>databend-query`_rjem_je_large_palloc (1 samples, 0.10%)</title><rect x="69.4561%" y="1077" width="0.1046%" height="15" fill="rgb(228,6,45)" fg:x="664" fg:w="1"/><text x="69.7061%" y="1087.50"></text></g><g><title>databend-query`_rjem_je_arena_extent_alloc_large (1 samples, 0.10%)</title><rect x="69.4561%" y="1061" width="0.1046%" height="15" fill="rgb(241,18,35)" fg:x="664" fg:w="1"/><text x="69.7061%" y="1071.50"></text></g><g><title>databend-query`_rjem_je_extent_alloc_wrapper (1 samples, 0.10%)</title><rect x="69.4561%" y="1045" width="0.1046%" height="15" fill="rgb(227,214,53)" fg:x="664" fg:w="1"/><text x="69.7061%" y="1055.50"></text></g><g><title>databend-query`extent_alloc_wrapper_hard (1 samples, 0.10%)</title><rect x="69.4561%" y="1029" width="0.1046%" height="15" fill="rgb(224,107,51)" fg:x="664" fg:w="1"/><text x="69.7061%" y="1039.50"></text></g><g><title>databend-query`extent_register (1 samples, 0.10%)</title><rect x="69.4561%" y="1013" width="0.1046%" height="15" fill="rgb(248,60,28)" fg:x="664" fg:w="1"/><text x="69.7061%" y="1023.50"></text></g><g><title>databend-query`extent_register_impl (1 samples, 0.10%)</title><rect x="69.4561%" y="997" width="0.1046%" height="15" fill="rgb(249,101,23)" fg:x="664" fg:w="1"/><text x="69.7061%" y="1007.50"></text></g><g><title>databend-query`extent_lock (1 samples, 0.10%)</title><rect x="69.4561%" y="981" width="0.1046%" height="15" fill="rgb(228,51,19)" fg:x="664" fg:w="1"/><text x="69.7061%" y="991.50"></text></g><g><title>databend-query`mutex_pool_lock (1 samples, 0.10%)</title><rect x="69.4561%" y="965" width="0.1046%" height="15" fill="rgb(213,20,6)" fg:x="664" fg:w="1"/><text x="69.7061%" y="975.50"></text></g><g><title>databend-query`mutex_pool_assert_not_held (1 samples, 0.10%)</title><rect x="69.4561%" y="949" width="0.1046%" height="15" fill="rgb(212,124,10)" fg:x="664" fg:w="1"/><text x="69.7061%" y="959.50"></text></g><g><title>databend-query`malloc_mutex_assert_not_owner (1 samples, 0.10%)</title><rect x="69.4561%" y="933" width="0.1046%" height="15" fill="rgb(248,3,40)" fg:x="664" fg:w="1"/><text x="69.7061%" y="943.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.21%)</title><rect x="69.4561%" y="1301" width="0.2092%" height="15" fill="rgb(223,178,23)" fg:x="664" fg:w="2"/><text x="69.7061%" y="1311.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.21%)</title><rect x="69.4561%" y="1285" width="0.2092%" height="15" fill="rgb(240,132,45)" fg:x="664" fg:w="2"/><text x="69.7061%" y="1295.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.21%)</title><rect x="69.4561%" y="1269" width="0.2092%" height="15" fill="rgb(245,164,36)" fg:x="664" fg:w="2"/><text x="69.7061%" y="1279.50"></text></g><g><title>databend-query`alloc::raw_vec::finish_grow (2 samples, 0.21%)</title><rect x="69.4561%" y="1253" width="0.2092%" height="15" fill="rgb(231,188,53)" fg:x="664" fg:w="2"/><text x="69.7061%" y="1263.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.21%)</title><rect x="69.4561%" y="1237" width="0.2092%" height="15" fill="rgb(237,198,39)" fg:x="664" fg:w="2"/><text x="69.7061%" y="1247.50"></text></g><g><title>databend-query`alloc::alloc::Global::grow_impl (2 samples, 0.21%)</title><rect x="69.4561%" y="1221" width="0.2092%" height="15" fill="rgb(223,120,35)" fg:x="664" fg:w="2"/><text x="69.7061%" y="1231.50"></text></g><g><title>databend-query`alloc::alloc::realloc (2 samples, 0.21%)</title><rect x="69.4561%" y="1205" width="0.2092%" height="15" fill="rgb(253,107,49)" fg:x="664" fg:w="2"/><text x="69.7061%" y="1215.50"></text></g><g><title>databend-query`__rg_realloc (2 samples, 0.21%)</title><rect x="69.4561%" y="1189" width="0.2092%" height="15" fill="rgb(216,44,31)" fg:x="664" fg:w="2"/><text x="69.7061%" y="1199.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::realloc (2 samples, 0.21%)</title><rect x="69.4561%" y="1173" width="0.2092%" height="15" fill="rgb(253,87,21)" fg:x="664" fg:w="2"/><text x="69.7061%" y="1183.50"></text></g><g><title>databend-query`_rjem_rallocx (2 samples, 0.21%)</title><rect x="69.4561%" y="1157" width="0.2092%" height="15" fill="rgb(226,18,2)" fg:x="664" fg:w="2"/><text x="69.7061%" y="1167.50"></text></g><g><title>databend-query`_rjem_je_arena_ralloc (2 samples, 0.21%)</title><rect x="69.4561%" y="1141" width="0.2092%" height="15" fill="rgb(216,8,46)" fg:x="664" fg:w="2"/><text x="69.7061%" y="1151.50"></text></g><g><title>databend-query`arena_ralloc_move_helper (1 samples, 0.10%)</title><rect x="69.5607%" y="1125" width="0.1046%" height="15" fill="rgb(226,140,39)" fg:x="665" fg:w="1"/><text x="69.8107%" y="1135.50"></text></g><g><title>databend-query`_rjem_je_tcache_alloc_small_hard (1 samples, 0.10%)</title><rect x="69.5607%" y="1109" width="0.1046%" height="15" fill="rgb(221,194,54)" fg:x="665" fg:w="1"/><text x="69.8107%" y="1119.50"></text></g><g><title>databend-query`_rjem_je_arena_tcache_fill_small (1 samples, 0.10%)</title><rect x="69.5607%" y="1093" width="0.1046%" height="15" fill="rgb(213,92,11)" fg:x="665" fg:w="1"/><text x="69.8107%" y="1103.50"></text></g><g><title>databend-query`arena_bin_malloc_hard (1 samples, 0.10%)</title><rect x="69.5607%" y="1077" width="0.1046%" height="15" fill="rgb(229,162,46)" fg:x="665" fg:w="1"/><text x="69.8107%" y="1087.50"></text></g><g><title>databend-query`arena_bin_nonfull_slab_get (1 samples, 0.10%)</title><rect x="69.5607%" y="1061" width="0.1046%" height="15" fill="rgb(214,111,36)" fg:x="665" fg:w="1"/><text x="69.8107%" y="1071.50"></text></g><g><title>databend-query`arena_slab_alloc (1 samples, 0.10%)</title><rect x="69.5607%" y="1045" width="0.1046%" height="15" fill="rgb(207,6,21)" fg:x="665" fg:w="1"/><text x="69.8107%" y="1055.50"></text></g><g><title>databend-query`arena_slab_alloc_hard (1 samples, 0.10%)</title><rect x="69.5607%" y="1029" width="0.1046%" height="15" fill="rgb(213,127,38)" fg:x="665" fg:w="1"/><text x="69.8107%" y="1039.50"></text></g><g><title>databend-query`_rjem_je_extent_alloc_wrapper (1 samples, 0.10%)</title><rect x="69.5607%" y="1013" width="0.1046%" height="15" fill="rgb(238,118,32)" fg:x="665" fg:w="1"/><text x="69.8107%" y="1023.50"></text></g><g><title>databend-query`extent_alloc_wrapper_hard (1 samples, 0.10%)</title><rect x="69.5607%" y="997" width="0.1046%" height="15" fill="rgb(240,139,39)" fg:x="665" fg:w="1"/><text x="69.8107%" y="1007.50"></text></g><g><title>databend-query`extent_register (1 samples, 0.10%)</title><rect x="69.5607%" y="981" width="0.1046%" height="15" fill="rgb(235,10,37)" fg:x="665" fg:w="1"/><text x="69.8107%" y="991.50"></text></g><g><title>databend-query`extent_register_impl (1 samples, 0.10%)</title><rect x="69.5607%" y="965" width="0.1046%" height="15" fill="rgb(249,171,38)" fg:x="665" fg:w="1"/><text x="69.8107%" y="975.50"></text></g><g><title>databend-query`extent_lock (1 samples, 0.10%)</title><rect x="69.5607%" y="949" width="0.1046%" height="15" fill="rgb(242,144,32)" fg:x="665" fg:w="1"/><text x="69.8107%" y="959.50"></text></g><g><title>databend-query`mutex_pool_lock (1 samples, 0.10%)</title><rect x="69.5607%" y="933" width="0.1046%" height="15" fill="rgb(217,117,21)" fg:x="665" fg:w="1"/><text x="69.8107%" y="943.50"></text></g><g><title>databend-query`mutex_pool_assert_not_held (1 samples, 0.10%)</title><rect x="69.5607%" y="917" width="0.1046%" height="15" fill="rgb(249,87,1)" fg:x="665" fg:w="1"/><text x="69.8107%" y="927.50"></text></g><g><title>databend-query`malloc_mutex_assert_not_owner (1 samples, 0.10%)</title><rect x="69.5607%" y="901" width="0.1046%" height="15" fill="rgb(248,196,48)" fg:x="665" fg:w="1"/><text x="69.8107%" y="911.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.10%)</title><rect x="69.7699%" y="1253" width="0.1046%" height="15" fill="rgb(251,206,33)" fg:x="667" fg:w="1"/><text x="70.0199%" y="1263.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.10%)</title><rect x="69.7699%" y="1237" width="0.1046%" height="15" fill="rgb(232,141,28)" fg:x="667" fg:w="1"/><text x="70.0199%" y="1247.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.21%)</title><rect x="69.7699%" y="1269" width="0.2092%" height="15" fill="rgb(209,167,14)" fg:x="667" fg:w="2"/><text x="70.0199%" y="1279.50"></text></g><g><title>databend-query`core::slice::raw::from_raw_parts (1 samples, 0.10%)</title><rect x="69.8745%" y="1253" width="0.1046%" height="15" fill="rgb(225,11,50)" fg:x="668" fg:w="1"/><text x="70.1245%" y="1263.50"></text></g><g><title>databend-query`core::ptr::slice_from_raw_parts (1 samples, 0.10%)</title><rect x="69.8745%" y="1237" width="0.1046%" height="15" fill="rgb(209,50,20)" fg:x="668" fg:w="1"/><text x="70.1245%" y="1247.50"></text></g><g><title>databend-query`&lt;common_datavalues::data_field::DataField as core::clone::Clone&gt;::clone (2 samples, 0.21%)</title><rect x="70.0837%" y="1221" width="0.2092%" height="15" fill="rgb(212,17,46)" fg:x="670" fg:w="2"/><text x="70.3337%" y="1231.50"></text></g><g><title>databend-query`&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.21%)</title><rect x="70.0837%" y="1205" width="0.2092%" height="15" fill="rgb(216,101,39)" fg:x="670" fg:w="2"/><text x="70.3337%" y="1215.50"></text></g><g><title>databend-query`__rg_alloc (2 samples, 0.21%)</title><rect x="70.0837%" y="1189" width="0.2092%" height="15" fill="rgb(212,228,48)" fg:x="670" fg:w="2"/><text x="70.3337%" y="1199.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::alloc (2 samples, 0.21%)</title><rect x="70.0837%" y="1173" width="0.2092%" height="15" fill="rgb(250,6,50)" fg:x="670" fg:w="2"/><text x="70.3337%" y="1183.50"></text></g><g><title>databend-query`_rjem_mallocx (2 samples, 0.21%)</title><rect x="70.0837%" y="1157" width="0.2092%" height="15" fill="rgb(250,160,48)" fg:x="670" fg:w="2"/><text x="70.3337%" y="1167.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="70.2929%" y="1205" width="0.1046%" height="15" fill="rgb(244,216,33)" fg:x="672" fg:w="1"/><text x="70.5429%" y="1215.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.21%)</title><rect x="70.2929%" y="1221" width="0.2092%" height="15" fill="rgb(207,157,5)" fg:x="672" fg:w="2"/><text x="70.5429%" y="1231.50"></text></g><g><title>databend-query`&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.10%)</title><rect x="70.3975%" y="1205" width="0.1046%" height="15" fill="rgb(228,199,8)" fg:x="673" fg:w="1"/><text x="70.6475%" y="1215.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::spare_capacity_mut (1 samples, 0.10%)</title><rect x="70.5021%" y="1221" width="0.1046%" height="15" fill="rgb(227,80,20)" fg:x="674" fg:w="1"/><text x="70.7521%" y="1231.50"></text></g><g><title>databend-query`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.63%)</title><rect x="70.0837%" y="1237" width="0.6276%" height="15" fill="rgb(222,9,33)" fg:x="670" fg:w="6"/><text x="70.3337%" y="1247.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="70.6067%" y="1221" width="0.1046%" height="15" fill="rgb(239,44,28)" fg:x="675" fg:w="1"/><text x="70.8567%" y="1231.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="70.6067%" y="1205" width="0.1046%" height="15" fill="rgb(249,187,43)" fg:x="675" fg:w="1"/><text x="70.8567%" y="1215.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="70.6067%" y="1189" width="0.1046%" height="15" fill="rgb(216,141,28)" fg:x="675" fg:w="1"/><text x="70.8567%" y="1199.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="70.6067%" y="1173" width="0.1046%" height="15" fill="rgb(230,154,53)" fg:x="675" fg:w="1"/><text x="70.8567%" y="1183.50"></text></g><g><title>databend-query`alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="70.6067%" y="1157" width="0.1046%" height="15" fill="rgb(227,82,4)" fg:x="675" fg:w="1"/><text x="70.8567%" y="1167.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 1.15%)</title><rect x="69.6653%" y="1285" width="1.1506%" height="15" fill="rgb(220,107,16)" fg:x="666" fg:w="11"/><text x="69.9153%" y="1295.50"></text></g><g><title>databend-query`alloc::slice::_&lt;impl [T]&gt;::to_vec_in (8 samples, 0.84%)</title><rect x="69.9791%" y="1269" width="0.8368%" height="15" fill="rgb(207,187,2)" fg:x="669" fg:w="8"/><text x="70.2291%" y="1279.50"></text></g><g><title>databend-query`alloc::slice::hack::to_vec (7 samples, 0.73%)</title><rect x="70.0837%" y="1253" width="0.7322%" height="15" fill="rgb(210,162,52)" fg:x="670" fg:w="7"/><text x="70.3337%" y="1263.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::take (1 samples, 0.10%)</title><rect x="70.7113%" y="1237" width="0.1046%" height="15" fill="rgb(217,216,49)" fg:x="676" fg:w="1"/><text x="70.9613%" y="1247.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.42%)</title><rect x="70.8159%" y="1253" width="0.4184%" height="15" fill="rgb(218,146,49)" fg:x="677" fg:w="4"/><text x="71.0659%" y="1263.50"></text></g><g><title>databend-query`alloc::alloc::Global::alloc_impl (4 samples, 0.42%)</title><rect x="70.8159%" y="1237" width="0.4184%" height="15" fill="rgb(216,55,40)" fg:x="677" fg:w="4"/><text x="71.0659%" y="1247.50"></text></g><g><title>databend-query`alloc::alloc::alloc (4 samples, 0.42%)</title><rect x="70.8159%" y="1221" width="0.4184%" height="15" fill="rgb(208,196,21)" fg:x="677" fg:w="4"/><text x="71.0659%" y="1231.50"></text></g><g><title>databend-query`__rg_alloc (4 samples, 0.42%)</title><rect x="70.8159%" y="1205" width="0.4184%" height="15" fill="rgb(242,117,42)" fg:x="677" fg:w="4"/><text x="71.0659%" y="1215.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::alloc (4 samples, 0.42%)</title><rect x="70.8159%" y="1189" width="0.4184%" height="15" fill="rgb(210,11,23)" fg:x="677" fg:w="4"/><text x="71.0659%" y="1199.50"></text></g><g><title>databend-query`_rjem_mallocx (4 samples, 0.42%)</title><rect x="70.8159%" y="1173" width="0.4184%" height="15" fill="rgb(217,110,2)" fg:x="677" fg:w="4"/><text x="71.0659%" y="1183.50"></text></g><g><title>databend-query`_rjem_je_tcache_alloc_small_hard (1 samples, 0.10%)</title><rect x="71.1297%" y="1157" width="0.1046%" height="15" fill="rgb(229,77,54)" fg:x="680" fg:w="1"/><text x="71.3797%" y="1167.50"></text></g><g><title>databend-query`_rjem_je_arena_tcache_fill_small (1 samples, 0.10%)</title><rect x="71.1297%" y="1141" width="0.1046%" height="15" fill="rgb(218,53,16)" fg:x="680" fg:w="1"/><text x="71.3797%" y="1151.50"></text></g><g><title>databend-query`arena_slab_reg_alloc_batch (1 samples, 0.10%)</title><rect x="71.1297%" y="1125" width="0.1046%" height="15" fill="rgb(215,38,13)" fg:x="680" fg:w="1"/><text x="71.3797%" y="1135.50"></text></g><g><title>databend-query`bitmap_set (1 samples, 0.10%)</title><rect x="71.1297%" y="1109" width="0.1046%" height="15" fill="rgb(235,42,18)" fg:x="680" fg:w="1"/><text x="71.3797%" y="1119.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::new (5 samples, 0.52%)</title><rect x="70.8159%" y="1285" width="0.5230%" height="15" fill="rgb(219,66,54)" fg:x="677" fg:w="5"/><text x="71.0659%" y="1295.50"></text></g><g><title>databend-query`alloc::alloc::exchange_malloc (5 samples, 0.52%)</title><rect x="70.8159%" y="1269" width="0.5230%" height="15" fill="rgb(222,205,4)" fg:x="677" fg:w="5"/><text x="71.0659%" y="1279.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;[T]&gt;::as_mut_ptr (1 samples, 0.10%)</title><rect x="71.2343%" y="1253" width="0.1046%" height="15" fill="rgb(227,213,46)" fg:x="681" fg:w="1"/><text x="71.4843%" y="1263.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;[T]&gt;::as_non_null_ptr (1 samples, 0.10%)</title><rect x="71.2343%" y="1237" width="0.1046%" height="15" fill="rgb(250,145,42)" fg:x="681" fg:w="1"/><text x="71.4843%" y="1247.50"></text></g><g><title>databend-query`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.10%)</title><rect x="71.4435%" y="1237" width="0.1046%" height="15" fill="rgb(219,15,2)" fg:x="683" fg:w="1"/><text x="71.6935%" y="1247.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.10%)</title><rect x="71.5481%" y="1237" width="0.1046%" height="15" fill="rgb(231,181,52)" fg:x="684" fg:w="1"/><text x="71.7981%" y="1247.50"></text></g><g><title>databend-query`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.10%)</title><rect x="71.5481%" y="1221" width="0.1046%" height="15" fill="rgb(235,1,42)" fg:x="684" fg:w="1"/><text x="71.7981%" y="1231.50"></text></g><g><title>databend-query`_rjem_je_arena_ralloc (2 samples, 0.21%)</title><rect x="71.8619%" y="1125" width="0.2092%" height="15" fill="rgb(249,88,27)" fg:x="687" fg:w="2"/><text x="72.1119%" y="1135.50"></text></g><g><title>databend-query`arena_ralloc_move_helper (1 samples, 0.10%)</title><rect x="71.9665%" y="1109" width="0.1046%" height="15" fill="rgb(235,145,16)" fg:x="688" fg:w="1"/><text x="72.2165%" y="1119.50"></text></g><g><title>libsystem_c.dylib`__memcpy_chk (1 samples, 0.10%)</title><rect x="72.0711%" y="1125" width="0.1046%" height="15" fill="rgb(237,114,19)" fg:x="689" fg:w="1"/><text x="72.3211%" y="1135.50"></text></g><g><title>databend-query`alloc::alloc::realloc (6 samples, 0.63%)</title><rect x="71.6527%" y="1189" width="0.6276%" height="15" fill="rgb(238,51,50)" fg:x="685" fg:w="6"/><text x="71.9027%" y="1199.50"></text></g><g><title>databend-query`__rg_realloc (6 samples, 0.63%)</title><rect x="71.6527%" y="1173" width="0.6276%" height="15" fill="rgb(205,194,25)" fg:x="685" fg:w="6"/><text x="71.9027%" y="1183.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::realloc (6 samples, 0.63%)</title><rect x="71.6527%" y="1157" width="0.6276%" height="15" fill="rgb(215,203,17)" fg:x="685" fg:w="6"/><text x="71.9027%" y="1167.50"></text></g><g><title>databend-query`_rjem_rallocx (5 samples, 0.52%)</title><rect x="71.7573%" y="1141" width="0.5230%" height="15" fill="rgb(233,112,49)" fg:x="686" fg:w="5"/><text x="72.0073%" y="1151.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.10%)</title><rect x="72.1757%" y="1125" width="0.1046%" height="15" fill="rgb(241,130,26)" fg:x="690" fg:w="1"/><text x="72.4257%" y="1135.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (11 samples, 1.15%)</title><rect x="71.3389%" y="1269" width="1.1506%" height="15" fill="rgb(252,223,19)" fg:x="682" fg:w="11"/><text x="71.5889%" y="1279.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 1.15%)</title><rect x="71.3389%" y="1253" width="1.1506%" height="15" fill="rgb(211,95,25)" fg:x="682" fg:w="11"/><text x="71.5889%" y="1263.50"></text></g><g><title>databend-query`alloc::raw_vec::finish_grow (8 samples, 0.84%)</title><rect x="71.6527%" y="1237" width="0.8368%" height="15" fill="rgb(251,182,27)" fg:x="685" fg:w="8"/><text x="71.9027%" y="1247.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.84%)</title><rect x="71.6527%" y="1221" width="0.8368%" height="15" fill="rgb(238,24,4)" fg:x="685" fg:w="8"/><text x="71.9027%" y="1231.50"></text></g><g><title>databend-query`alloc::alloc::Global::grow_impl (8 samples, 0.84%)</title><rect x="71.6527%" y="1205" width="0.8368%" height="15" fill="rgb(224,220,25)" fg:x="685" fg:w="8"/><text x="71.9027%" y="1215.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (2 samples, 0.21%)</title><rect x="72.2803%" y="1189" width="0.2092%" height="15" fill="rgb(239,133,26)" fg:x="691" fg:w="2"/><text x="72.5303%" y="1199.50"></text></g><g><title>databend-query`core::ptr::slice_from_raw_parts_mut (1 samples, 0.10%)</title><rect x="72.3849%" y="1173" width="0.1046%" height="15" fill="rgb(211,94,48)" fg:x="692" fg:w="1"/><text x="72.6349%" y="1183.50"></text></g><g><title>databend-query`alloc::raw_vec::handle_reserve (2 samples, 0.21%)</title><rect x="72.4895%" y="1269" width="0.2092%" height="15" fill="rgb(239,87,6)" fg:x="693" fg:w="2"/><text x="72.7395%" y="1279.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::push (14 samples, 1.46%)</title><rect x="71.3389%" y="1285" width="1.4644%" height="15" fill="rgb(227,62,0)" fg:x="682" fg:w="14"/><text x="71.5889%" y="1295.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.10%)</title><rect x="72.6987%" y="1269" width="0.1046%" height="15" fill="rgb(211,226,4)" fg:x="695" fg:w="1"/><text x="72.9487%" y="1279.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="72.8033%" y="1253" width="0.1046%" height="15" fill="rgb(253,38,52)" fg:x="696" fg:w="1"/><text x="73.0533%" y="1263.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;dyn common_datavalues::columns::column::Column&gt;]&gt; (1 samples, 0.10%)</title><rect x="72.8033%" y="1237" width="0.1046%" height="15" fill="rgb(229,126,40)" fg:x="696" fg:w="1"/><text x="73.0533%" y="1247.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn common_datavalues::columns::column::Column&gt;&gt; (1 samples, 0.10%)</title><rect x="72.8033%" y="1221" width="0.1046%" height="15" fill="rgb(229,165,44)" fg:x="696" fg:w="1"/><text x="73.0533%" y="1231.50"></text></g><g><title>databend-query`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="72.8033%" y="1205" width="0.1046%" height="15" fill="rgb(247,95,47)" fg:x="696" fg:w="1"/><text x="73.0533%" y="1215.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.10%)</title><rect x="72.8033%" y="1189" width="0.1046%" height="15" fill="rgb(216,140,30)" fg:x="696" fg:w="1"/><text x="73.0533%" y="1199.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.10%)</title><rect x="72.9079%" y="1221" width="0.1046%" height="15" fill="rgb(246,214,8)" fg:x="697" fg:w="1"/><text x="73.1579%" y="1231.50"></text></g><g><title>databend-query`alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="72.9079%" y="1205" width="0.1046%" height="15" fill="rgb(227,224,15)" fg:x="697" fg:w="1"/><text x="73.1579%" y="1215.50"></text></g><g><title>databend-query`__rg_dealloc (1 samples, 0.10%)</title><rect x="72.9079%" y="1189" width="0.1046%" height="15" fill="rgb(233,175,4)" fg:x="697" fg:w="1"/><text x="73.1579%" y="1199.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.10%)</title><rect x="72.9079%" y="1173" width="0.1046%" height="15" fill="rgb(221,66,45)" fg:x="697" fg:w="1"/><text x="73.1579%" y="1183.50"></text></g><g><title>databend-query`_rjem_sdallocx (1 samples, 0.10%)</title><rect x="72.9079%" y="1157" width="0.1046%" height="15" fill="rgb(221,178,18)" fg:x="697" fg:w="1"/><text x="73.1579%" y="1167.50"></text></g><g><title>databend-query`core::ptr::unique::Unique&lt;T&gt;::cast (1 samples, 0.10%)</title><rect x="73.0126%" y="1205" width="0.1046%" height="15" fill="rgb(213,81,29)" fg:x="698" fg:w="1"/><text x="73.2626%" y="1215.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.10%)</title><rect x="73.0126%" y="1189" width="0.1046%" height="15" fill="rgb(220,89,49)" fg:x="698" fg:w="1"/><text x="73.2626%" y="1199.50"></text></g><g><title>databend-query`common_datablocks::data_block::DataBlock::add_column (34 samples, 3.56%)</title><rect x="69.6653%" y="1301" width="3.5565%" height="15" fill="rgb(227,60,33)" fg:x="666" fg:w="34"/><text x="69.9153%" y="1311.50">data..</text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_datablocks::data_block::DataBlock&gt; (4 samples, 0.42%)</title><rect x="72.8033%" y="1285" width="0.4184%" height="15" fill="rgb(205,113,12)" fg:x="696" fg:w="4"/><text x="73.0533%" y="1295.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;dyn common_datavalues::columns::column::Column&gt;&gt;&gt; (4 samples, 0.42%)</title><rect x="72.8033%" y="1269" width="0.4184%" height="15" fill="rgb(211,32,1)" fg:x="696" fg:w="4"/><text x="73.0533%" y="1279.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::sync::Arc&lt;dyn common_datavalues::columns::column::Column&gt;&gt;&gt; (3 samples, 0.31%)</title><rect x="72.9079%" y="1253" width="0.3138%" height="15" fill="rgb(246,2,12)" fg:x="697" fg:w="3"/><text x="73.1579%" y="1263.50"></text></g><g><title>databend-query`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.31%)</title><rect x="72.9079%" y="1237" width="0.3138%" height="15" fill="rgb(243,37,27)" fg:x="697" fg:w="3"/><text x="73.1579%" y="1247.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.21%)</title><rect x="73.0126%" y="1221" width="0.2092%" height="15" fill="rgb(248,211,31)" fg:x="698" fg:w="2"/><text x="73.2626%" y="1231.50"></text></g><g><title>databend-query`core::result::Result&lt;T,E&gt;::unwrap_unchecked (1 samples, 0.10%)</title><rect x="73.1172%" y="1205" width="0.1046%" height="15" fill="rgb(242,146,47)" fg:x="699" fg:w="1"/><text x="73.3672%" y="1215.50"></text></g><g><title>databend-query`common_datablocks::data_block::DataBlock::columns (1 samples, 0.10%)</title><rect x="73.2218%" y="1301" width="0.1046%" height="15" fill="rgb(206,70,20)" fg:x="700" fg:w="1"/><text x="73.4718%" y="1311.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="73.2218%" y="1285" width="0.1046%" height="15" fill="rgb(215,10,51)" fg:x="700" fg:w="1"/><text x="73.4718%" y="1295.50"></text></g><g><title>databend-query`core::slice::raw::from_raw_parts (1 samples, 0.10%)</title><rect x="73.2218%" y="1269" width="0.1046%" height="15" fill="rgb(243,178,53)" fg:x="700" fg:w="1"/><text x="73.4718%" y="1279.50"></text></g><g><title>databend-query`core::ptr::slice_from_raw_parts (1 samples, 0.10%)</title><rect x="73.2218%" y="1253" width="0.1046%" height="15" fill="rgb(233,221,20)" fg:x="700" fg:w="1"/><text x="73.4718%" y="1263.50"></text></g><g><title>databend-query`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="73.4310%" y="1077" width="0.1046%" height="15" fill="rgb(218,95,35)" fg:x="702" fg:w="1"/><text x="73.6810%" y="1087.50"></text></g><g><title>databend-query`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.10%)</title><rect x="73.4310%" y="1061" width="0.1046%" height="15" fill="rgb(229,13,5)" fg:x="702" fg:w="1"/><text x="73.6810%" y="1071.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::_{{closure}} (2 samples, 0.21%)</title><rect x="73.5356%" y="1061" width="0.2092%" height="15" fill="rgb(252,164,30)" fg:x="703" fg:w="2"/><text x="73.7856%" y="1071.50"></text></g><g><title>databend-query`core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::from_try (1 samples, 0.10%)</title><rect x="73.6402%" y="1045" width="0.1046%" height="15" fill="rgb(232,68,36)" fg:x="704" fg:w="1"/><text x="73.8902%" y="1055.50"></text></g><g><title>databend-query`&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (1 samples, 0.10%)</title><rect x="73.7448%" y="981" width="0.1046%" height="15" fill="rgb(219,59,54)" fg:x="705" fg:w="1"/><text x="73.9948%" y="991.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="73.7448%" y="965" width="0.1046%" height="15" fill="rgb(250,92,33)" fg:x="705" fg:w="1"/><text x="73.9948%" y="975.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.10%)</title><rect x="73.7448%" y="949" width="0.1046%" height="15" fill="rgb(229,162,54)" fg:x="705" fg:w="1"/><text x="73.9948%" y="959.50"></text></g><g><title>databend-query`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.10%)</title><rect x="73.7448%" y="933" width="0.1046%" height="15" fill="rgb(244,114,52)" fg:x="705" fg:w="1"/><text x="73.9948%" y="943.50"></text></g><g><title>databend-query`common_datablocks::data_block::DataBlock::try_column_by_name (2 samples, 0.21%)</title><rect x="73.7448%" y="1045" width="0.2092%" height="15" fill="rgb(212,211,43)" fg:x="705" fg:w="2"/><text x="73.9948%" y="1055.50"></text></g><g><title>databend-query`common_datavalues::data_schema::DataSchema::index_of (2 samples, 0.21%)</title><rect x="73.7448%" y="1029" width="0.2092%" height="15" fill="rgb(226,147,8)" fg:x="705" fg:w="2"/><text x="73.9948%" y="1039.50"></text></g><g><title>databend-query`core::cmp::impls::_&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.21%)</title><rect x="73.7448%" y="1013" width="0.2092%" height="15" fill="rgb(226,23,13)" fg:x="705" fg:w="2"/><text x="73.9948%" y="1023.50"></text></g><g><title>databend-query`&lt;alloc::string::String as core::cmp::PartialEq&lt;str&gt;&gt;::eq (2 samples, 0.21%)</title><rect x="73.7448%" y="997" width="0.2092%" height="15" fill="rgb(240,63,4)" fg:x="705" fg:w="2"/><text x="73.9948%" y="1007.50"></text></g><g><title>databend-query`core::str::traits::_&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.10%)</title><rect x="73.8494%" y="981" width="0.1046%" height="15" fill="rgb(221,1,32)" fg:x="706" fg:w="1"/><text x="74.0994%" y="991.50"></text></g><g><title>databend-query`core::cmp::impls::_&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.10%)</title><rect x="73.8494%" y="965" width="0.1046%" height="15" fill="rgb(242,117,10)" fg:x="706" fg:w="1"/><text x="74.0994%" y="975.50"></text></g><g><title>databend-query`core::slice::cmp::_&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.10%)</title><rect x="73.8494%" y="949" width="0.1046%" height="15" fill="rgb(249,172,44)" fg:x="706" fg:w="1"/><text x="74.0994%" y="959.50"></text></g><g><title>databend-query`core::mem::size_of_val (1 samples, 0.10%)</title><rect x="73.8494%" y="933" width="0.1046%" height="15" fill="rgb(244,46,45)" fg:x="706" fg:w="1"/><text x="74.0994%" y="943.50"></text></g><g><title>databend-query`arrow2::buffer::bytes::Bytes&lt;T&gt;::len (1 samples, 0.10%)</title><rect x="73.9540%" y="997" width="0.1046%" height="15" fill="rgb(206,43,17)" fg:x="707" fg:w="1"/><text x="74.2040%" y="1007.50"></text></g><g><title>databend-query`&lt;common_datavalues::columns::primitive::PrimitiveColumn&lt;T&gt; as common_datavalues::scalars::column::ScalarColumn&gt;::get_data (2 samples, 0.21%)</title><rect x="73.9540%" y="1029" width="0.2092%" height="15" fill="rgb(239,218,39)" fg:x="707" fg:w="2"/><text x="74.2040%" y="1039.50"></text></g><g><title>databend-query`&lt;arrow2::buffer::immutable::Buffer&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.21%)</title><rect x="73.9540%" y="1013" width="0.2092%" height="15" fill="rgb(208,169,54)" fg:x="707" fg:w="2"/><text x="74.2040%" y="1023.50"></text></g><g><title>databend-query`arrow2::buffer::immutable::Buffer&lt;T&gt;::as_slice (1 samples, 0.10%)</title><rect x="74.0586%" y="997" width="0.1046%" height="15" fill="rgb(247,25,42)" fg:x="708" fg:w="1"/><text x="74.3086%" y="1007.50"></text></g><g><title>databend-query`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="74.0586%" y="981" width="0.1046%" height="15" fill="rgb(226,23,31)" fg:x="708" fg:w="1"/><text x="74.3086%" y="991.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.10%)</title><rect x="74.0586%" y="965" width="0.1046%" height="15" fill="rgb(247,16,28)" fg:x="708" fg:w="1"/><text x="74.3086%" y="975.50"></text></g><g><title>databend-query`alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="74.2678%" y="917" width="0.1046%" height="15" fill="rgb(231,147,38)" fg:x="710" fg:w="1"/><text x="74.5178%" y="927.50"></text></g><g><title>databend-query`__rg_alloc (1 samples, 0.10%)</title><rect x="74.2678%" y="901" width="0.1046%" height="15" fill="rgb(253,81,48)" fg:x="710" fg:w="1"/><text x="74.5178%" y="911.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.10%)</title><rect x="74.2678%" y="885" width="0.1046%" height="15" fill="rgb(249,222,43)" fg:x="710" fg:w="1"/><text x="74.5178%" y="895.50"></text></g><g><title>databend-query`_rjem_mallocx (1 samples, 0.10%)</title><rect x="74.2678%" y="869" width="0.1046%" height="15" fill="rgb(221,3,27)" fg:x="710" fg:w="1"/><text x="74.5178%" y="879.50"></text></g><g><title>databend-query`&lt;common_datavalues::columns::primitive::mutable::MutablePrimitiveColumn&lt;T&gt; as common_datavalues::scalars::column::ScalarColumnBuilder&gt;::finish (3 samples, 0.31%)</title><rect x="74.1632%" y="1029" width="0.3138%" height="15" fill="rgb(228,180,5)" fg:x="709" fg:w="3"/><text x="74.4132%" y="1039.50"></text></g><g><title>databend-query`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.31%)</title><rect x="74.1632%" y="1013" width="0.3138%" height="15" fill="rgb(227,131,42)" fg:x="709" fg:w="3"/><text x="74.4132%" y="1023.50"></text></g><g><title>databend-query`&lt;arrow2::buffer::immutable::Buffer&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (3 samples, 0.31%)</title><rect x="74.1632%" y="997" width="0.3138%" height="15" fill="rgb(212,3,39)" fg:x="709" fg:w="3"/><text x="74.4132%" y="1007.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::new (3 samples, 0.31%)</title><rect x="74.1632%" y="981" width="0.3138%" height="15" fill="rgb(226,45,5)" fg:x="709" fg:w="3"/><text x="74.4132%" y="991.50"></text></g><g><title>databend-query`alloc::alloc::exchange_malloc (2 samples, 0.21%)</title><rect x="74.2678%" y="965" width="0.2092%" height="15" fill="rgb(215,167,45)" fg:x="710" fg:w="2"/><text x="74.5178%" y="975.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.21%)</title><rect x="74.2678%" y="949" width="0.2092%" height="15" fill="rgb(250,218,53)" fg:x="710" fg:w="2"/><text x="74.5178%" y="959.50"></text></g><g><title>databend-query`alloc::alloc::Global::alloc_impl (2 samples, 0.21%)</title><rect x="74.2678%" y="933" width="0.2092%" height="15" fill="rgb(207,140,0)" fg:x="710" fg:w="2"/><text x="74.5178%" y="943.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (1 samples, 0.10%)</title><rect x="74.3724%" y="917" width="0.1046%" height="15" fill="rgb(238,133,51)" fg:x="711" fg:w="1"/><text x="74.6224%" y="927.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.10%)</title><rect x="74.4770%" y="1029" width="0.1046%" height="15" fill="rgb(218,203,53)" fg:x="712" fg:w="1"/><text x="74.7270%" y="1039.50"></text></g><g><title>databend-query`common_datavalues::columns::primitive::mutable::MutablePrimitiveColumn&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="74.5816%" y="1029" width="0.1046%" height="15" fill="rgb(226,184,25)" fg:x="713" fg:w="1"/><text x="74.8316%" y="1039.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="74.5816%" y="1013" width="0.1046%" height="15" fill="rgb(231,121,21)" fg:x="713" fg:w="1"/><text x="74.8316%" y="1023.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="74.5816%" y="997" width="0.1046%" height="15" fill="rgb(251,14,34)" fg:x="713" fg:w="1"/><text x="74.8316%" y="1007.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="74.5816%" y="981" width="0.1046%" height="15" fill="rgb(249,193,11)" fg:x="713" fg:w="1"/><text x="74.8316%" y="991.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="74.5816%" y="965" width="0.1046%" height="15" fill="rgb(220,172,37)" fg:x="713" fg:w="1"/><text x="74.8316%" y="975.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="74.5816%" y="949" width="0.1046%" height="15" fill="rgb(231,229,43)" fg:x="713" fg:w="1"/><text x="74.8316%" y="959.50"></text></g><g><title>databend-query`alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="74.5816%" y="933" width="0.1046%" height="15" fill="rgb(250,161,5)" fg:x="713" fg:w="1"/><text x="74.8316%" y="943.50"></text></g><g><title>databend-query`alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="74.5816%" y="917" width="0.1046%" height="15" fill="rgb(218,225,18)" fg:x="713" fg:w="1"/><text x="74.8316%" y="927.50"></text></g><g><title>databend-query`__rg_alloc (1 samples, 0.10%)</title><rect x="74.5816%" y="901" width="0.1046%" height="15" fill="rgb(245,45,42)" fg:x="713" fg:w="1"/><text x="74.8316%" y="911.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.10%)</title><rect x="74.5816%" y="885" width="0.1046%" height="15" fill="rgb(211,115,1)" fg:x="713" fg:w="1"/><text x="74.8316%" y="895.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (1 samples, 0.10%)</title><rect x="74.5816%" y="869" width="0.1046%" height="15" fill="rgb(248,133,52)" fg:x="713" fg:w="1"/><text x="74.8316%" y="879.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 1.36%)</title><rect x="73.4310%" y="1157" width="1.3598%" height="15" fill="rgb(238,100,21)" fg:x="702" fg:w="13"/><text x="73.6810%" y="1167.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::try_for_each (13 samples, 1.36%)</title><rect x="73.4310%" y="1141" width="1.3598%" height="15" fill="rgb(247,144,11)" fg:x="702" fg:w="13"/><text x="73.6810%" y="1151.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 1.36%)</title><rect x="73.4310%" y="1125" width="1.3598%" height="15" fill="rgb(206,164,16)" fg:x="702" fg:w="13"/><text x="73.6810%" y="1135.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 1.36%)</title><rect x="73.4310%" y="1109" width="1.3598%" height="15" fill="rgb(222,34,3)" fg:x="702" fg:w="13"/><text x="73.6810%" y="1119.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::try_fold (13 samples, 1.36%)</title><rect x="73.4310%" y="1093" width="1.3598%" height="15" fill="rgb(248,82,4)" fg:x="702" fg:w="13"/><text x="73.6810%" y="1103.50"></text></g><g><title>databend-query`core::iter::adapters::map::map_try_fold::_{{closure}} (12 samples, 1.26%)</title><rect x="73.5356%" y="1077" width="1.2552%" height="15" fill="rgb(228,81,46)" fg:x="703" fg:w="12"/><text x="73.7856%" y="1087.50"></text></g><g><title>databend-query`common_datablocks::kernels::data_block_take::_&lt;impl common_datablocks::data_block::DataBlock&gt;::block_take_by_indices::_{{closure}} (10 samples, 1.05%)</title><rect x="73.7448%" y="1061" width="1.0460%" height="15" fill="rgb(227,67,47)" fg:x="705" fg:w="10"/><text x="73.9948%" y="1071.50"></text></g><g><title>databend-query`common_datavalues::columns::take::_&lt;impl common_datavalues::columns::series::Series&gt;::take (8 samples, 0.84%)</title><rect x="73.9540%" y="1045" width="0.8368%" height="15" fill="rgb(215,93,53)" fg:x="707" fg:w="8"/><text x="74.2040%" y="1055.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_datavalues::columns::primitive::mutable::MutablePrimitiveColumn&lt;u64&gt;&gt; (1 samples, 0.10%)</title><rect x="74.6862%" y="1029" width="0.1046%" height="15" fill="rgb(248,194,39)" fg:x="714" fg:w="1"/><text x="74.9362%" y="1039.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u64&gt;&gt; (1 samples, 0.10%)</title><rect x="74.6862%" y="1013" width="0.1046%" height="15" fill="rgb(215,5,19)" fg:x="714" fg:w="1"/><text x="74.9362%" y="1023.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u64&gt;&gt; (1 samples, 0.10%)</title><rect x="74.6862%" y="997" width="0.1046%" height="15" fill="rgb(226,215,51)" fg:x="714" fg:w="1"/><text x="74.9362%" y="1007.50"></text></g><g><title>databend-query`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="74.6862%" y="981" width="0.1046%" height="15" fill="rgb(225,56,26)" fg:x="714" fg:w="1"/><text x="74.9362%" y="991.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.10%)</title><rect x="74.6862%" y="965" width="0.1046%" height="15" fill="rgb(222,75,29)" fg:x="714" fg:w="1"/><text x="74.9362%" y="975.50"></text></g><g><title>databend-query`alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="74.7908%" y="1061" width="0.1046%" height="15" fill="rgb(236,139,6)" fg:x="715" fg:w="1"/><text x="75.0408%" y="1071.50"></text></g><g><title>databend-query`__rg_alloc (1 samples, 0.10%)</title><rect x="74.7908%" y="1045" width="0.1046%" height="15" fill="rgb(223,137,36)" fg:x="715" fg:w="1"/><text x="75.0408%" y="1055.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.10%)</title><rect x="74.7908%" y="1029" width="0.1046%" height="15" fill="rgb(226,99,2)" fg:x="715" fg:w="1"/><text x="75.0408%" y="1039.50"></text></g><g><title>databend-query`common_datablocks::kernels::data_block_take::_&lt;impl common_datablocks::data_block::DataBlock&gt;::block_take_by_indices (16 samples, 1.67%)</title><rect x="73.3264%" y="1301" width="1.6736%" height="15" fill="rgb(206,133,23)" fg:x="701" fg:w="16"/><text x="73.5764%" y="1311.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::collect (16 samples, 1.67%)</title><rect x="73.3264%" y="1285" width="1.6736%" height="15" fill="rgb(243,173,15)" fg:x="701" fg:w="16"/><text x="73.5764%" y="1295.50"></text></g><g><title>databend-query`&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (16 samples, 1.67%)</title><rect x="73.3264%" y="1269" width="1.6736%" height="15" fill="rgb(228,69,28)" fg:x="701" fg:w="16"/><text x="73.5764%" y="1279.50"></text></g><g><title>databend-query`core::iter::adapters::try_process (16 samples, 1.67%)</title><rect x="73.3264%" y="1253" width="1.6736%" height="15" fill="rgb(212,51,22)" fg:x="701" fg:w="16"/><text x="73.5764%" y="1263.50"></text></g><g><title>databend-query`&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::_{{closure}} (16 samples, 1.67%)</title><rect x="73.3264%" y="1237" width="1.6736%" height="15" fill="rgb(227,113,0)" fg:x="701" fg:w="16"/><text x="73.5764%" y="1247.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::collect (16 samples, 1.67%)</title><rect x="73.3264%" y="1221" width="1.6736%" height="15" fill="rgb(252,84,27)" fg:x="701" fg:w="16"/><text x="73.5764%" y="1231.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (15 samples, 1.57%)</title><rect x="73.4310%" y="1205" width="1.5690%" height="15" fill="rgb(223,145,39)" fg:x="702" fg:w="15"/><text x="73.6810%" y="1215.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 1.57%)</title><rect x="73.4310%" y="1189" width="1.5690%" height="15" fill="rgb(239,219,30)" fg:x="702" fg:w="15"/><text x="73.6810%" y="1199.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (15 samples, 1.57%)</title><rect x="73.4310%" y="1173" width="1.5690%" height="15" fill="rgb(224,196,39)" fg:x="702" fg:w="15"/><text x="73.6810%" y="1183.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.21%)</title><rect x="74.7908%" y="1157" width="0.2092%" height="15" fill="rgb(205,35,43)" fg:x="715" fg:w="2"/><text x="75.0408%" y="1167.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.21%)</title><rect x="74.7908%" y="1141" width="0.2092%" height="15" fill="rgb(228,201,21)" fg:x="715" fg:w="2"/><text x="75.0408%" y="1151.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.21%)</title><rect x="74.7908%" y="1125" width="0.2092%" height="15" fill="rgb(237,118,16)" fg:x="715" fg:w="2"/><text x="75.0408%" y="1135.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.21%)</title><rect x="74.7908%" y="1109" width="0.2092%" height="15" fill="rgb(241,17,19)" fg:x="715" fg:w="2"/><text x="75.0408%" y="1119.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.21%)</title><rect x="74.7908%" y="1093" width="0.2092%" height="15" fill="rgb(214,10,25)" fg:x="715" fg:w="2"/><text x="75.0408%" y="1103.50"></text></g><g><title>databend-query`alloc::alloc::Global::alloc_impl (2 samples, 0.21%)</title><rect x="74.7908%" y="1077" width="0.2092%" height="15" fill="rgb(238,37,29)" fg:x="715" fg:w="2"/><text x="75.0408%" y="1087.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (1 samples, 0.10%)</title><rect x="74.8954%" y="1061" width="0.1046%" height="15" fill="rgb(253,83,25)" fg:x="716" fg:w="1"/><text x="75.1454%" y="1071.50"></text></g><g><title>databend-query`core::ptr::slice_from_raw_parts_mut (1 samples, 0.10%)</title><rect x="74.8954%" y="1045" width="0.1046%" height="15" fill="rgb(234,192,12)" fg:x="716" fg:w="1"/><text x="75.1454%" y="1055.50"></text></g><g><title>databend-query`&lt;common_functions::scalars::expressions::cast::CastFunction as common_functions::scalars::function::Function&gt;::eval (2 samples, 0.21%)</title><rect x="75.0000%" y="1045" width="0.2092%" height="15" fill="rgb(241,216,45)" fg:x="717" fg:w="2"/><text x="75.2500%" y="1055.50"></text></g><g><title>databend-query`common_functions::scalars::expressions::cast_with_type::cast_column_field (2 samples, 0.21%)</title><rect x="75.0000%" y="1029" width="0.2092%" height="15" fill="rgb(242,22,33)" fg:x="717" fg:w="2"/><text x="75.2500%" y="1039.50"></text></g><g><title>databend-query`common_functions::scalars::expressions::cast_with_type::cast_with_type (2 samples, 0.21%)</title><rect x="75.0000%" y="1013" width="0.2092%" height="15" fill="rgb(231,105,49)" fg:x="717" fg:w="2"/><text x="75.2500%" y="1023.50"></text></g><g><title>databend-query`common_functions::scalars::expressions::cast_with_type::arrow_cast_compute (2 samples, 0.21%)</title><rect x="75.0000%" y="997" width="0.2092%" height="15" fill="rgb(218,204,15)" fg:x="717" fg:w="2"/><text x="75.2500%" y="1007.50"></text></g><g><title>databend-query`arrow2::compute::cast::cast (2 samples, 0.21%)</title><rect x="75.0000%" y="981" width="0.2092%" height="15" fill="rgb(235,138,41)" fg:x="717" fg:w="2"/><text x="75.2500%" y="991.50"></text></g><g><title>databend-query`&lt;dyn core::any::Any&gt;::downcast_ref (2 samples, 0.21%)</title><rect x="75.0000%" y="965" width="0.2092%" height="15" fill="rgb(246,0,9)" fg:x="717" fg:w="2"/><text x="75.2500%" y="975.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::collect (3 samples, 0.31%)</title><rect x="75.0000%" y="1301" width="0.3138%" height="15" fill="rgb(210,74,4)" fg:x="717" fg:w="3"/><text x="75.2500%" y="1311.50"></text></g><g><title>databend-query`&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (3 samples, 0.31%)</title><rect x="75.0000%" y="1285" width="0.3138%" height="15" fill="rgb(250,60,41)" fg:x="717" fg:w="3"/><text x="75.2500%" y="1295.50"></text></g><g><title>databend-query`core::iter::adapters::try_process (3 samples, 0.31%)</title><rect x="75.0000%" y="1269" width="0.3138%" height="15" fill="rgb(220,115,12)" fg:x="717" fg:w="3"/><text x="75.2500%" y="1279.50"></text></g><g><title>databend-query`&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::_{{closure}} (3 samples, 0.31%)</title><rect x="75.0000%" y="1253" width="0.3138%" height="15" fill="rgb(237,100,13)" fg:x="717" fg:w="3"/><text x="75.2500%" y="1263.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::collect (3 samples, 0.31%)</title><rect x="75.0000%" y="1237" width="0.3138%" height="15" fill="rgb(213,55,26)" fg:x="717" fg:w="3"/><text x="75.2500%" y="1247.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.31%)</title><rect x="75.0000%" y="1221" width="0.3138%" height="15" fill="rgb(216,17,4)" fg:x="717" fg:w="3"/><text x="75.2500%" y="1231.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.31%)</title><rect x="75.0000%" y="1205" width="0.3138%" height="15" fill="rgb(220,153,47)" fg:x="717" fg:w="3"/><text x="75.2500%" y="1215.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.31%)</title><rect x="75.0000%" y="1189" width="0.3138%" height="15" fill="rgb(215,131,9)" fg:x="717" fg:w="3"/><text x="75.2500%" y="1199.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.31%)</title><rect x="75.0000%" y="1173" width="0.3138%" height="15" fill="rgb(233,46,42)" fg:x="717" fg:w="3"/><text x="75.2500%" y="1183.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::try_for_each (3 samples, 0.31%)</title><rect x="75.0000%" y="1157" width="0.3138%" height="15" fill="rgb(226,86,7)" fg:x="717" fg:w="3"/><text x="75.2500%" y="1167.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.31%)</title><rect x="75.0000%" y="1141" width="0.3138%" height="15" fill="rgb(239,226,21)" fg:x="717" fg:w="3"/><text x="75.2500%" y="1151.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.31%)</title><rect x="75.0000%" y="1125" width="0.3138%" height="15" fill="rgb(244,137,22)" fg:x="717" fg:w="3"/><text x="75.2500%" y="1135.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.31%)</title><rect x="75.0000%" y="1109" width="0.3138%" height="15" fill="rgb(211,139,35)" fg:x="717" fg:w="3"/><text x="75.2500%" y="1119.50"></text></g><g><title>databend-query`core::iter::adapters::map::map_try_fold::_{{closure}} (3 samples, 0.31%)</title><rect x="75.0000%" y="1093" width="0.3138%" height="15" fill="rgb(214,62,50)" fg:x="717" fg:w="3"/><text x="75.2500%" y="1103.50"></text></g><g><title>databend-query`&lt;databend_query::pipelines::new::processors::transforms::hash_join::chaining_hash_table::ChainingHashTable as databend_query::pipelines::new::processors::transforms::hash_join::hash_table::HashJoinState&gt;::probe::_{{closure}} (3 samples, 0.31%)</title><rect x="75.0000%" y="1077" width="0.3138%" height="15" fill="rgb(212,113,44)" fg:x="717" fg:w="3"/><text x="75.2500%" y="1087.50"></text></g><g><title>databend-query`databend_query::common::expression_evaluator::ExpressionEvaluator::eval (3 samples, 0.31%)</title><rect x="75.0000%" y="1061" width="0.3138%" height="15" fill="rgb(226,150,43)" fg:x="717" fg:w="3"/><text x="75.2500%" y="1071.50"></text></g><g><title>databend-query`databend_query::common::expression_evaluator::ExpressionEvaluator::eval (1 samples, 0.10%)</title><rect x="75.2092%" y="1045" width="0.1046%" height="15" fill="rgb(250,71,37)" fg:x="719" fg:w="1"/><text x="75.4592%" y="1055.50"></text></g><g><title>databend-query`&lt;common_functions::scalars::function_adapter::FunctionAdapter as common_functions::scalars::function::Function&gt;::eval (1 samples, 0.10%)</title><rect x="75.2092%" y="1029" width="0.1046%" height="15" fill="rgb(219,76,19)" fg:x="719" fg:w="1"/><text x="75.4592%" y="1039.50"></text></g><g><title>databend-query`&lt;common_functions::scalars::arithmetics::arithmetic_modulo::ModuloFunctionImpl&lt;L,R,M,O&gt; as common_functions::scalars::function::Function&gt;::eval (1 samples, 0.10%)</title><rect x="75.2092%" y="1013" width="0.1046%" height="15" fill="rgb(250,39,11)" fg:x="719" fg:w="1"/><text x="75.4592%" y="1023.50"></text></g><g><title>databend-query`common_functions::scalars::arithmetics::utils::rem_scalar (1 samples, 0.10%)</title><rect x="75.2092%" y="997" width="0.1046%" height="15" fill="rgb(230,64,31)" fg:x="719" fg:w="1"/><text x="75.4592%" y="1007.50"></text></g><g><title>databend-query`&lt;common_datavalues::columns::primitive::PrimitiveColumn&lt;T&gt; as common_datavalues::scalars::column::ScalarColumn&gt;::from_owned_iterator (1 samples, 0.10%)</title><rect x="75.2092%" y="981" width="0.1046%" height="15" fill="rgb(208,222,23)" fg:x="719" fg:w="1"/><text x="75.4592%" y="991.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::collect (1 samples, 0.10%)</title><rect x="75.2092%" y="965" width="0.1046%" height="15" fill="rgb(227,125,18)" fg:x="719" fg:w="1"/><text x="75.4592%" y="975.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="75.2092%" y="949" width="0.1046%" height="15" fill="rgb(234,210,9)" fg:x="719" fg:w="1"/><text x="75.4592%" y="959.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="75.2092%" y="933" width="0.1046%" height="15" fill="rgb(217,127,24)" fg:x="719" fg:w="1"/><text x="75.4592%" y="943.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="75.2092%" y="917" width="0.1046%" height="15" fill="rgb(239,141,48)" fg:x="719" fg:w="1"/><text x="75.4592%" y="927.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="75.2092%" y="901" width="0.1046%" height="15" fill="rgb(227,109,8)" fg:x="719" fg:w="1"/><text x="75.4592%" y="911.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="75.2092%" y="885" width="0.1046%" height="15" fill="rgb(235,184,23)" fg:x="719" fg:w="1"/><text x="75.4592%" y="895.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="75.2092%" y="869" width="0.1046%" height="15" fill="rgb(227,226,48)" fg:x="719" fg:w="1"/><text x="75.4592%" y="879.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="75.2092%" y="853" width="0.1046%" height="15" fill="rgb(206,150,11)" fg:x="719" fg:w="1"/><text x="75.4592%" y="863.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::zip (1 samples, 0.10%)</title><rect x="75.3138%" y="1301" width="0.1046%" height="15" fill="rgb(254,2,33)" fg:x="720" fg:w="1"/><text x="75.5638%" y="1311.50"></text></g><g><title>databend-query`core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.10%)</title><rect x="75.3138%" y="1285" width="0.1046%" height="15" fill="rgb(243,160,20)" fg:x="720" fg:w="1"/><text x="75.5638%" y="1295.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.10%)</title><rect x="75.3138%" y="1269" width="0.1046%" height="15" fill="rgb(218,208,30)" fg:x="720" fg:w="1"/><text x="75.5638%" y="1279.50"></text></g><g><title>databend-query`core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (1 samples, 0.10%)</title><rect x="75.3138%" y="1253" width="0.1046%" height="15" fill="rgb(224,120,49)" fg:x="720" fg:w="1"/><text x="75.5638%" y="1263.50"></text></g><g><title>databend-query`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.10%)</title><rect x="75.3138%" y="1237" width="0.1046%" height="15" fill="rgb(246,12,2)" fg:x="720" fg:w="1"/><text x="75.5638%" y="1247.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="75.4184%" y="1269" width="0.1046%" height="15" fill="rgb(236,117,3)" fg:x="721" fg:w="1"/><text x="75.6684%" y="1279.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;dyn common_datavalues::columns::column::Column&gt;]&gt; (1 samples, 0.10%)</title><rect x="75.4184%" y="1253" width="0.1046%" height="15" fill="rgb(216,128,52)" fg:x="721" fg:w="1"/><text x="75.6684%" y="1263.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn common_datavalues::columns::column::Column&gt;&gt; (1 samples, 0.10%)</title><rect x="75.4184%" y="1237" width="0.1046%" height="15" fill="rgb(246,145,19)" fg:x="721" fg:w="1"/><text x="75.6684%" y="1247.50"></text></g><g><title>databend-query`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="75.4184%" y="1221" width="0.1046%" height="15" fill="rgb(222,11,46)" fg:x="721" fg:w="1"/><text x="75.6684%" y="1231.50"></text></g><g><title>databend-query`core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.10%)</title><rect x="75.4184%" y="1205" width="0.1046%" height="15" fill="rgb(245,82,36)" fg:x="721" fg:w="1"/><text x="75.6684%" y="1215.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_datablocks::data_block::DataBlock&gt; (2 samples, 0.21%)</title><rect x="75.4184%" y="1301" width="0.2092%" height="15" fill="rgb(250,73,51)" fg:x="721" fg:w="2"/><text x="75.6684%" y="1311.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;dyn common_datavalues::columns::column::Column&gt;&gt;&gt; (2 samples, 0.21%)</title><rect x="75.4184%" y="1285" width="0.2092%" height="15" fill="rgb(221,189,23)" fg:x="721" fg:w="2"/><text x="75.6684%" y="1295.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::sync::Arc&lt;dyn common_datavalues::columns::column::Column&gt;&gt;&gt; (1 samples, 0.10%)</title><rect x="75.5230%" y="1269" width="0.1046%" height="15" fill="rgb(210,33,7)" fg:x="722" fg:w="1"/><text x="75.7730%" y="1279.50"></text></g><g><title>databend-query`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="75.5230%" y="1253" width="0.1046%" height="15" fill="rgb(210,107,22)" fg:x="722" fg:w="1"/><text x="75.7730%" y="1263.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.10%)</title><rect x="75.5230%" y="1237" width="0.1046%" height="15" fill="rgb(222,116,37)" fg:x="722" fg:w="1"/><text x="75.7730%" y="1247.50"></text></g><g><title>databend-query`alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="75.5230%" y="1221" width="0.1046%" height="15" fill="rgb(254,17,48)" fg:x="722" fg:w="1"/><text x="75.7730%" y="1231.50"></text></g><g><title>databend-query`__rg_dealloc (1 samples, 0.10%)</title><rect x="75.5230%" y="1205" width="0.1046%" height="15" fill="rgb(224,36,32)" fg:x="722" fg:w="1"/><text x="75.7730%" y="1215.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.10%)</title><rect x="75.5230%" y="1189" width="0.1046%" height="15" fill="rgb(232,90,46)" fg:x="722" fg:w="1"/><text x="75.7730%" y="1199.50"></text></g><g><title>databend-query`_rjem_sdallocx (1 samples, 0.10%)</title><rect x="75.5230%" y="1173" width="0.1046%" height="15" fill="rgb(241,66,40)" fg:x="722" fg:w="1"/><text x="75.7730%" y="1183.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.10%)</title><rect x="75.6276%" y="1285" width="0.1046%" height="15" fill="rgb(249,184,29)" fg:x="723" fg:w="1"/><text x="75.8776%" y="1295.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.10%)</title><rect x="75.6276%" y="1269" width="0.1046%" height="15" fill="rgb(231,181,1)" fg:x="723" fg:w="1"/><text x="75.8776%" y="1279.50"></text></g><g><title>databend-query`smallvec::SmallVec&lt;A&gt;::as_mut_ptr (1 samples, 0.10%)</title><rect x="75.7322%" y="1189" width="0.1046%" height="15" fill="rgb(224,94,2)" fg:x="724" fg:w="1"/><text x="75.9822%" y="1199.50"></text></g><g><title>databend-query`smallvec::SmallVec&lt;A&gt;::triple_mut (1 samples, 0.10%)</title><rect x="75.7322%" y="1173" width="0.1046%" height="15" fill="rgb(229,170,15)" fg:x="724" fg:w="1"/><text x="75.9822%" y="1183.50"></text></g><g><title>databend-query`smallvec::SmallVec&lt;A&gt;::spilled (1 samples, 0.10%)</title><rect x="75.7322%" y="1157" width="0.1046%" height="15" fill="rgb(240,127,35)" fg:x="724" fg:w="1"/><text x="75.9822%" y="1167.50"></text></g><g><title>databend-query`&lt;[T (1 samples, 0.10%)</title><rect x="75.7322%" y="1141" width="0.1046%" height="15" fill="rgb(248,196,34)" fg:x="724" fg:w="1"/><text x="75.9822%" y="1151.50"></text></g><g><title> 16] as smallvec::Array&gt;::size (1 samples, 0.10%)</title><rect x="75.7322%" y="1125" width="0.1046%" height="15" fill="rgb(236,137,7)" fg:x="724" fg:w="1"/><text x="75.9822%" y="1135.50"></text></g><g><title>databend-query`common_datavalues::columns::group_hash::_&lt;impl common_datavalues::columns::series::Series&gt;::serialize (2 samples, 0.21%)</title><rect x="75.7322%" y="1285" width="0.2092%" height="15" fill="rgb(235,127,16)" fg:x="724" fg:w="2"/><text x="75.9822%" y="1295.50"></text></g><g><title>databend-query`&lt;common_datavalues::columns::primitive::PrimitiveColumn&lt;T&gt; as common_datavalues::columns::group_hash::GroupHash&gt;::serialize (2 samples, 0.21%)</title><rect x="75.7322%" y="1269" width="0.2092%" height="15" fill="rgb(250,192,54)" fg:x="724" fg:w="2"/><text x="75.9822%" y="1279.50"></text></g><g><title>databend-query`&lt;T as common_io::binary_write::BinaryWrite&gt;::write_scalar (2 samples, 0.21%)</title><rect x="75.7322%" y="1253" width="0.2092%" height="15" fill="rgb(218,98,20)" fg:x="724" fg:w="2"/><text x="75.9822%" y="1263.50"></text></g><g><title>databend-query`&lt;smallvec::SmallVec&lt;A&gt; as std::io::Write&gt;::write_all (2 samples, 0.21%)</title><rect x="75.7322%" y="1237" width="0.2092%" height="15" fill="rgb(230,176,47)" fg:x="724" fg:w="2"/><text x="75.9822%" y="1247.50"></text></g><g><title>databend-query`smallvec::SmallVec&lt;A&gt;::extend_from_slice (2 samples, 0.21%)</title><rect x="75.7322%" y="1221" width="0.2092%" height="15" fill="rgb(244,2,33)" fg:x="724" fg:w="2"/><text x="75.9822%" y="1231.50"></text></g><g><title>databend-query`smallvec::SmallVec&lt;A&gt;::insert_from_slice (2 samples, 0.21%)</title><rect x="75.7322%" y="1205" width="0.2092%" height="15" fill="rgb(231,100,17)" fg:x="724" fg:w="2"/><text x="75.9822%" y="1215.50"></text></g><g><title>databend-query`smallvec::SmallVec&lt;A&gt;::set_len (1 samples, 0.10%)</title><rect x="75.8368%" y="1189" width="0.1046%" height="15" fill="rgb(245,23,12)" fg:x="725" fg:w="1"/><text x="76.0868%" y="1199.50"></text></g><g><title>databend-query`smallvec::SmallVec&lt;A&gt;::triple_mut (1 samples, 0.10%)</title><rect x="75.8368%" y="1173" width="0.1046%" height="15" fill="rgb(249,55,22)" fg:x="725" fg:w="1"/><text x="76.0868%" y="1183.50"></text></g><g><title>databend-query`smallvec::SmallVec&lt;A&gt;::spilled (1 samples, 0.10%)</title><rect x="75.8368%" y="1157" width="0.1046%" height="15" fill="rgb(207,134,9)" fg:x="725" fg:w="1"/><text x="76.0868%" y="1167.50"></text></g><g><title>databend-query`databend_query::pipelines::new::processors::transforms::hash_join::chaining_hash_table::ChainingHashTable::serialize_keys (4 samples, 0.42%)</title><rect x="75.6276%" y="1301" width="0.4184%" height="15" fill="rgb(218,134,0)" fg:x="723" fg:w="4"/><text x="75.8776%" y="1311.50"></text></g><g><title>databend-query`smallvec::SmallVec&lt;A&gt;::new (1 samples, 0.10%)</title><rect x="75.9414%" y="1285" width="0.1046%" height="15" fill="rgb(213,212,33)" fg:x="726" fg:w="1"/><text x="76.1914%" y="1295.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.10%)</title><rect x="76.0460%" y="1285" width="0.1046%" height="15" fill="rgb(252,106,18)" fg:x="727" fg:w="1"/><text x="76.2960%" y="1295.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="76.0460%" y="1269" width="0.1046%" height="15" fill="rgb(208,126,42)" fg:x="727" fg:w="1"/><text x="76.2960%" y="1279.50"></text></g><g><title>databend-query`core::slice::raw::from_raw_parts (1 samples, 0.10%)</title><rect x="76.0460%" y="1253" width="0.1046%" height="15" fill="rgb(246,175,29)" fg:x="727" fg:w="1"/><text x="76.2960%" y="1263.50"></text></g><g><title>databend-query`core::ptr::const_ptr::_&lt;impl *const T&gt;::cast (1 samples, 0.10%)</title><rect x="76.0460%" y="1237" width="0.1046%" height="15" fill="rgb(215,13,50)" fg:x="727" fg:w="1"/><text x="76.2960%" y="1247.50"></text></g><g><title>databend-query`&lt;common_datablocks::data_block::DataBlock as core::clone::Clone&gt;::clone (2 samples, 0.21%)</title><rect x="76.1506%" y="1285" width="0.2092%" height="15" fill="rgb(216,172,15)" fg:x="728" fg:w="2"/><text x="76.4006%" y="1295.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="76.2552%" y="1269" width="0.1046%" height="15" fill="rgb(212,103,13)" fg:x="729" fg:w="1"/><text x="76.5052%" y="1279.50"></text></g><g><title>databend-query`alloc::slice::_&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="76.2552%" y="1253" width="0.1046%" height="15" fill="rgb(231,171,36)" fg:x="729" fg:w="1"/><text x="76.5052%" y="1263.50"></text></g><g><title>databend-query`alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="76.2552%" y="1237" width="0.1046%" height="15" fill="rgb(250,123,20)" fg:x="729" fg:w="1"/><text x="76.5052%" y="1247.50"></text></g><g><title>databend-query`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="76.2552%" y="1221" width="0.1046%" height="15" fill="rgb(212,53,50)" fg:x="729" fg:w="1"/><text x="76.5052%" y="1231.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="76.2552%" y="1205" width="0.1046%" height="15" fill="rgb(243,54,12)" fg:x="729" fg:w="1"/><text x="76.5052%" y="1215.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="76.2552%" y="1189" width="0.1046%" height="15" fill="rgb(234,101,34)" fg:x="729" fg:w="1"/><text x="76.5052%" y="1199.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="76.2552%" y="1173" width="0.1046%" height="15" fill="rgb(254,67,22)" fg:x="729" fg:w="1"/><text x="76.5052%" y="1183.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="76.2552%" y="1157" width="0.1046%" height="15" fill="rgb(250,35,47)" fg:x="729" fg:w="1"/><text x="76.5052%" y="1167.50"></text></g><g><title>databend-query`alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="76.2552%" y="1141" width="0.1046%" height="15" fill="rgb(226,126,38)" fg:x="729" fg:w="1"/><text x="76.5052%" y="1151.50"></text></g><g><title>databend-query`alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="76.2552%" y="1125" width="0.1046%" height="15" fill="rgb(216,138,53)" fg:x="729" fg:w="1"/><text x="76.5052%" y="1135.50"></text></g><g><title>databend-query`__rg_alloc (1 samples, 0.10%)</title><rect x="76.2552%" y="1109" width="0.1046%" height="15" fill="rgb(246,199,43)" fg:x="729" fg:w="1"/><text x="76.5052%" y="1119.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.10%)</title><rect x="76.2552%" y="1093" width="0.1046%" height="15" fill="rgb(232,125,11)" fg:x="729" fg:w="1"/><text x="76.5052%" y="1103.50"></text></g><g><title>databend-query`_rjem_mallocx (1 samples, 0.10%)</title><rect x="76.2552%" y="1077" width="0.1046%" height="15" fill="rgb(218,219,45)" fg:x="729" fg:w="1"/><text x="76.5052%" y="1087.50"></text></g><g><title>databend-query`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="76.3598%" y="1285" width="0.1046%" height="15" fill="rgb(216,102,54)" fg:x="730" fg:w="1"/><text x="76.6098%" y="1295.50"></text></g><g><title>databend-query`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.10%)</title><rect x="76.3598%" y="1269" width="0.1046%" height="15" fill="rgb(250,228,7)" fg:x="730" fg:w="1"/><text x="76.6098%" y="1279.50"></text></g><g><title>databend-query`&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="76.4644%" y="1285" width="0.1046%" height="15" fill="rgb(226,125,25)" fg:x="731" fg:w="1"/><text x="76.7144%" y="1295.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.31%)</title><rect x="76.5690%" y="1285" width="0.3138%" height="15" fill="rgb(224,165,27)" fg:x="732" fg:w="3"/><text x="76.8190%" y="1295.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.31%)</title><rect x="76.5690%" y="1269" width="0.3138%" height="15" fill="rgb(233,86,3)" fg:x="732" fg:w="3"/><text x="76.8190%" y="1279.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.21%)</title><rect x="76.6736%" y="1253" width="0.2092%" height="15" fill="rgb(228,116,20)" fg:x="733" fg:w="2"/><text x="76.9236%" y="1263.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.10%)</title><rect x="76.7782%" y="1237" width="0.1046%" height="15" fill="rgb(209,192,17)" fg:x="734" fg:w="1"/><text x="77.0282%" y="1247.50"></text></g><g><title>databend-query`common_datablocks::data_block::DataBlock::is_empty (2 samples, 0.21%)</title><rect x="76.8828%" y="1285" width="0.2092%" height="15" fill="rgb(224,88,34)" fg:x="735" fg:w="2"/><text x="77.1328%" y="1295.50"></text></g><g><title>databend-query`common_datablocks::data_block::DataBlock::num_columns (1 samples, 0.10%)</title><rect x="76.9874%" y="1269" width="0.1046%" height="15" fill="rgb(233,38,6)" fg:x="736" fg:w="1"/><text x="77.2374%" y="1279.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="77.0921%" y="1205" width="0.1046%" height="15" fill="rgb(212,59,30)" fg:x="737" fg:w="1"/><text x="77.3421%" y="1215.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;dyn common_datavalues::columns::column::Column&gt;]&gt; (1 samples, 0.10%)</title><rect x="77.0921%" y="1189" width="0.1046%" height="15" fill="rgb(213,80,3)" fg:x="737" fg:w="1"/><text x="77.3421%" y="1199.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn common_datavalues::columns::column::Column&gt;&gt; (1 samples, 0.10%)</title><rect x="77.0921%" y="1173" width="0.1046%" height="15" fill="rgb(251,178,7)" fg:x="737" fg:w="1"/><text x="77.3421%" y="1183.50"></text></g><g><title>databend-query`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="77.0921%" y="1157" width="0.1046%" height="15" fill="rgb(213,154,26)" fg:x="737" fg:w="1"/><text x="77.3421%" y="1167.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.10%)</title><rect x="77.0921%" y="1141" width="0.1046%" height="15" fill="rgb(238,165,49)" fg:x="737" fg:w="1"/><text x="77.3421%" y="1151.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.21%)</title><rect x="77.1967%" y="1173" width="0.2092%" height="15" fill="rgb(248,91,46)" fg:x="738" fg:w="2"/><text x="77.4467%" y="1183.50"></text></g><g><title>databend-query`alloc::alloc::dealloc (2 samples, 0.21%)</title><rect x="77.1967%" y="1157" width="0.2092%" height="15" fill="rgb(244,21,52)" fg:x="738" fg:w="2"/><text x="77.4467%" y="1167.50"></text></g><g><title>databend-query`__rg_dealloc (1 samples, 0.10%)</title><rect x="77.3013%" y="1141" width="0.1046%" height="15" fill="rgb(247,122,20)" fg:x="739" fg:w="1"/><text x="77.5513%" y="1151.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.10%)</title><rect x="77.3013%" y="1125" width="0.1046%" height="15" fill="rgb(218,27,9)" fg:x="739" fg:w="1"/><text x="77.5513%" y="1135.50"></text></g><g><title>libsystem_pthread.dylib`___chkstk_darwin (1 samples, 0.10%)</title><rect x="77.3013%" y="1109" width="0.1046%" height="15" fill="rgb(246,7,6)" fg:x="739" fg:w="1"/><text x="77.5513%" y="1119.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.42%)</title><rect x="77.0921%" y="1269" width="0.4184%" height="15" fill="rgb(227,135,54)" fg:x="737" fg:w="4"/><text x="77.3421%" y="1279.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;[common_datablocks::data_block::DataBlock]&gt; (4 samples, 0.42%)</title><rect x="77.0921%" y="1253" width="0.4184%" height="15" fill="rgb(247,14,11)" fg:x="737" fg:w="4"/><text x="77.3421%" y="1263.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_datablocks::data_block::DataBlock&gt; (4 samples, 0.42%)</title><rect x="77.0921%" y="1237" width="0.4184%" height="15" fill="rgb(206,149,34)" fg:x="737" fg:w="4"/><text x="77.3421%" y="1247.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;dyn common_datavalues::columns::column::Column&gt;&gt;&gt; (4 samples, 0.42%)</title><rect x="77.0921%" y="1221" width="0.4184%" height="15" fill="rgb(227,228,4)" fg:x="737" fg:w="4"/><text x="77.3421%" y="1231.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::sync::Arc&lt;dyn common_datavalues::columns::column::Column&gt;&gt;&gt; (3 samples, 0.31%)</title><rect x="77.1967%" y="1205" width="0.3138%" height="15" fill="rgb(238,218,28)" fg:x="738" fg:w="3"/><text x="77.4467%" y="1215.50"></text></g><g><title>databend-query`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.31%)</title><rect x="77.1967%" y="1189" width="0.3138%" height="15" fill="rgb(252,86,40)" fg:x="738" fg:w="3"/><text x="77.4467%" y="1199.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.10%)</title><rect x="77.4059%" y="1173" width="0.1046%" height="15" fill="rgb(251,225,11)" fg:x="740" fg:w="1"/><text x="77.6559%" y="1183.50"></text></g><g><title>databend-query`core::alloc::layout::Layout::array (1 samples, 0.10%)</title><rect x="77.4059%" y="1157" width="0.1046%" height="15" fill="rgb(206,46,49)" fg:x="740" fg:w="1"/><text x="77.6559%" y="1167.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;common_datablocks::data_block::DataBlock&gt;&gt; (5 samples, 0.52%)</title><rect x="77.0921%" y="1285" width="0.5230%" height="15" fill="rgb(245,128,24)" fg:x="737" fg:w="5"/><text x="77.3421%" y="1295.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;common_datablocks::data_block::DataBlock&gt;&gt; (1 samples, 0.10%)</title><rect x="77.5105%" y="1269" width="0.1046%" height="15" fill="rgb(219,177,34)" fg:x="741" fg:w="1"/><text x="77.7605%" y="1279.50"></text></g><g><title>databend-query`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="77.5105%" y="1253" width="0.1046%" height="15" fill="rgb(218,60,48)" fg:x="741" fg:w="1"/><text x="77.7605%" y="1263.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.10%)</title><rect x="77.5105%" y="1237" width="0.1046%" height="15" fill="rgb(221,11,5)" fg:x="741" fg:w="1"/><text x="77.7605%" y="1247.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;databend_query::pipelines::new::processors::transforms::hash_join::row::Chunk&gt;&gt;&gt; (1 samples, 0.10%)</title><rect x="77.6151%" y="1285" width="0.1046%" height="15" fill="rgb(220,148,13)" fg:x="742" fg:w="1"/><text x="77.8651%" y="1295.50"></text></g><g><title>databend-query`&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="77.6151%" y="1269" width="0.1046%" height="15" fill="rgb(210,16,3)" fg:x="742" fg:w="1"/><text x="77.8651%" y="1279.50"></text></g><g><title>databend-query`std::sys_common::rwlock::MovableRwLock::read_unlock (1 samples, 0.10%)</title><rect x="77.6151%" y="1253" width="0.1046%" height="15" fill="rgb(236,80,2)" fg:x="742" fg:w="1"/><text x="77.8651%" y="1263.50"></text></g><g><title>databend-query`std::sys::unix::locks::pthread_rwlock::RwLock::read_unlock (1 samples, 0.10%)</title><rect x="77.6151%" y="1237" width="0.1046%" height="15" fill="rgb(239,129,19)" fg:x="742" fg:w="1"/><text x="77.8651%" y="1247.50"></text></g><g><title>databend-query`core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.10%)</title><rect x="77.6151%" y="1221" width="0.1046%" height="15" fill="rgb(220,106,35)" fg:x="742" fg:w="1"/><text x="77.8651%" y="1231.50"></text></g><g><title>databend-query`common_datablocks::data_block::DataBlock::try_column_by_name (2 samples, 0.21%)</title><rect x="77.7197%" y="1013" width="0.2092%" height="15" fill="rgb(252,139,45)" fg:x="743" fg:w="2"/><text x="77.9697%" y="1023.50"></text></g><g><title>databend-query`common_datavalues::data_schema::DataSchema::index_of (2 samples, 0.21%)</title><rect x="77.7197%" y="997" width="0.2092%" height="15" fill="rgb(229,8,36)" fg:x="743" fg:w="2"/><text x="77.9697%" y="1007.50"></text></g><g><title>databend-query`core::cmp::impls::_&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.21%)</title><rect x="77.7197%" y="981" width="0.2092%" height="15" fill="rgb(230,126,33)" fg:x="743" fg:w="2"/><text x="77.9697%" y="991.50"></text></g><g><title>databend-query`&lt;alloc::string::String as core::cmp::PartialEq&lt;str&gt;&gt;::eq (2 samples, 0.21%)</title><rect x="77.7197%" y="965" width="0.2092%" height="15" fill="rgb(239,140,21)" fg:x="743" fg:w="2"/><text x="77.9697%" y="975.50"></text></g><g><title>databend-query`&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (2 samples, 0.21%)</title><rect x="77.7197%" y="949" width="0.2092%" height="15" fill="rgb(254,104,9)" fg:x="743" fg:w="2"/><text x="77.9697%" y="959.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="77.8243%" y="933" width="0.1046%" height="15" fill="rgb(239,52,14)" fg:x="744" fg:w="1"/><text x="78.0743%" y="943.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.10%)</title><rect x="77.8243%" y="917" width="0.1046%" height="15" fill="rgb(208,227,44)" fg:x="744" fg:w="1"/><text x="78.0743%" y="927.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.10%)</title><rect x="77.8243%" y="901" width="0.1046%" height="15" fill="rgb(246,18,19)" fg:x="744" fg:w="1"/><text x="78.0743%" y="911.50"></text></g><g><title>databend-query`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.21%)</title><rect x="78.1381%" y="997" width="0.2092%" height="15" fill="rgb(235,228,25)" fg:x="747" fg:w="2"/><text x="78.3881%" y="1007.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::inner (2 samples, 0.21%)</title><rect x="78.1381%" y="981" width="0.2092%" height="15" fill="rgb(240,156,20)" fg:x="747" fg:w="2"/><text x="78.3881%" y="991.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.10%)</title><rect x="78.2427%" y="965" width="0.1046%" height="15" fill="rgb(224,8,20)" fg:x="748" fg:w="1"/><text x="78.4927%" y="975.50"></text></g><g><title>databend-query`&lt;common_datavalues::columns::primitive::PrimitiveColumn&lt;T&gt; as common_datavalues::scalars::column::ScalarColumn&gt;::get_data (1 samples, 0.10%)</title><rect x="78.3473%" y="997" width="0.1046%" height="15" fill="rgb(214,12,52)" fg:x="749" fg:w="1"/><text x="78.5973%" y="1007.50"></text></g><g><title>databend-query`&lt;arrow2::buffer::immutable::Buffer&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="78.3473%" y="981" width="0.1046%" height="15" fill="rgb(211,220,47)" fg:x="749" fg:w="1"/><text x="78.5973%" y="991.50"></text></g><g><title>databend-query`arrow2::buffer::immutable::Buffer&lt;T&gt;::as_slice (1 samples, 0.10%)</title><rect x="78.3473%" y="965" width="0.1046%" height="15" fill="rgb(250,173,5)" fg:x="749" fg:w="1"/><text x="78.5973%" y="975.50"></text></g><g><title>databend-query`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="78.3473%" y="949" width="0.1046%" height="15" fill="rgb(250,125,52)" fg:x="749" fg:w="1"/><text x="78.5973%" y="959.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.10%)</title><rect x="78.3473%" y="933" width="0.1046%" height="15" fill="rgb(209,133,18)" fg:x="749" fg:w="1"/><text x="78.5973%" y="943.50"></text></g><g><title>databend-query`__rg_alloc (2 samples, 0.21%)</title><rect x="78.4519%" y="869" width="0.2092%" height="15" fill="rgb(216,173,22)" fg:x="750" fg:w="2"/><text x="78.7019%" y="879.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::alloc (2 samples, 0.21%)</title><rect x="78.4519%" y="853" width="0.2092%" height="15" fill="rgb(205,3,22)" fg:x="750" fg:w="2"/><text x="78.7019%" y="863.50"></text></g><g><title>databend-query`_rjem_mallocx (2 samples, 0.21%)</title><rect x="78.4519%" y="837" width="0.2092%" height="15" fill="rgb(248,22,20)" fg:x="750" fg:w="2"/><text x="78.7019%" y="847.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.31%)</title><rect x="78.4519%" y="917" width="0.3138%" height="15" fill="rgb(233,6,29)" fg:x="750" fg:w="3"/><text x="78.7019%" y="927.50"></text></g><g><title>databend-query`alloc::alloc::Global::alloc_impl (3 samples, 0.31%)</title><rect x="78.4519%" y="901" width="0.3138%" height="15" fill="rgb(240,22,54)" fg:x="750" fg:w="3"/><text x="78.7019%" y="911.50"></text></g><g><title>databend-query`alloc::alloc::alloc (3 samples, 0.31%)</title><rect x="78.4519%" y="885" width="0.3138%" height="15" fill="rgb(231,133,32)" fg:x="750" fg:w="3"/><text x="78.7019%" y="895.50"></text></g><g><title>databend-query`core::alloc::layout::Layout::align (1 samples, 0.10%)</title><rect x="78.6611%" y="869" width="0.1046%" height="15" fill="rgb(248,193,4)" fg:x="752" fg:w="1"/><text x="78.9111%" y="879.50"></text></g><g><title>databend-query`core::mem::valid_align::ValidAlign::as_nonzero (1 samples, 0.10%)</title><rect x="78.6611%" y="853" width="0.1046%" height="15" fill="rgb(211,178,46)" fg:x="752" fg:w="1"/><text x="78.9111%" y="863.50"></text></g><g><title>databend-query`&lt;common_datavalues::columns::primitive::mutable::MutablePrimitiveColumn&lt;T&gt; as common_datavalues::scalars::column::ScalarColumnBuilder&gt;::finish (4 samples, 0.42%)</title><rect x="78.4519%" y="997" width="0.4184%" height="15" fill="rgb(224,5,42)" fg:x="750" fg:w="4"/><text x="78.7019%" y="1007.50"></text></g><g><title>databend-query`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (4 samples, 0.42%)</title><rect x="78.4519%" y="981" width="0.4184%" height="15" fill="rgb(239,176,25)" fg:x="750" fg:w="4"/><text x="78.7019%" y="991.50"></text></g><g><title>databend-query`&lt;arrow2::buffer::immutable::Buffer&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (4 samples, 0.42%)</title><rect x="78.4519%" y="965" width="0.4184%" height="15" fill="rgb(245,187,50)" fg:x="750" fg:w="4"/><text x="78.7019%" y="975.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::new (4 samples, 0.42%)</title><rect x="78.4519%" y="949" width="0.4184%" height="15" fill="rgb(248,24,15)" fg:x="750" fg:w="4"/><text x="78.7019%" y="959.50"></text></g><g><title>databend-query`alloc::alloc::exchange_malloc (4 samples, 0.42%)</title><rect x="78.4519%" y="933" width="0.4184%" height="15" fill="rgb(205,166,13)" fg:x="750" fg:w="4"/><text x="78.7019%" y="943.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;[T]&gt;::as_mut_ptr (1 samples, 0.10%)</title><rect x="78.7657%" y="917" width="0.1046%" height="15" fill="rgb(208,114,23)" fg:x="753" fg:w="1"/><text x="79.0157%" y="927.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.10%)</title><rect x="78.7657%" y="901" width="0.1046%" height="15" fill="rgb(239,127,18)" fg:x="753" fg:w="1"/><text x="79.0157%" y="911.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.10%)</title><rect x="78.8703%" y="997" width="0.1046%" height="15" fill="rgb(219,154,28)" fg:x="754" fg:w="1"/><text x="79.1203%" y="1007.50"></text></g><g><title>databend-query`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.10%)</title><rect x="78.8703%" y="981" width="0.1046%" height="15" fill="rgb(225,157,23)" fg:x="754" fg:w="1"/><text x="79.1203%" y="991.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::alloc (2 samples, 0.21%)</title><rect x="79.0795%" y="853" width="0.2092%" height="15" fill="rgb(219,8,6)" fg:x="756" fg:w="2"/><text x="79.3295%" y="863.50"></text></g><g><title>databend-query`_rjem_mallocx (2 samples, 0.21%)</title><rect x="79.0795%" y="837" width="0.2092%" height="15" fill="rgb(212,47,6)" fg:x="756" fg:w="2"/><text x="79.3295%" y="847.50"></text></g><g><title>databend-query`__rg_alloc (3 samples, 0.31%)</title><rect x="79.0795%" y="869" width="0.3138%" height="15" fill="rgb(224,190,4)" fg:x="756" fg:w="3"/><text x="79.3295%" y="879.50"></text></g><g><title>databend-query`_rjem_mallocx (1 samples, 0.10%)</title><rect x="79.2887%" y="853" width="0.1046%" height="15" fill="rgb(239,183,29)" fg:x="758" fg:w="1"/><text x="79.5387%" y="863.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.42%)</title><rect x="79.0795%" y="933" width="0.4184%" height="15" fill="rgb(213,57,7)" fg:x="756" fg:w="4"/><text x="79.3295%" y="943.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.42%)</title><rect x="79.0795%" y="917" width="0.4184%" height="15" fill="rgb(216,148,1)" fg:x="756" fg:w="4"/><text x="79.3295%" y="927.50"></text></g><g><title>databend-query`alloc::alloc::Global::alloc_impl (4 samples, 0.42%)</title><rect x="79.0795%" y="901" width="0.4184%" height="15" fill="rgb(236,182,29)" fg:x="756" fg:w="4"/><text x="79.3295%" y="911.50"></text></g><g><title>databend-query`alloc::alloc::alloc (4 samples, 0.42%)</title><rect x="79.0795%" y="885" width="0.4184%" height="15" fill="rgb(244,120,48)" fg:x="756" fg:w="4"/><text x="79.3295%" y="895.50"></text></g><g><title>databend-query`core::alloc::layout::Layout::align (1 samples, 0.10%)</title><rect x="79.3933%" y="869" width="0.1046%" height="15" fill="rgb(206,71,34)" fg:x="759" fg:w="1"/><text x="79.6433%" y="879.50"></text></g><g><title>databend-query`core::num::nonzero::NonZeroUsize::new_unchecked (1 samples, 0.10%)</title><rect x="79.3933%" y="853" width="0.1046%" height="15" fill="rgb(242,32,6)" fg:x="759" fg:w="1"/><text x="79.6433%" y="863.50"></text></g><g><title>databend-query`common_datavalues::columns::primitive::mutable::MutablePrimitiveColumn&lt;T&gt;::with_capacity (6 samples, 0.63%)</title><rect x="78.9749%" y="997" width="0.6276%" height="15" fill="rgb(241,35,3)" fg:x="755" fg:w="6"/><text x="79.2249%" y="1007.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.52%)</title><rect x="79.0795%" y="981" width="0.5230%" height="15" fill="rgb(222,62,19)" fg:x="756" fg:w="5"/><text x="79.3295%" y="991.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.52%)</title><rect x="79.0795%" y="965" width="0.5230%" height="15" fill="rgb(223,110,41)" fg:x="756" fg:w="5"/><text x="79.3295%" y="975.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.52%)</title><rect x="79.0795%" y="949" width="0.5230%" height="15" fill="rgb(208,224,4)" fg:x="756" fg:w="5"/><text x="79.3295%" y="959.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.10%)</title><rect x="79.4979%" y="933" width="0.1046%" height="15" fill="rgb(241,137,19)" fg:x="760" fg:w="1"/><text x="79.7479%" y="943.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 1.99%)</title><rect x="77.7197%" y="1125" width="1.9874%" height="15" fill="rgb(244,24,17)" fg:x="743" fg:w="19"/><text x="77.9697%" y="1135.50">d..</text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::try_for_each (19 samples, 1.99%)</title><rect x="77.7197%" y="1109" width="1.9874%" height="15" fill="rgb(245,178,49)" fg:x="743" fg:w="19"/><text x="77.9697%" y="1119.50">d..</text></g><g><title>databend-query`&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19 samples, 1.99%)</title><rect x="77.7197%" y="1093" width="1.9874%" height="15" fill="rgb(219,160,38)" fg:x="743" fg:w="19"/><text x="77.9697%" y="1103.50">d..</text></g><g><title>databend-query`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19 samples, 1.99%)</title><rect x="77.7197%" y="1077" width="1.9874%" height="15" fill="rgb(228,137,14)" fg:x="743" fg:w="19"/><text x="77.9697%" y="1087.50">d..</text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::try_fold (19 samples, 1.99%)</title><rect x="77.7197%" y="1061" width="1.9874%" height="15" fill="rgb(237,134,11)" fg:x="743" fg:w="19"/><text x="77.9697%" y="1071.50">d..</text></g><g><title>databend-query`core::iter::adapters::map::map_try_fold::_{{closure}} (19 samples, 1.99%)</title><rect x="77.7197%" y="1045" width="1.9874%" height="15" fill="rgb(211,126,44)" fg:x="743" fg:w="19"/><text x="77.9697%" y="1055.50">d..</text></g><g><title>databend-query`common_datablocks::kernels::data_block_take::_&lt;impl common_datablocks::data_block::DataBlock&gt;::block_take_by_indices::_{{closure}} (19 samples, 1.99%)</title><rect x="77.7197%" y="1029" width="1.9874%" height="15" fill="rgb(226,171,33)" fg:x="743" fg:w="19"/><text x="77.9697%" y="1039.50">d..</text></g><g><title>databend-query`common_datavalues::columns::take::_&lt;impl common_datavalues::columns::series::Series&gt;::take (17 samples, 1.78%)</title><rect x="77.9289%" y="1013" width="1.7782%" height="15" fill="rgb(253,99,13)" fg:x="745" fg:w="17"/><text x="78.1789%" y="1023.50">d..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.10%)</title><rect x="79.6025%" y="997" width="0.1046%" height="15" fill="rgb(244,48,7)" fg:x="761" fg:w="1"/><text x="79.8525%" y="1007.50"></text></g><g><title>databend-query`alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="79.7071%" y="1045" width="0.1046%" height="15" fill="rgb(244,217,54)" fg:x="762" fg:w="1"/><text x="79.9571%" y="1055.50"></text></g><g><title>databend-query`alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="79.7071%" y="1029" width="0.1046%" height="15" fill="rgb(224,15,18)" fg:x="762" fg:w="1"/><text x="79.9571%" y="1039.50"></text></g><g><title>databend-query`__rg_alloc (1 samples, 0.10%)</title><rect x="79.7071%" y="1013" width="0.1046%" height="15" fill="rgb(244,99,12)" fg:x="762" fg:w="1"/><text x="79.9571%" y="1023.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.10%)</title><rect x="79.7071%" y="997" width="0.1046%" height="15" fill="rgb(233,226,8)" fg:x="762" fg:w="1"/><text x="79.9571%" y="1007.50"></text></g><g><title>databend-query`_rjem_mallocx (1 samples, 0.10%)</title><rect x="79.7071%" y="981" width="0.1046%" height="15" fill="rgb(229,211,3)" fg:x="762" fg:w="1"/><text x="79.9571%" y="991.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.21%)</title><rect x="79.7071%" y="1125" width="0.2092%" height="15" fill="rgb(216,140,21)" fg:x="762" fg:w="2"/><text x="79.9571%" y="1135.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.21%)</title><rect x="79.7071%" y="1109" width="0.2092%" height="15" fill="rgb(234,122,30)" fg:x="762" fg:w="2"/><text x="79.9571%" y="1119.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.21%)</title><rect x="79.7071%" y="1093" width="0.2092%" height="15" fill="rgb(236,25,46)" fg:x="762" fg:w="2"/><text x="79.9571%" y="1103.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.21%)</title><rect x="79.7071%" y="1077" width="0.2092%" height="15" fill="rgb(217,52,54)" fg:x="762" fg:w="2"/><text x="79.9571%" y="1087.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.21%)</title><rect x="79.7071%" y="1061" width="0.2092%" height="15" fill="rgb(222,29,26)" fg:x="762" fg:w="2"/><text x="79.9571%" y="1071.50"></text></g><g><title>databend-query`core::option::Option&lt;T&gt;::ok_or (1 samples, 0.10%)</title><rect x="79.8117%" y="1045" width="0.1046%" height="15" fill="rgb(216,177,29)" fg:x="763" fg:w="1"/><text x="80.0617%" y="1055.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::collect (22 samples, 2.30%)</title><rect x="77.7197%" y="1253" width="2.3013%" height="15" fill="rgb(247,136,51)" fg:x="743" fg:w="22"/><text x="77.9697%" y="1263.50">d..</text></g><g><title>databend-query`&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (22 samples, 2.30%)</title><rect x="77.7197%" y="1237" width="2.3013%" height="15" fill="rgb(231,47,47)" fg:x="743" fg:w="22"/><text x="77.9697%" y="1247.50">d..</text></g><g><title>databend-query`core::iter::adapters::try_process (22 samples, 2.30%)</title><rect x="77.7197%" y="1221" width="2.3013%" height="15" fill="rgb(211,192,36)" fg:x="743" fg:w="22"/><text x="77.9697%" y="1231.50">d..</text></g><g><title>databend-query`&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::_{{closure}} (22 samples, 2.30%)</title><rect x="77.7197%" y="1205" width="2.3013%" height="15" fill="rgb(229,156,32)" fg:x="743" fg:w="22"/><text x="77.9697%" y="1215.50">d..</text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::collect (22 samples, 2.30%)</title><rect x="77.7197%" y="1189" width="2.3013%" height="15" fill="rgb(248,213,20)" fg:x="743" fg:w="22"/><text x="77.9697%" y="1199.50">d..</text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (22 samples, 2.30%)</title><rect x="77.7197%" y="1173" width="2.3013%" height="15" fill="rgb(217,64,7)" fg:x="743" fg:w="22"/><text x="77.9697%" y="1183.50">d..</text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (22 samples, 2.30%)</title><rect x="77.7197%" y="1157" width="2.3013%" height="15" fill="rgb(232,142,8)" fg:x="743" fg:w="22"/><text x="77.9697%" y="1167.50">d..</text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (22 samples, 2.30%)</title><rect x="77.7197%" y="1141" width="2.3013%" height="15" fill="rgb(224,92,44)" fg:x="743" fg:w="22"/><text x="77.9697%" y="1151.50">d..</text></g><g><title>databend-query`core::cmp::max (1 samples, 0.10%)</title><rect x="79.9163%" y="1125" width="0.1046%" height="15" fill="rgb(214,169,17)" fg:x="764" fg:w="1"/><text x="80.1663%" y="1135.50"></text></g><g><title>databend-query`databend_query::pipelines::new::processors::transforms::hash_join::row::RowSpace::gather_single_chunk (23 samples, 2.41%)</title><rect x="77.7197%" y="1285" width="2.4059%" height="15" fill="rgb(210,59,37)" fg:x="743" fg:w="23"/><text x="77.9697%" y="1295.50">da..</text></g><g><title>databend-query`common_datablocks::kernels::data_block_take::_&lt;impl common_datablocks::data_block::DataBlock&gt;::block_take_by_indices (23 samples, 2.41%)</title><rect x="77.7197%" y="1269" width="2.4059%" height="15" fill="rgb(214,116,48)" fg:x="743" fg:w="23"/><text x="77.9697%" y="1279.50">da..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.10%)</title><rect x="80.0209%" y="1253" width="0.1046%" height="15" fill="rgb(244,191,6)" fg:x="765" fg:w="1"/><text x="80.2709%" y="1263.50"></text></g><g><title>databend-query`std::sync::poison::map_result (1 samples, 0.10%)</title><rect x="80.1255%" y="1269" width="0.1046%" height="15" fill="rgb(241,50,52)" fg:x="766" fg:w="1"/><text x="80.3755%" y="1279.50"></text></g><g><title>databend-query`std::sync::poison::Flag::borrow (1 samples, 0.10%)</title><rect x="80.2301%" y="1253" width="0.1046%" height="15" fill="rgb(236,75,39)" fg:x="767" fg:w="1"/><text x="80.4801%" y="1263.50"></text></g><g><title>databend-query`std::thread::panicking (1 samples, 0.10%)</title><rect x="80.2301%" y="1237" width="0.1046%" height="15" fill="rgb(236,99,0)" fg:x="767" fg:w="1"/><text x="80.4801%" y="1247.50"></text></g><g><title>databend-query`std::panicking::panicking (1 samples, 0.10%)</title><rect x="80.2301%" y="1221" width="0.1046%" height="15" fill="rgb(207,202,15)" fg:x="767" fg:w="1"/><text x="80.4801%" y="1231.50"></text></g><g><title>databend-query`std::panicking::panic_count::count_is_zero (1 samples, 0.10%)</title><rect x="80.2301%" y="1205" width="0.1046%" height="15" fill="rgb(233,207,14)" fg:x="767" fg:w="1"/><text x="80.4801%" y="1215.50"></text></g><g><title>databend-query`databend_query::pipelines::new::processors::transforms::hash_join::row::RowSpace::gather (42 samples, 4.39%)</title><rect x="76.0460%" y="1301" width="4.3933%" height="15" fill="rgb(226,27,51)" fg:x="727" fg:w="42"/><text x="76.2960%" y="1311.50">datab..</text></g><g><title>databend-query`std::sync::rwlock::RwLock&lt;T&gt;::read (3 samples, 0.31%)</title><rect x="80.1255%" y="1285" width="0.3138%" height="15" fill="rgb(206,104,42)" fg:x="766" fg:w="3"/><text x="80.3755%" y="1295.50"></text></g><g><title>databend-query`std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (2 samples, 0.21%)</title><rect x="80.2301%" y="1269" width="0.2092%" height="15" fill="rgb(212,225,4)" fg:x="767" fg:w="2"/><text x="80.4801%" y="1279.50"></text></g><g><title>databend-query`std::sync::poison::map_result (1 samples, 0.10%)</title><rect x="80.3347%" y="1253" width="0.1046%" height="15" fill="rgb(233,96,42)" fg:x="768" fg:w="1"/><text x="80.5847%" y="1263.50"></text></g><g><title>databend-query`databend_query::pipelines::new::executor::pipeline_executor::PipelineExecutor::execute_threads::_{{closure}} (704 samples, 73.64%)</title><rect x="6.9038%" y="1429" width="73.6402%" height="15" fill="rgb(229,21,32)" fg:x="66" fg:w="704"/><text x="7.1538%" y="1439.50">databend-query`databend_query::pipelines::new::executor::pipeline_executor::PipelineExecutor::execute_threads::_{{closure}}</text></g><g><title>databend-query`databend_query::pipelines::new::executor::pipeline_executor::PipelineExecutor::execute_single_thread (703 samples, 73.54%)</title><rect x="7.0084%" y="1413" width="73.5356%" height="15" fill="rgb(226,216,24)" fg:x="67" fg:w="703"/><text x="7.2584%" y="1423.50">databend-query`databend_query::pipelines::new::executor::pipeline_executor::PipelineExecutor::execute_single_thread</text></g><g><title>databend-query`databend_query::pipelines::new::executor::executor_worker_context::ExecutorWorkerContext::execute_task (439 samples, 45.92%)</title><rect x="34.6234%" y="1397" width="45.9205%" height="15" fill="rgb(221,163,17)" fg:x="331" fg:w="439"/><text x="34.8734%" y="1407.50">databend-query`databend_query::pipelines::new::executor::executor_worker_co..</text></g><g><title>databend-query`databend_query::pipelines::new::executor::executor_worker_context::ExecutorWorkerContext::execute_sync_task (436 samples, 45.61%)</title><rect x="34.9372%" y="1381" width="45.6067%" height="15" fill="rgb(216,216,42)" fg:x="334" fg:w="436"/><text x="35.1872%" y="1391.50">databend-query`databend_query::pipelines::new::executor::executor_worker_co..</text></g><g><title>databend-query`databend_query::pipelines::new::processors::processor::ProcessorPtr::process (434 samples, 45.40%)</title><rect x="35.1464%" y="1365" width="45.3975%" height="15" fill="rgb(240,118,7)" fg:x="336" fg:w="434"/><text x="35.3964%" y="1375.50">databend-query`databend_query::pipelines::new::processors::processor::Proc..</text></g><g><title>databend-query`&lt;databend_query::pipelines::new::processors::transforms::transform_hash_join::TransformHashJoinProbe as databend_query::pipelines::new::processors::processor::Processor&gt;::process (110 samples, 11.51%)</title><rect x="69.0377%" y="1349" width="11.5063%" height="15" fill="rgb(221,67,37)" fg:x="660" fg:w="110"/><text x="69.2877%" y="1359.50">databend-query`&lt;d..</text></g><g><title>databend-query`databend_query::pipelines::new::processors::transforms::transform_hash_join::TransformHashJoinProbe::probe (110 samples, 11.51%)</title><rect x="69.0377%" y="1333" width="11.5063%" height="15" fill="rgb(241,32,44)" fg:x="660" fg:w="110"/><text x="69.2877%" y="1343.50">databend-query`da..</text></g><g><title>databend-query`&lt;databend_query::pipelines::new::processors::transforms::hash_join::chaining_hash_table::ChainingHashTable as databend_query::pipelines::new::processors::transforms::hash_join::hash_table::HashJoinState&gt;::probe (110 samples, 11.51%)</title><rect x="69.0377%" y="1317" width="11.5063%" height="15" fill="rgb(235,204,43)" fg:x="660" fg:w="110"/><text x="69.2877%" y="1327.50">databend-query`&lt;d..</text></g><g><title>databend-query`smallvec::SmallVec&lt;A&gt;::as_ptr (1 samples, 0.10%)</title><rect x="80.4393%" y="1301" width="0.1046%" height="15" fill="rgb(213,116,10)" fg:x="769" fg:w="1"/><text x="80.6893%" y="1311.50"></text></g><g><title>databend-query`smallvec::SmallVec&lt;A&gt;::triple (1 samples, 0.10%)</title><rect x="80.4393%" y="1285" width="0.1046%" height="15" fill="rgb(239,15,48)" fg:x="769" fg:w="1"/><text x="80.6893%" y="1295.50"></text></g><g><title>databend-query`databend_query::servers::mysql::mysql_session::MySQLConnection::run_on_stream::_{{closure}} (1 samples, 0.10%)</title><rect x="80.5439%" y="1429" width="0.1046%" height="15" fill="rgb(207,123,36)" fg:x="770" fg:w="1"/><text x="80.7939%" y="1439.50"></text></g><g><title>databend-query`sled::flusher::Flusher::new::_{{closure}} (2 samples, 0.21%)</title><rect x="80.6485%" y="1429" width="0.2092%" height="15" fill="rgb(209,103,30)" fg:x="771" fg:w="2"/><text x="80.8985%" y="1439.50"></text></g><g><title>databend-query`sled::flusher::run (2 samples, 0.21%)</title><rect x="80.6485%" y="1413" width="0.2092%" height="15" fill="rgb(238,100,19)" fg:x="771" fg:w="2"/><text x="80.8985%" y="1423.50"></text></g><g><title>databend-query`std::fs::File::sync_all (2 samples, 0.21%)</title><rect x="80.6485%" y="1397" width="0.2092%" height="15" fill="rgb(244,30,14)" fg:x="771" fg:w="2"/><text x="80.8985%" y="1407.50"></text></g><g><title>libsystem_kernel.dylib`__fcntl (2 samples, 0.21%)</title><rect x="80.6485%" y="1381" width="0.2092%" height="15" fill="rgb(249,174,6)" fg:x="771" fg:w="2"/><text x="80.8985%" y="1391.50"></text></g><g><title>databend-query`&lt;sled::lazy::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="80.8577%" y="1413" width="0.1046%" height="15" fill="rgb(235,213,41)" fg:x="773" fg:w="1"/><text x="81.1077%" y="1423.50"></text></g><g><title>databend-query`core::ops::function::Fn::call (1 samples, 0.10%)</title><rect x="80.8577%" y="1397" width="0.1046%" height="15" fill="rgb(213,118,6)" fg:x="773" fg:w="1"/><text x="81.1077%" y="1407.50"></text></g><g><title>databend-query`&lt;sled::threadpool::queue::Queue as core::default::Default&gt;::default (1 samples, 0.10%)</title><rect x="80.8577%" y="1381" width="0.1046%" height="15" fill="rgb(235,44,51)" fg:x="773" fg:w="1"/><text x="81.1077%" y="1391.50"></text></g><g><title>databend-query`&lt;lock_api::mutex::Mutex&lt;R,T&gt; as core::default::Default&gt;::default (1 samples, 0.10%)</title><rect x="80.8577%" y="1365" width="0.1046%" height="15" fill="rgb(217,9,53)" fg:x="773" fg:w="1"/><text x="81.1077%" y="1375.50"></text></g><g><title>databend-query`&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::default::Default&gt;::default (1 samples, 0.10%)</title><rect x="80.8577%" y="1349" width="0.1046%" height="15" fill="rgb(237,172,34)" fg:x="773" fg:w="1"/><text x="81.1077%" y="1359.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::VecDeque&lt;T&gt;::new (1 samples, 0.10%)</title><rect x="80.8577%" y="1333" width="0.1046%" height="15" fill="rgb(206,206,11)" fg:x="773" fg:w="1"/><text x="81.1077%" y="1343.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::new_in (1 samples, 0.10%)</title><rect x="80.8577%" y="1317" width="0.1046%" height="15" fill="rgb(214,149,29)" fg:x="773" fg:w="1"/><text x="81.1077%" y="1327.50"></text></g><g><title>databend-query`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="80.8577%" y="1301" width="0.1046%" height="15" fill="rgb(208,123,3)" fg:x="773" fg:w="1"/><text x="81.1077%" y="1311.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="80.8577%" y="1285" width="0.1046%" height="15" fill="rgb(229,126,4)" fg:x="773" fg:w="1"/><text x="81.1077%" y="1295.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="80.8577%" y="1269" width="0.1046%" height="15" fill="rgb(222,92,36)" fg:x="773" fg:w="1"/><text x="81.1077%" y="1279.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="80.8577%" y="1253" width="0.1046%" height="15" fill="rgb(216,39,41)" fg:x="773" fg:w="1"/><text x="81.1077%" y="1263.50"></text></g><g><title>databend-query`alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="80.8577%" y="1237" width="0.1046%" height="15" fill="rgb(253,127,28)" fg:x="773" fg:w="1"/><text x="81.1077%" y="1247.50"></text></g><g><title>databend-query`alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="80.8577%" y="1221" width="0.1046%" height="15" fill="rgb(249,152,51)" fg:x="773" fg:w="1"/><text x="81.1077%" y="1231.50"></text></g><g><title>databend-query`__rg_alloc (1 samples, 0.10%)</title><rect x="80.8577%" y="1205" width="0.1046%" height="15" fill="rgb(209,123,42)" fg:x="773" fg:w="1"/><text x="81.1077%" y="1215.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.10%)</title><rect x="80.8577%" y="1189" width="0.1046%" height="15" fill="rgb(241,118,22)" fg:x="773" fg:w="1"/><text x="81.1077%" y="1199.50"></text></g><g><title>databend-query`_rjem_mallocx (1 samples, 0.10%)</title><rect x="80.8577%" y="1173" width="0.1046%" height="15" fill="rgb(208,25,7)" fg:x="773" fg:w="1"/><text x="81.1077%" y="1183.50"></text></g><g><title>databend-query`_rjem_je_tcache_alloc_small_hard (1 samples, 0.10%)</title><rect x="80.8577%" y="1157" width="0.1046%" height="15" fill="rgb(243,144,39)" fg:x="773" fg:w="1"/><text x="81.1077%" y="1167.50"></text></g><g><title>databend-query`_rjem_je_arena_tcache_fill_small (1 samples, 0.10%)</title><rect x="80.8577%" y="1141" width="0.1046%" height="15" fill="rgb(250,50,5)" fg:x="773" fg:w="1"/><text x="81.1077%" y="1151.50"></text></g><g><title>databend-query`arena_bin_malloc_hard (1 samples, 0.10%)</title><rect x="80.8577%" y="1125" width="0.1046%" height="15" fill="rgb(207,67,11)" fg:x="773" fg:w="1"/><text x="81.1077%" y="1135.50"></text></g><g><title>databend-query`arena_bin_nonfull_slab_get (1 samples, 0.10%)</title><rect x="80.8577%" y="1109" width="0.1046%" height="15" fill="rgb(245,204,40)" fg:x="773" fg:w="1"/><text x="81.1077%" y="1119.50"></text></g><g><title>databend-query`arena_slab_alloc (1 samples, 0.10%)</title><rect x="80.8577%" y="1093" width="0.1046%" height="15" fill="rgb(238,228,24)" fg:x="773" fg:w="1"/><text x="81.1077%" y="1103.50"></text></g><g><title>databend-query`arena_slab_alloc_hard (1 samples, 0.10%)</title><rect x="80.8577%" y="1077" width="0.1046%" height="15" fill="rgb(217,116,22)" fg:x="773" fg:w="1"/><text x="81.1077%" y="1087.50"></text></g><g><title>databend-query`_rjem_je_extent_alloc_wrapper (1 samples, 0.10%)</title><rect x="80.8577%" y="1061" width="0.1046%" height="15" fill="rgb(234,98,12)" fg:x="773" fg:w="1"/><text x="81.1077%" y="1071.50"></text></g><g><title>databend-query`extent_alloc_wrapper_hard (1 samples, 0.10%)</title><rect x="80.8577%" y="1045" width="0.1046%" height="15" fill="rgb(242,170,50)" fg:x="773" fg:w="1"/><text x="81.1077%" y="1055.50"></text></g><g><title>databend-query`extent_register (1 samples, 0.10%)</title><rect x="80.8577%" y="1029" width="0.1046%" height="15" fill="rgb(235,7,5)" fg:x="773" fg:w="1"/><text x="81.1077%" y="1039.50"></text></g><g><title>databend-query`extent_register_impl (1 samples, 0.10%)</title><rect x="80.8577%" y="1013" width="0.1046%" height="15" fill="rgb(241,114,28)" fg:x="773" fg:w="1"/><text x="81.1077%" y="1023.50"></text></g><g><title>databend-query`extent_unlock (1 samples, 0.10%)</title><rect x="80.8577%" y="997" width="0.1046%" height="15" fill="rgb(246,112,42)" fg:x="773" fg:w="1"/><text x="81.1077%" y="1007.50"></text></g><g><title>databend-query`mutex_pool_unlock (1 samples, 0.10%)</title><rect x="80.8577%" y="981" width="0.1046%" height="15" fill="rgb(248,228,14)" fg:x="773" fg:w="1"/><text x="81.1077%" y="991.50"></text></g><g><title>databend-query`mutex_pool_assert_not_held (1 samples, 0.10%)</title><rect x="80.8577%" y="965" width="0.1046%" height="15" fill="rgb(208,133,18)" fg:x="773" fg:w="1"/><text x="81.1077%" y="975.50"></text></g><g><title>databend-query`malloc_mutex_assert_not_owner (1 samples, 0.10%)</title><rect x="80.8577%" y="949" width="0.1046%" height="15" fill="rgb(207,35,49)" fg:x="773" fg:w="1"/><text x="81.1077%" y="959.50"></text></g><g><title>databend-query`&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.10%)</title><rect x="81.0669%" y="1397" width="0.1046%" height="15" fill="rgb(205,68,36)" fg:x="775" fg:w="1"/><text x="81.3169%" y="1407.50"></text></g><g><title>databend-query`core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.10%)</title><rect x="81.0669%" y="1381" width="0.1046%" height="15" fill="rgb(245,62,40)" fg:x="775" fg:w="1"/><text x="81.3169%" y="1391.50"></text></g><g><title>databend-query`sled::threadpool::queue::spawn_to::_{{closure}} (1 samples, 0.10%)</title><rect x="81.0669%" y="1365" width="0.1046%" height="15" fill="rgb(228,27,24)" fg:x="775" fg:w="1"/><text x="81.3169%" y="1375.50"></text></g><g><title>databend-query`sled::threadpool::write_to_log::_{{closure}} (1 samples, 0.10%)</title><rect x="81.0669%" y="1349" width="0.1046%" height="15" fill="rgb(253,19,12)" fg:x="775" fg:w="1"/><text x="81.3169%" y="1359.50"></text></g><g><title>databend-query`sled::pagecache::iobuf::IoBufs::write_to_log (1 samples, 0.10%)</title><rect x="81.0669%" y="1333" width="0.1046%" height="15" fill="rgb(232,28,20)" fg:x="775" fg:w="1"/><text x="81.3169%" y="1343.50"></text></g><g><title>databend-query`std::fs::File::sync_all (1 samples, 0.10%)</title><rect x="81.0669%" y="1317" width="0.1046%" height="15" fill="rgb(218,35,51)" fg:x="775" fg:w="1"/><text x="81.3169%" y="1327.50"></text></g><g><title>libsystem_kernel.dylib`__fcntl (1 samples, 0.10%)</title><rect x="81.0669%" y="1301" width="0.1046%" height="15" fill="rgb(212,90,40)" fg:x="775" fg:w="1"/><text x="81.3169%" y="1311.50"></text></g><g><title>databend-query`core::ptr::const_ptr::_&lt;impl *const T&gt;::as_ref (1 samples, 0.10%)</title><rect x="81.1715%" y="1381" width="0.1046%" height="15" fill="rgb(220,172,12)" fg:x="776" fg:w="1"/><text x="81.4215%" y="1391.50"></text></g><g><title>databend-query`core::ptr::const_ptr::_&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.10%)</title><rect x="81.1715%" y="1365" width="0.1046%" height="15" fill="rgb(226,159,20)" fg:x="776" fg:w="1"/><text x="81.4215%" y="1375.50"></text></g><g><title>databend-query`core::mem::drop (1 samples, 0.10%)</title><rect x="81.2762%" y="1349" width="0.1046%" height="15" fill="rgb(234,205,16)" fg:x="777" fg:w="1"/><text x="81.5262%" y="1359.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;sled::ebr::internal::SealedBag&gt; (1 samples, 0.10%)</title><rect x="81.2762%" y="1333" width="0.1046%" height="15" fill="rgb(207,9,39)" fg:x="777" fg:w="1"/><text x="81.5262%" y="1343.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;sled::ebr::internal::Bag&gt; (1 samples, 0.10%)</title><rect x="81.2762%" y="1317" width="0.1046%" height="15" fill="rgb(249,143,15)" fg:x="777" fg:w="1"/><text x="81.5262%" y="1327.50"></text></g><g><title>databend-query`&lt;sled::ebr::internal::Bag as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="81.2762%" y="1301" width="0.1046%" height="15" fill="rgb(253,133,29)" fg:x="777" fg:w="1"/><text x="81.5262%" y="1311.50"></text></g><g><title>databend-query`sled::ebr::deferred::Deferred::call (1 samples, 0.10%)</title><rect x="81.2762%" y="1285" width="0.1046%" height="15" fill="rgb(221,187,0)" fg:x="777" fg:w="1"/><text x="81.5262%" y="1295.50"></text></g><g><title>databend-query`sled::ebr::deferred::call_raw (1 samples, 0.10%)</title><rect x="81.2762%" y="1269" width="0.1046%" height="15" fill="rgb(205,204,26)" fg:x="777" fg:w="1"/><text x="81.5262%" y="1279.50"></text></g><g><title>databend-query`sled::ebr::Guard::defer_unchecked::_{{closure}} (1 samples, 0.10%)</title><rect x="81.2762%" y="1253" width="0.1046%" height="15" fill="rgb(224,68,54)" fg:x="777" fg:w="1"/><text x="81.5262%" y="1263.50"></text></g><g><title>databend-query`core::mem::drop (1 samples, 0.10%)</title><rect x="81.2762%" y="1237" width="0.1046%" height="15" fill="rgb(209,67,4)" fg:x="777" fg:w="1"/><text x="81.5262%" y="1247.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;sled::ebr::atomic::Owned&lt;sled::ebr::queue::Node&lt;sled::ebr::internal::SealedBag&gt;&gt;&gt; (1 samples, 0.10%)</title><rect x="81.2762%" y="1221" width="0.1046%" height="15" fill="rgb(228,229,18)" fg:x="777" fg:w="1"/><text x="81.5262%" y="1231.50"></text></g><g><title>databend-query`&lt;sled::ebr::atomic::Owned&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="81.2762%" y="1205" width="0.1046%" height="15" fill="rgb(231,89,13)" fg:x="777" fg:w="1"/><text x="81.5262%" y="1215.50"></text></g><g><title>databend-query`&lt;T as sled::ebr::atomic::Pointable&gt;::drop (1 samples, 0.10%)</title><rect x="81.2762%" y="1189" width="0.1046%" height="15" fill="rgb(210,182,18)" fg:x="777" fg:w="1"/><text x="81.5262%" y="1199.50"></text></g><g><title>databend-query`core::mem::drop (1 samples, 0.10%)</title><rect x="81.2762%" y="1173" width="0.1046%" height="15" fill="rgb(240,105,2)" fg:x="777" fg:w="1"/><text x="81.5262%" y="1183.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::ebr::queue::Node&lt;sled::ebr::internal::SealedBag&gt;&gt;&gt; (1 samples, 0.10%)</title><rect x="81.2762%" y="1157" width="0.1046%" height="15" fill="rgb(207,170,50)" fg:x="777" fg:w="1"/><text x="81.5262%" y="1167.50"></text></g><g><title>databend-query`alloc::alloc::box_free (1 samples, 0.10%)</title><rect x="81.2762%" y="1141" width="0.1046%" height="15" fill="rgb(232,133,24)" fg:x="777" fg:w="1"/><text x="81.5262%" y="1151.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.10%)</title><rect x="81.2762%" y="1125" width="0.1046%" height="15" fill="rgb(235,166,27)" fg:x="777" fg:w="1"/><text x="81.5262%" y="1135.50"></text></g><g><title>databend-query`__rust_dealloc (1 samples, 0.10%)</title><rect x="81.2762%" y="1109" width="0.1046%" height="15" fill="rgb(209,19,13)" fg:x="777" fg:w="1"/><text x="81.5262%" y="1119.50"></text></g><g><title>databend-query`sled::ebr::epoch::Epoch::unpinned (1 samples, 0.10%)</title><rect x="81.3808%" y="1349" width="0.1046%" height="15" fill="rgb(226,79,39)" fg:x="778" fg:w="1"/><text x="81.6308%" y="1359.50"></text></g><g><title>databend-query`sled::ebr::atomic::Atomic&lt;T&gt;::load (2 samples, 0.21%)</title><rect x="81.4854%" y="1317" width="0.2092%" height="15" fill="rgb(222,163,10)" fg:x="779" fg:w="2"/><text x="81.7354%" y="1327.50"></text></g><g><title>databend-query`core::sync::atomic::AtomicUsize::load (2 samples, 0.21%)</title><rect x="81.4854%" y="1301" width="0.2092%" height="15" fill="rgb(214,44,19)" fg:x="779" fg:w="2"/><text x="81.7354%" y="1311.50"></text></g><g><title>databend-query`core::sync::atomic::atomic_load (2 samples, 0.21%)</title><rect x="81.4854%" y="1285" width="0.2092%" height="15" fill="rgb(210,217,13)" fg:x="779" fg:w="2"/><text x="81.7354%" y="1295.50"></text></g><g><title>databend-query`sled::ebr::internal::Global::collect (5 samples, 0.52%)</title><rect x="81.2762%" y="1365" width="0.5230%" height="15" fill="rgb(237,61,54)" fg:x="777" fg:w="5"/><text x="81.5262%" y="1375.50"></text></g><g><title>databend-query`sled::ebr::internal::Global::try_advance (3 samples, 0.31%)</title><rect x="81.4854%" y="1349" width="0.3138%" height="15" fill="rgb(226,184,24)" fg:x="779" fg:w="3"/><text x="81.7354%" y="1359.50"></text></g><g><title>databend-query`&lt;sled::ebr::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.31%)</title><rect x="81.4854%" y="1333" width="0.3138%" height="15" fill="rgb(223,226,4)" fg:x="779" fg:w="3"/><text x="81.7354%" y="1343.50"></text></g><g><title>databend-query`sled::ebr::atomic::Shared&lt;T&gt;::as_ref (1 samples, 0.10%)</title><rect x="81.6946%" y="1317" width="0.1046%" height="15" fill="rgb(210,26,41)" fg:x="781" fg:w="1"/><text x="81.9446%" y="1327.50"></text></g><g><title>databend-query`sled::ebr::Guard::flush (7 samples, 0.73%)</title><rect x="81.1715%" y="1397" width="0.7322%" height="15" fill="rgb(220,221,6)" fg:x="776" fg:w="7"/><text x="81.4215%" y="1407.50"></text></g><g><title>databend-query`sled::ebr::internal::Local::flush (6 samples, 0.63%)</title><rect x="81.2762%" y="1381" width="0.6276%" height="15" fill="rgb(225,89,49)" fg:x="777" fg:w="6"/><text x="81.5262%" y="1391.50"></text></g><g><title>databend-query`sled::ebr::internal::Global::push_bag (1 samples, 0.10%)</title><rect x="81.7992%" y="1365" width="0.1046%" height="15" fill="rgb(218,70,45)" fg:x="782" fg:w="1"/><text x="82.0492%" y="1375.50"></text></g><g><title>databend-query`sled::ebr::internal::Bag::new (1 samples, 0.10%)</title><rect x="81.7992%" y="1349" width="0.1046%" height="15" fill="rgb(238,166,21)" fg:x="782" fg:w="1"/><text x="82.0492%" y="1359.50"></text></g><g><title>databend-query`&lt;sled::ebr::internal::Bag as core::default::Default&gt;::default (1 samples, 0.10%)</title><rect x="81.7992%" y="1333" width="0.1046%" height="15" fill="rgb(224,141,44)" fg:x="782" fg:w="1"/><text x="82.0492%" y="1343.50"></text></g><g><title>databend-query`sled::ebr::deferred::Deferred::new (1 samples, 0.10%)</title><rect x="81.7992%" y="1317" width="0.1046%" height="15" fill="rgb(230,12,49)" fg:x="782" fg:w="1"/><text x="82.0492%" y="1327.50"></text></g><g><title>databend-query`core::option::Option&lt;T&gt;::ok_or (1 samples, 0.10%)</title><rect x="81.9038%" y="1349" width="0.1046%" height="15" fill="rgb(212,174,12)" fg:x="783" fg:w="1"/><text x="82.1538%" y="1359.50"></text></g><g><title>databend-query`sled::ebr::collector::HANDLE::__getit (1 samples, 0.10%)</title><rect x="82.0084%" y="1333" width="0.1046%" height="15" fill="rgb(246,67,9)" fg:x="784" fg:w="1"/><text x="82.2584%" y="1343.50"></text></g><g><title>databend-query`std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.10%)</title><rect x="82.0084%" y="1317" width="0.1046%" height="15" fill="rgb(239,35,23)" fg:x="784" fg:w="1"/><text x="82.2584%" y="1327.50"></text></g><g><title>databend-query`std::thread::local::fast::Key&lt;T&gt;::try_initialize (1 samples, 0.10%)</title><rect x="82.0084%" y="1301" width="0.1046%" height="15" fill="rgb(211,167,0)" fg:x="784" fg:w="1"/><text x="82.2584%" y="1311.50"></text></g><g><title>databend-query`std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (1 samples, 0.10%)</title><rect x="82.0084%" y="1285" width="0.1046%" height="15" fill="rgb(225,119,45)" fg:x="784" fg:w="1"/><text x="82.2584%" y="1295.50"></text></g><g><title>databend-query`sled::ebr::collector::HANDLE::__getit::_{{closure}} (1 samples, 0.10%)</title><rect x="82.0084%" y="1269" width="0.1046%" height="15" fill="rgb(210,162,6)" fg:x="784" fg:w="1"/><text x="82.2584%" y="1279.50"></text></g><g><title>databend-query`sled::ebr::collector::HANDLE::__init (1 samples, 0.10%)</title><rect x="82.0084%" y="1253" width="0.1046%" height="15" fill="rgb(208,118,35)" fg:x="784" fg:w="1"/><text x="82.2584%" y="1263.50"></text></g><g><title>databend-query`sled::ebr::collector::Collector::register (1 samples, 0.10%)</title><rect x="82.0084%" y="1237" width="0.1046%" height="15" fill="rgb(239,4,53)" fg:x="784" fg:w="1"/><text x="82.2584%" y="1247.50"></text></g><g><title>databend-query`sled::ebr::internal::Local::register (1 samples, 0.10%)</title><rect x="82.0084%" y="1221" width="0.1046%" height="15" fill="rgb(213,130,21)" fg:x="784" fg:w="1"/><text x="82.2584%" y="1231.50"></text></g><g><title>databend-query`sled::ebr::atomic::Owned&lt;T&gt;::new (1 samples, 0.10%)</title><rect x="82.0084%" y="1205" width="0.1046%" height="15" fill="rgb(235,148,0)" fg:x="784" fg:w="1"/><text x="82.2584%" y="1215.50"></text></g><g><title>databend-query`sled::ebr::atomic::Owned&lt;T&gt;::init (1 samples, 0.10%)</title><rect x="82.0084%" y="1189" width="0.1046%" height="15" fill="rgb(244,224,18)" fg:x="784" fg:w="1"/><text x="82.2584%" y="1199.50"></text></g><g><title>databend-query`&lt;T as sled::ebr::atomic::Pointable&gt;::init (1 samples, 0.10%)</title><rect x="82.0084%" y="1173" width="0.1046%" height="15" fill="rgb(211,214,4)" fg:x="784" fg:w="1"/><text x="82.2584%" y="1183.50"></text></g><g><title>databend-query`alloc::alloc::exchange_malloc (1 samples, 0.10%)</title><rect x="82.0084%" y="1157" width="0.1046%" height="15" fill="rgb(206,119,25)" fg:x="784" fg:w="1"/><text x="82.2584%" y="1167.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="82.0084%" y="1141" width="0.1046%" height="15" fill="rgb(243,93,47)" fg:x="784" fg:w="1"/><text x="82.2584%" y="1151.50"></text></g><g><title>databend-query`alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="82.0084%" y="1125" width="0.1046%" height="15" fill="rgb(224,194,6)" fg:x="784" fg:w="1"/><text x="82.2584%" y="1135.50"></text></g><g><title>databend-query`alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="82.0084%" y="1109" width="0.1046%" height="15" fill="rgb(243,229,6)" fg:x="784" fg:w="1"/><text x="82.2584%" y="1119.50"></text></g><g><title>databend-query`__rg_alloc (1 samples, 0.10%)</title><rect x="82.0084%" y="1093" width="0.1046%" height="15" fill="rgb(207,23,50)" fg:x="784" fg:w="1"/><text x="82.2584%" y="1103.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.10%)</title><rect x="82.0084%" y="1077" width="0.1046%" height="15" fill="rgb(253,192,32)" fg:x="784" fg:w="1"/><text x="82.2584%" y="1087.50"></text></g><g><title>databend-query`_rjem_mallocx (1 samples, 0.10%)</title><rect x="82.0084%" y="1061" width="0.1046%" height="15" fill="rgb(213,21,6)" fg:x="784" fg:w="1"/><text x="82.2584%" y="1071.50"></text></g><g><title>databend-query`_rjem_je_tcache_alloc_small_hard (1 samples, 0.10%)</title><rect x="82.0084%" y="1045" width="0.1046%" height="15" fill="rgb(243,151,13)" fg:x="784" fg:w="1"/><text x="82.2584%" y="1055.50"></text></g><g><title>databend-query`_rjem_je_arena_tcache_fill_small (1 samples, 0.10%)</title><rect x="82.0084%" y="1029" width="0.1046%" height="15" fill="rgb(233,165,41)" fg:x="784" fg:w="1"/><text x="82.2584%" y="1039.50"></text></g><g><title>databend-query`arena_bin_malloc_hard (1 samples, 0.10%)</title><rect x="82.0084%" y="1013" width="0.1046%" height="15" fill="rgb(246,176,45)" fg:x="784" fg:w="1"/><text x="82.2584%" y="1023.50"></text></g><g><title>databend-query`arena_bin_nonfull_slab_get (1 samples, 0.10%)</title><rect x="82.0084%" y="997" width="0.1046%" height="15" fill="rgb(217,170,52)" fg:x="784" fg:w="1"/><text x="82.2584%" y="1007.50"></text></g><g><title>databend-query`arena_slab_alloc (1 samples, 0.10%)</title><rect x="82.0084%" y="981" width="0.1046%" height="15" fill="rgb(214,203,54)" fg:x="784" fg:w="1"/><text x="82.2584%" y="991.50"></text></g><g><title>databend-query`arena_slab_alloc_hard (1 samples, 0.10%)</title><rect x="82.0084%" y="965" width="0.1046%" height="15" fill="rgb(248,215,49)" fg:x="784" fg:w="1"/><text x="82.2584%" y="975.50"></text></g><g><title>databend-query`_rjem_je_extent_alloc_wrapper (1 samples, 0.10%)</title><rect x="82.0084%" y="949" width="0.1046%" height="15" fill="rgb(208,46,10)" fg:x="784" fg:w="1"/><text x="82.2584%" y="959.50"></text></g><g><title>databend-query`extent_alloc_wrapper_hard (1 samples, 0.10%)</title><rect x="82.0084%" y="933" width="0.1046%" height="15" fill="rgb(254,5,31)" fg:x="784" fg:w="1"/><text x="82.2584%" y="943.50"></text></g><g><title>databend-query`extent_register (1 samples, 0.10%)</title><rect x="82.0084%" y="917" width="0.1046%" height="15" fill="rgb(222,104,33)" fg:x="784" fg:w="1"/><text x="82.2584%" y="927.50"></text></g><g><title>databend-query`extent_register_impl (1 samples, 0.10%)</title><rect x="82.0084%" y="901" width="0.1046%" height="15" fill="rgb(248,49,16)" fg:x="784" fg:w="1"/><text x="82.2584%" y="911.50"></text></g><g><title>databend-query`extent_unlock (1 samples, 0.10%)</title><rect x="82.0084%" y="885" width="0.1046%" height="15" fill="rgb(232,198,41)" fg:x="784" fg:w="1"/><text x="82.2584%" y="895.50"></text></g><g><title>databend-query`mutex_pool_unlock (1 samples, 0.10%)</title><rect x="82.0084%" y="869" width="0.1046%" height="15" fill="rgb(214,125,3)" fg:x="784" fg:w="1"/><text x="82.2584%" y="879.50"></text></g><g><title>databend-query`mutex_pool_assert_not_held (1 samples, 0.10%)</title><rect x="82.0084%" y="853" width="0.1046%" height="15" fill="rgb(229,220,28)" fg:x="784" fg:w="1"/><text x="82.2584%" y="863.50"></text></g><g><title>databend-query`malloc_mutex_assert_not_owner (1 samples, 0.10%)</title><rect x="82.0084%" y="837" width="0.1046%" height="15" fill="rgb(222,64,37)" fg:x="784" fg:w="1"/><text x="82.2584%" y="847.50"></text></g><g><title>databend-query`&lt;core::num::wrapping::Wrapping&lt;usize&gt; as core::ops::arith::Add&gt;::add (1 samples, 0.10%)</title><rect x="82.1130%" y="1285" width="0.1046%" height="15" fill="rgb(249,184,13)" fg:x="785" fg:w="1"/><text x="82.3630%" y="1295.50"></text></g><g><title>databend-query`core::cell::Cell&lt;T&gt;::get (1 samples, 0.10%)</title><rect x="82.2176%" y="1285" width="0.1046%" height="15" fill="rgb(252,176,6)" fg:x="786" fg:w="1"/><text x="82.4676%" y="1295.50"></text></g><g><title>databend-query`sled::pin (5 samples, 0.52%)</title><rect x="81.9038%" y="1397" width="0.5230%" height="15" fill="rgb(228,153,7)" fg:x="783" fg:w="5"/><text x="82.1538%" y="1407.50"></text></g><g><title>databend-query`sled::ebr::collector::pin (5 samples, 0.52%)</title><rect x="81.9038%" y="1381" width="0.5230%" height="15" fill="rgb(242,193,5)" fg:x="783" fg:w="5"/><text x="82.1538%" y="1391.50"></text></g><g><title>databend-query`sled::ebr::collector::with_handle (5 samples, 0.52%)</title><rect x="81.9038%" y="1365" width="0.5230%" height="15" fill="rgb(232,140,9)" fg:x="783" fg:w="5"/><text x="82.1538%" y="1375.50"></text></g><g><title>databend-query`std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.42%)</title><rect x="82.0084%" y="1349" width="0.4184%" height="15" fill="rgb(213,222,16)" fg:x="784" fg:w="4"/><text x="82.2584%" y="1359.50"></text></g><g><title>databend-query`sled::ebr::collector::with_handle::_{{closure}} (3 samples, 0.31%)</title><rect x="82.1130%" y="1333" width="0.3138%" height="15" fill="rgb(222,75,50)" fg:x="785" fg:w="3"/><text x="82.3630%" y="1343.50"></text></g><g><title>databend-query`core::ops::function::FnMut::call_mut (3 samples, 0.31%)</title><rect x="82.1130%" y="1317" width="0.3138%" height="15" fill="rgb(205,180,2)" fg:x="785" fg:w="3"/><text x="82.3630%" y="1327.50"></text></g><g><title>databend-query`sled::ebr::collector::LocalHandle::pin (3 samples, 0.31%)</title><rect x="82.1130%" y="1301" width="0.3138%" height="15" fill="rgb(216,34,7)" fg:x="785" fg:w="3"/><text x="82.3630%" y="1311.50"></text></g><g><title>databend-query`sled::ebr::internal::Local::pin (1 samples, 0.10%)</title><rect x="82.3222%" y="1285" width="0.1046%" height="15" fill="rgb(253,16,32)" fg:x="787" fg:w="1"/><text x="82.5722%" y="1295.50"></text></g><g><title>databend-query`core::cell::Cell&lt;T&gt;::set (1 samples, 0.10%)</title><rect x="82.3222%" y="1269" width="0.1046%" height="15" fill="rgb(208,97,28)" fg:x="787" fg:w="1"/><text x="82.5722%" y="1279.50"></text></g><g><title>databend-query`core::mem::replace (1 samples, 0.10%)</title><rect x="82.3222%" y="1253" width="0.1046%" height="15" fill="rgb(225,92,11)" fg:x="787" fg:w="1"/><text x="82.5722%" y="1263.50"></text></g><g><title>databend-query`&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.10%)</title><rect x="82.4268%" y="1349" width="0.1046%" height="15" fill="rgb(243,38,12)" fg:x="788" fg:w="1"/><text x="82.6768%" y="1359.50"></text></g><g><title>databend-query`core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.10%)</title><rect x="82.4268%" y="1333" width="0.1046%" height="15" fill="rgb(208,139,16)" fg:x="788" fg:w="1"/><text x="82.6768%" y="1343.50"></text></g><g><title>databend-query`core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.10%)</title><rect x="82.4268%" y="1317" width="0.1046%" height="15" fill="rgb(227,24,9)" fg:x="788" fg:w="1"/><text x="82.6768%" y="1327.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (13 samples, 1.36%)</title><rect x="82.6360%" y="1301" width="1.3598%" height="15" fill="rgb(206,62,11)" fg:x="790" fg:w="13"/><text x="82.8860%" y="1311.50"></text></g><g><title>databend-query`&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park_until (15 samples, 1.57%)</title><rect x="82.5314%" y="1317" width="1.5690%" height="15" fill="rgb(228,134,27)" fg:x="789" fg:w="15"/><text x="82.7814%" y="1327.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (1 samples, 0.10%)</title><rect x="83.9958%" y="1301" width="0.1046%" height="15" fill="rgb(205,55,33)" fg:x="803" fg:w="1"/><text x="84.2458%" y="1311.50"></text></g><g><title>databend-query`&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::timed_out (2 samples, 0.21%)</title><rect x="84.1004%" y="1317" width="0.2092%" height="15" fill="rgb(243,75,43)" fg:x="804" fg:w="2"/><text x="84.3504%" y="1327.50"></text></g><g><title>databend-query`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (1 samples, 0.10%)</title><rect x="84.3096%" y="1317" width="0.1046%" height="15" fill="rgb(223,27,42)" fg:x="806" fg:w="1"/><text x="84.5596%" y="1327.50"></text></g><g><title>databend-query`core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.10%)</title><rect x="84.4142%" y="1301" width="0.1046%" height="15" fill="rgb(232,189,33)" fg:x="807" fg:w="1"/><text x="84.6642%" y="1311.50"></text></g><g><title>databend-query`core::sync::atomic::atomic_load (1 samples, 0.10%)</title><rect x="84.4142%" y="1285" width="0.1046%" height="15" fill="rgb(210,9,39)" fg:x="807" fg:w="1"/><text x="84.6642%" y="1295.50"></text></g><g><title>databend-query`parking_lot_core::parking_lot::get_hashtable (1 samples, 0.10%)</title><rect x="84.5188%" y="1301" width="0.1046%" height="15" fill="rgb(242,85,26)" fg:x="808" fg:w="1"/><text x="84.7688%" y="1311.50"></text></g><g><title>databend-query`core::sync::atomic::atomic_load (1 samples, 0.10%)</title><rect x="84.5188%" y="1285" width="0.1046%" height="15" fill="rgb(248,44,4)" fg:x="808" fg:w="1"/><text x="84.7688%" y="1295.50"></text></g><g><title>databend-query`parking_lot_core::parking_lot::lock_bucket_checked (3 samples, 0.31%)</title><rect x="84.4142%" y="1317" width="0.3138%" height="15" fill="rgb(250,96,46)" fg:x="807" fg:w="3"/><text x="84.6642%" y="1327.50"></text></g><g><title>databend-query`parking_lot_core::word_lock::WordLock::lock (1 samples, 0.10%)</title><rect x="84.6234%" y="1301" width="0.1046%" height="15" fill="rgb(229,116,26)" fg:x="809" fg:w="1"/><text x="84.8734%" y="1311.50"></text></g><g><title>databend-query`core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.10%)</title><rect x="84.6234%" y="1285" width="0.1046%" height="15" fill="rgb(246,94,34)" fg:x="809" fg:w="1"/><text x="84.8734%" y="1295.50"></text></g><g><title>databend-query`parking_lot_core::word_lock::WordLock::unlock (1 samples, 0.10%)</title><rect x="84.7280%" y="1317" width="0.1046%" height="15" fill="rgb(251,73,21)" fg:x="810" fg:w="1"/><text x="84.9780%" y="1327.50"></text></g><g><title>databend-query`sled::threadpool::queue::spawn_to::_{{closure}}::_{{closure}} (40 samples, 4.18%)</title><rect x="80.8577%" y="1429" width="4.1841%" height="15" fill="rgb(254,121,25)" fg:x="773" fg:w="40"/><text x="81.1077%" y="1439.50">datab..</text></g><g><title>databend-query`sled::threadpool::queue::Queue::perform_work (39 samples, 4.08%)</title><rect x="80.9623%" y="1413" width="4.0795%" height="15" fill="rgb(215,161,49)" fg:x="774" fg:w="39"/><text x="81.2123%" y="1423.50">data..</text></g><g><title>databend-query`sled::threadpool::queue::Queue::recv_timeout (25 samples, 2.62%)</title><rect x="82.4268%" y="1397" width="2.6151%" height="15" fill="rgb(221,43,13)" fg:x="788" fg:w="25"/><text x="82.6768%" y="1407.50">da..</text></g><g><title>databend-query`parking_lot::condvar::Condvar::wait_until (25 samples, 2.62%)</title><rect x="82.4268%" y="1381" width="2.6151%" height="15" fill="rgb(249,5,37)" fg:x="788" fg:w="25"/><text x="82.6768%" y="1391.50">da..</text></g><g><title>databend-query`parking_lot::condvar::Condvar::wait_until_internal (25 samples, 2.62%)</title><rect x="82.4268%" y="1365" width="2.6151%" height="15" fill="rgb(226,25,44)" fg:x="788" fg:w="25"/><text x="82.6768%" y="1375.50">da..</text></g><g><title>databend-query`parking_lot_core::parking_lot::park (24 samples, 2.51%)</title><rect x="82.5314%" y="1349" width="2.5105%" height="15" fill="rgb(238,189,16)" fg:x="789" fg:w="24"/><text x="82.7814%" y="1359.50">da..</text></g><g><title>databend-query`parking_lot_core::parking_lot::park::_{{closure}} (24 samples, 2.51%)</title><rect x="82.5314%" y="1333" width="2.5105%" height="15" fill="rgb(251,186,8)" fg:x="789" fg:w="24"/><text x="82.7814%" y="1343.50">da..</text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (2 samples, 0.21%)</title><rect x="84.8326%" y="1317" width="0.2092%" height="15" fill="rgb(254,34,31)" fg:x="811" fg:w="2"/><text x="85.0826%" y="1327.50"></text></g><g><title>databend-query`common_base::base::runtime_tracker::RuntimeTracker::on_start_thread::_{{closure}} (1 samples, 0.10%)</title><rect x="85.0418%" y="1397" width="0.1046%" height="15" fill="rgb(225,215,27)" fg:x="813" fg:w="1"/><text x="85.2918%" y="1407.50"></text></g><g><title>databend-query`common_base::base::runtime_tracker::ThreadTracker::create (1 samples, 0.10%)</title><rect x="85.0418%" y="1381" width="0.1046%" height="15" fill="rgb(221,192,48)" fg:x="813" fg:w="1"/><text x="85.2918%" y="1391.50"></text></g><g><title>databend-query`tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.10%)</title><rect x="85.1464%" y="1397" width="0.1046%" height="15" fill="rgb(219,137,20)" fg:x="814" fg:w="1"/><text x="85.3964%" y="1407.50"></text></g><g><title>databend-query`lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.10%)</title><rect x="85.1464%" y="1381" width="0.1046%" height="15" fill="rgb(219,84,11)" fg:x="814" fg:w="1"/><text x="85.3964%" y="1391.50"></text></g><g><title>databend-query`&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.10%)</title><rect x="85.1464%" y="1365" width="0.1046%" height="15" fill="rgb(224,10,23)" fg:x="814" fg:w="1"/><text x="85.3964%" y="1375.50"></text></g><g><title>databend-query`parking_lot::raw_mutex::RawMutex::lock_slow (1 samples, 0.10%)</title><rect x="85.1464%" y="1349" width="0.1046%" height="15" fill="rgb(248,22,39)" fg:x="814" fg:w="1"/><text x="85.3964%" y="1359.50"></text></g><g><title>databend-query`std::panic::catch_unwind (1 samples, 0.10%)</title><rect x="85.2510%" y="1301" width="0.1046%" height="15" fill="rgb(212,154,20)" fg:x="815" fg:w="1"/><text x="85.5010%" y="1311.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::from_raw (1 samples, 0.10%)</title><rect x="85.3556%" y="917" width="0.1046%" height="15" fill="rgb(236,199,50)" fg:x="816" fg:w="1"/><text x="85.6056%" y="927.50"></text></g><g><title>databend-query`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.10%)</title><rect x="85.3556%" y="901" width="0.1046%" height="15" fill="rgb(211,9,17)" fg:x="816" fg:w="1"/><text x="85.6056%" y="911.50"></text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (1 samples, 0.10%)</title><rect x="85.4603%" y="901" width="0.1046%" height="15" fill="rgb(243,216,36)" fg:x="817" fg:w="1"/><text x="85.7103%" y="911.50"></text></g><g><title>databend-query`core::mem::drop (1 samples, 0.10%)</title><rect x="85.4603%" y="885" width="0.1046%" height="15" fill="rgb(250,2,10)" fg:x="817" fg:w="1"/><text x="85.7103%" y="895.50"></text></g><g><title>databend-query`databend_query::servers::mysql::mysql_handler::MySQLHandler::accept_socket::_{{closure}} (1 samples, 0.10%)</title><rect x="85.5649%" y="709" width="0.1046%" height="15" fill="rgb(226,50,48)" fg:x="818" fg:w="1"/><text x="85.8149%" y="719.50"></text></g><g><title>databend-query`databend_query::servers::mysql::mysql_handler::MySQLHandler::accept_socket::_{{closure}}::_{{closure}} (1 samples, 0.10%)</title><rect x="85.5649%" y="693" width="0.1046%" height="15" fill="rgb(243,81,16)" fg:x="818" fg:w="1"/><text x="85.8149%" y="703.50"></text></g><g><title>databend-query`tracing_core::event::Event::dispatch (1 samples, 0.10%)</title><rect x="85.5649%" y="677" width="0.1046%" height="15" fill="rgb(250,14,2)" fg:x="818" fg:w="1"/><text x="85.8149%" y="687.50"></text></g><g><title>databend-query`tracing_core::dispatcher::get_default (1 samples, 0.10%)</title><rect x="85.5649%" y="661" width="0.1046%" height="15" fill="rgb(233,135,29)" fg:x="818" fg:w="1"/><text x="85.8149%" y="671.50"></text></g><g><title>databend-query`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.10%)</title><rect x="85.5649%" y="645" width="0.1046%" height="15" fill="rgb(224,64,43)" fg:x="818" fg:w="1"/><text x="85.8149%" y="655.50"></text></g><g><title>databend-query`tracing_core::dispatcher::get_default::_{{closure}} (1 samples, 0.10%)</title><rect x="85.5649%" y="629" width="0.1046%" height="15" fill="rgb(238,84,13)" fg:x="818" fg:w="1"/><text x="85.8149%" y="639.50"></text></g><g><title>databend-query`tracing_core::event::Event::dispatch::_{{closure}} (1 samples, 0.10%)</title><rect x="85.5649%" y="613" width="0.1046%" height="15" fill="rgb(253,48,26)" fg:x="818" fg:w="1"/><text x="85.8149%" y="623.50"></text></g><g><title>databend-query`tracing_core::dispatcher::Dispatch::event (1 samples, 0.10%)</title><rect x="85.5649%" y="597" width="0.1046%" height="15" fill="rgb(205,223,31)" fg:x="818" fg:w="1"/><text x="85.8149%" y="607.50"></text></g><g><title>databend-query`&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Sync+core::marker::Send&gt; as tracing_core::subscriber::Subscriber&gt;::event (1 samples, 0.10%)</title><rect x="85.5649%" y="581" width="0.1046%" height="15" fill="rgb(221,41,32)" fg:x="818" fg:w="1"/><text x="85.8149%" y="591.50"></text></g><g><title>databend-query`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event (1 samples, 0.10%)</title><rect x="85.5649%" y="565" width="0.1046%" height="15" fill="rgb(213,158,31)" fg:x="818" fg:w="1"/><text x="85.8149%" y="575.50"></text></g><g><title>databend-query`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event (1 samples, 0.10%)</title><rect x="85.5649%" y="549" width="0.1046%" height="15" fill="rgb(245,126,43)" fg:x="818" fg:w="1"/><text x="85.8149%" y="559.50"></text></g><g><title>databend-query`&lt;tracing_bunyan_formatter::formatting_layer::BunyanFormattingLayer&lt;W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (1 samples, 0.10%)</title><rect x="85.5649%" y="533" width="0.1046%" height="15" fill="rgb(227,7,22)" fg:x="818" fg:w="1"/><text x="85.8149%" y="543.50"></text></g><g><title>databend-query`&lt;tracing_bunyan_formatter::formatting_layer::BunyanFormattingLayer&lt;W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event::_{{closure}} (1 samples, 0.10%)</title><rect x="85.5649%" y="517" width="0.1046%" height="15" fill="rgb(252,90,44)" fg:x="818" fg:w="1"/><text x="85.8149%" y="527.50"></text></g><g><title>databend-query`tracing_bunyan_formatter::formatting_layer::BunyanFormattingLayer&lt;W&gt;::serialize_bunyan_core_fields (1 samples, 0.10%)</title><rect x="85.5649%" y="501" width="0.1046%" height="15" fill="rgb(253,91,0)" fg:x="818" fg:w="1"/><text x="85.8149%" y="511.50"></text></g><g><title>databend-query`time::offset_date_time::OffsetDateTime::format (1 samples, 0.10%)</title><rect x="85.5649%" y="485" width="0.1046%" height="15" fill="rgb(252,175,49)" fg:x="818" fg:w="1"/><text x="85.8149%" y="495.50"></text></g><g><title>databend-query`time::formatting::formattable::sealed::Sealed::format (1 samples, 0.10%)</title><rect x="85.5649%" y="469" width="0.1046%" height="15" fill="rgb(246,150,1)" fg:x="818" fg:w="1"/><text x="85.8149%" y="479.50"></text></g><g><title>databend-query`time::formatting::formattable::_&lt;impl time::formatting::formattable::sealed::Sealed for time::format_description::well_known::Rfc3339&gt;::format_into (1 samples, 0.10%)</title><rect x="85.5649%" y="453" width="0.1046%" height="15" fill="rgb(241,192,25)" fg:x="818" fg:w="1"/><text x="85.8149%" y="463.50"></text></g><g><title>databend-query`time::formatting::write (1 samples, 0.10%)</title><rect x="85.5649%" y="437" width="0.1046%" height="15" fill="rgb(239,187,11)" fg:x="818" fg:w="1"/><text x="85.8149%" y="447.50"></text></g><g><title>databend-query`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.10%)</title><rect x="85.5649%" y="421" width="0.1046%" height="15" fill="rgb(218,202,51)" fg:x="818" fg:w="1"/><text x="85.8149%" y="431.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="85.5649%" y="405" width="0.1046%" height="15" fill="rgb(225,176,8)" fg:x="818" fg:w="1"/><text x="85.8149%" y="415.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="85.5649%" y="389" width="0.1046%" height="15" fill="rgb(219,122,41)" fg:x="818" fg:w="1"/><text x="85.8149%" y="399.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.10%)</title><rect x="85.5649%" y="373" width="0.1046%" height="15" fill="rgb(248,140,20)" fg:x="818" fg:w="1"/><text x="85.8149%" y="383.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="85.5649%" y="357" width="0.1046%" height="15" fill="rgb(245,41,37)" fg:x="818" fg:w="1"/><text x="85.8149%" y="367.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.10%)</title><rect x="85.5649%" y="341" width="0.1046%" height="15" fill="rgb(235,82,39)" fg:x="818" fg:w="1"/><text x="85.8149%" y="351.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::collect (1 samples, 0.10%)</title><rect x="85.6695%" y="565" width="0.1046%" height="15" fill="rgb(230,108,42)" fg:x="819" fg:w="1"/><text x="85.9195%" y="575.50"></text></g><g><title>databend-query`opensrv_mysql::AsyncMysqlIntermediary&lt;B,S&gt;::init::_{{closure}} (2 samples, 0.21%)</title><rect x="85.6695%" y="645" width="0.2092%" height="15" fill="rgb(215,150,50)" fg:x="819" fg:w="2"/><text x="85.9195%" y="655.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.21%)</title><rect x="85.6695%" y="629" width="0.2092%" height="15" fill="rgb(233,212,5)" fg:x="819" fg:w="2"/><text x="85.9195%" y="639.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.21%)</title><rect x="85.6695%" y="613" width="0.2092%" height="15" fill="rgb(245,80,22)" fg:x="819" fg:w="2"/><text x="85.9195%" y="623.50"></text></g><g><title>databend-query`&lt;databend_query::servers::mysql::mysql_interactive_worker::InteractiveWorker&lt;W&gt; as opensrv_mysql::AsyncMysqlShim&lt;W&gt;&gt;::authenticate::_{{closure}} (2 samples, 0.21%)</title><rect x="85.6695%" y="597" width="0.2092%" height="15" fill="rgb(238,129,16)" fg:x="819" fg:w="2"/><text x="85.9195%" y="607.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.21%)</title><rect x="85.6695%" y="581" width="0.2092%" height="15" fill="rgb(240,19,0)" fg:x="819" fg:w="2"/><text x="85.9195%" y="591.50"></text></g><g><title>databend-query`databend_query::servers::mysql::mysql_interactive_worker::InteractiveWorkerBase&lt;W&gt;::authenticate::_{{closure}} (1 samples, 0.10%)</title><rect x="85.7741%" y="565" width="0.1046%" height="15" fill="rgb(232,42,35)" fg:x="820" fg:w="1"/><text x="86.0241%" y="575.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="85.7741%" y="549" width="0.1046%" height="15" fill="rgb(223,130,24)" fg:x="820" fg:w="1"/><text x="86.0241%" y="559.50"></text></g><g><title>databend-query`databend_query::users::user_mgr::_&lt;impl databend_query::users::user_api::UserApiProvider&gt;::get_user_with_client_ip::_{{closure}} (1 samples, 0.10%)</title><rect x="85.7741%" y="533" width="0.1046%" height="15" fill="rgb(237,16,22)" fg:x="820" fg:w="1"/><text x="86.0241%" y="543.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="85.7741%" y="517" width="0.1046%" height="15" fill="rgb(248,192,20)" fg:x="820" fg:w="1"/><text x="86.0241%" y="527.50"></text></g><g><title>databend-query`databend_query::users::user_mgr::_&lt;impl databend_query::users::user_api::UserApiProvider&gt;::get_user::_{{closure}} (1 samples, 0.10%)</title><rect x="85.7741%" y="501" width="0.1046%" height="15" fill="rgb(233,167,2)" fg:x="820" fg:w="1"/><text x="86.0241%" y="511.50"></text></g><g><title>databend-query`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.10%)</title><rect x="85.7741%" y="485" width="0.1046%" height="15" fill="rgb(252,71,44)" fg:x="820" fg:w="1"/><text x="86.0241%" y="495.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="85.8787%" y="629" width="0.1046%" height="15" fill="rgb(238,37,47)" fg:x="821" fg:w="1"/><text x="86.1287%" y="639.50"></text></g><g><title>databend-query`opensrv_mysql::AsyncMysqlIntermediary&lt;B,S&gt;::writer_flush::_{{closure}} (1 samples, 0.10%)</title><rect x="85.8787%" y="613" width="0.1046%" height="15" fill="rgb(214,202,54)" fg:x="821" fg:w="1"/><text x="86.1287%" y="623.50"></text></g><g><title>databend-query`&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="85.8787%" y="597" width="0.1046%" height="15" fill="rgb(254,165,40)" fg:x="821" fg:w="1"/><text x="86.1287%" y="607.50"></text></g><g><title>databend-query`&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (1 samples, 0.10%)</title><rect x="85.8787%" y="581" width="0.1046%" height="15" fill="rgb(246,173,38)" fg:x="821" fg:w="1"/><text x="86.1287%" y="591.50"></text></g><g><title>databend-query`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (1 samples, 0.10%)</title><rect x="85.8787%" y="565" width="0.1046%" height="15" fill="rgb(215,3,27)" fg:x="821" fg:w="1"/><text x="86.1287%" y="575.50"></text></g><g><title>databend-query`tokio::net::tcp::stream::TcpStream::poll_write_priv (1 samples, 0.10%)</title><rect x="85.8787%" y="549" width="0.1046%" height="15" fill="rgb(239,169,51)" fg:x="821" fg:w="1"/><text x="86.1287%" y="559.50"></text></g><g><title>databend-query`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (1 samples, 0.10%)</title><rect x="85.8787%" y="533" width="0.1046%" height="15" fill="rgb(212,5,25)" fg:x="821" fg:w="1"/><text x="86.1287%" y="543.50"></text></g><g><title>databend-query`tokio::io::driver::registration::Registration::poll_write_io (1 samples, 0.10%)</title><rect x="85.8787%" y="517" width="0.1046%" height="15" fill="rgb(243,45,17)" fg:x="821" fg:w="1"/><text x="86.1287%" y="527.50"></text></g><g><title>databend-query`tokio::io::driver::registration::Registration::poll_io (1 samples, 0.10%)</title><rect x="85.8787%" y="501" width="0.1046%" height="15" fill="rgb(242,97,9)" fg:x="821" fg:w="1"/><text x="86.1287%" y="511.50"></text></g><g><title>databend-query`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write::_{{closure}} (1 samples, 0.10%)</title><rect x="85.8787%" y="485" width="0.1046%" height="15" fill="rgb(228,71,31)" fg:x="821" fg:w="1"/><text x="86.1287%" y="495.50"></text></g><g><title>databend-query`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (1 samples, 0.10%)</title><rect x="85.8787%" y="469" width="0.1046%" height="15" fill="rgb(252,184,16)" fg:x="821" fg:w="1"/><text x="86.1287%" y="479.50"></text></g><g><title>databend-query`mio::io_source::IoSource&lt;T&gt;::do_io (1 samples, 0.10%)</title><rect x="85.8787%" y="453" width="0.1046%" height="15" fill="rgb(236,169,46)" fg:x="821" fg:w="1"/><text x="86.1287%" y="463.50"></text></g><g><title>databend-query`mio::sys::unix::IoSourceState::do_io (1 samples, 0.10%)</title><rect x="85.8787%" y="437" width="0.1046%" height="15" fill="rgb(207,17,47)" fg:x="821" fg:w="1"/><text x="86.1287%" y="447.50"></text></g><g><title>databend-query`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (1 samples, 0.10%)</title><rect x="85.8787%" y="421" width="0.1046%" height="15" fill="rgb(206,201,28)" fg:x="821" fg:w="1"/><text x="86.1287%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (1 samples, 0.10%)</title><rect x="85.8787%" y="405" width="0.1046%" height="15" fill="rgb(224,184,23)" fg:x="821" fg:w="1"/><text x="86.1287%" y="415.50"></text></g><g><title>databend-query`databend_query::servers::mysql::mysql_interactive_worker::InteractiveWorkerBase&lt;W&gt;::exec_query::_{{closure}} (1 samples, 0.10%)</title><rect x="85.9833%" y="501" width="0.1046%" height="15" fill="rgb(208,139,48)" fg:x="822" fg:w="1"/><text x="86.2333%" y="511.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="85.9833%" y="485" width="0.1046%" height="15" fill="rgb(208,130,10)" fg:x="822" fg:w="1"/><text x="86.2333%" y="495.50"></text></g><g><title>databend-query`databend_query::servers::mysql::mysql_interactive_worker::InteractiveWorkerBase&lt;W&gt;::exec_query::_{{closure}}::_{{closure}} (1 samples, 0.10%)</title><rect x="85.9833%" y="469" width="0.1046%" height="15" fill="rgb(211,213,45)" fg:x="822" fg:w="1"/><text x="86.2333%" y="479.50"></text></g><g><title>databend-query`&lt;databend_query::sessions::query_ctx::QueryContext as common_base::base::runtime::TrySpawn&gt;::try_spawn (1 samples, 0.10%)</title><rect x="85.9833%" y="453" width="0.1046%" height="15" fill="rgb(235,100,30)" fg:x="822" fg:w="1"/><text x="86.2333%" y="463.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.21%)</title><rect x="85.9833%" y="517" width="0.2092%" height="15" fill="rgb(206,144,31)" fg:x="822" fg:w="2"/><text x="86.2333%" y="527.50"></text></g><g><title>databend-query`databend_query::sessions::session::Session::create_query_context::_{{closure}} (1 samples, 0.10%)</title><rect x="86.0879%" y="501" width="0.1046%" height="15" fill="rgb(224,200,26)" fg:x="823" fg:w="1"/><text x="86.3379%" y="511.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="86.0879%" y="485" width="0.1046%" height="15" fill="rgb(247,104,53)" fg:x="823" fg:w="1"/><text x="86.3379%" y="495.50"></text></g><g><title>databend-query`databend_query::sessions::session::Session::get_shared_query_context::_{{closure}} (1 samples, 0.10%)</title><rect x="86.0879%" y="469" width="0.1046%" height="15" fill="rgb(220,14,17)" fg:x="823" fg:w="1"/><text x="86.3379%" y="479.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="86.0879%" y="453" width="0.1046%" height="15" fill="rgb(230,140,40)" fg:x="823" fg:w="1"/><text x="86.3379%" y="463.50"></text></g><g><title>databend-query`databend_query::clusters::cluster::ClusterDiscovery::discover::_{{closure}} (1 samples, 0.10%)</title><rect x="86.0879%" y="437" width="0.1046%" height="15" fill="rgb(229,2,41)" fg:x="823" fg:w="1"/><text x="86.3379%" y="447.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="86.0879%" y="421" width="0.1046%" height="15" fill="rgb(232,89,16)" fg:x="823" fg:w="1"/><text x="86.3379%" y="431.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="86.0879%" y="405" width="0.1046%" height="15" fill="rgb(247,59,52)" fg:x="823" fg:w="1"/><text x="86.3379%" y="415.50"></text></g><g><title>databend-query`&lt;common_management::cluster::cluster_mgr::ClusterMgr as common_management::cluster::cluster_api::ClusterApi&gt;::get_nodes::_{{closure}} (1 samples, 0.10%)</title><rect x="86.0879%" y="389" width="0.1046%" height="15" fill="rgb(226,110,21)" fg:x="823" fg:w="1"/><text x="86.3379%" y="399.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="86.0879%" y="373" width="0.1046%" height="15" fill="rgb(224,176,43)" fg:x="823" fg:w="1"/><text x="86.3379%" y="383.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="86.0879%" y="357" width="0.1046%" height="15" fill="rgb(221,73,6)" fg:x="823" fg:w="1"/><text x="86.3379%" y="367.50"></text></g><g><title>databend-query`common_meta_embedded::kv_api_impl::_&lt;impl common_meta_api::kv_api::KVApi for common_meta_embedded::meta_embedded::MetaEmbedded&gt;::prefix_list_kv::_{{closure}} (1 samples, 0.10%)</title><rect x="86.0879%" y="341" width="0.1046%" height="15" fill="rgb(232,78,19)" fg:x="823" fg:w="1"/><text x="86.3379%" y="351.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="86.0879%" y="325" width="0.1046%" height="15" fill="rgb(233,112,48)" fg:x="823" fg:w="1"/><text x="86.3379%" y="335.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="86.0879%" y="309" width="0.1046%" height="15" fill="rgb(243,131,47)" fg:x="823" fg:w="1"/><text x="86.3379%" y="319.50"></text></g><g><title>databend-query`&lt;T as common_meta_api::kv_api::KVApi&gt;::prefix_list_kv::_{{closure}} (1 samples, 0.10%)</title><rect x="86.0879%" y="293" width="0.1046%" height="15" fill="rgb(226,51,1)" fg:x="823" fg:w="1"/><text x="86.3379%" y="303.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="86.0879%" y="277" width="0.1046%" height="15" fill="rgb(247,58,7)" fg:x="823" fg:w="1"/><text x="86.3379%" y="287.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="86.0879%" y="261" width="0.1046%" height="15" fill="rgb(209,7,32)" fg:x="823" fg:w="1"/><text x="86.3379%" y="271.50"></text></g><g><title>databend-query`common_meta_raft_store::state_machine::sm_kv_api_impl::_&lt;impl common_meta_api::kv_api::KVApi for common_meta_raft_store::state_machine::sm::StateMachine&gt;::prefix_list_kv::_{{closure}} (1 samples, 0.10%)</title><rect x="86.0879%" y="245" width="0.1046%" height="15" fill="rgb(209,39,41)" fg:x="823" fg:w="1"/><text x="86.3379%" y="255.50"></text></g><g><title>databend-query`common_meta_sled_store::sled_tree::AsKeySpace&lt;KV&gt;::scan_prefix (1 samples, 0.10%)</title><rect x="86.0879%" y="229" width="0.1046%" height="15" fill="rgb(226,182,46)" fg:x="823" fg:w="1"/><text x="86.3379%" y="239.50"></text></g><g><title>databend-query`common_meta_sled_store::sled_tree::SledTree::scan_prefix (1 samples, 0.10%)</title><rect x="86.0879%" y="213" width="0.1046%" height="15" fill="rgb(230,219,10)" fg:x="823" fg:w="1"/><text x="86.3379%" y="223.50"></text></g><g><title>databend-query`&lt;sled::iter::Iter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="86.0879%" y="197" width="0.1046%" height="15" fill="rgb(227,175,30)" fg:x="823" fg:w="1"/><text x="86.3379%" y="207.50"></text></g><g><title>databend-query`sled::iter::Iter::next_inner (1 samples, 0.10%)</title><rect x="86.0879%" y="181" width="0.1046%" height="15" fill="rgb(217,2,50)" fg:x="823" fg:w="1"/><text x="86.3379%" y="191.50"></text></g><g><title>databend-query`sled::tree::Tree::view_for_key (1 samples, 0.10%)</title><rect x="86.0879%" y="165" width="0.1046%" height="15" fill="rgb(229,160,0)" fg:x="823" fg:w="1"/><text x="86.3379%" y="175.50"></text></g><g><title>databend-query`sled::tree::Tree::view_for_pid (1 samples, 0.10%)</title><rect x="86.0879%" y="149" width="0.1046%" height="15" fill="rgb(207,78,37)" fg:x="823" fg:w="1"/><text x="86.3379%" y="159.50"></text></g><g><title>databend-query`sled::pagecache::PageCacheInner::get (1 samples, 0.10%)</title><rect x="86.0879%" y="133" width="0.1046%" height="15" fill="rgb(225,57,0)" fg:x="823" fg:w="1"/><text x="86.3379%" y="143.50"></text></g><g><title>databend-query`sled::pagecache::PageCacheInner::lru_access (1 samples, 0.10%)</title><rect x="86.0879%" y="117" width="0.1046%" height="15" fill="rgb(232,154,2)" fg:x="823" fg:w="1"/><text x="86.3379%" y="127.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u64&gt;&gt; (1 samples, 0.10%)</title><rect x="86.0879%" y="101" width="0.1046%" height="15" fill="rgb(241,212,25)" fg:x="823" fg:w="1"/><text x="86.3379%" y="111.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="86.0879%" y="85" width="0.1046%" height="15" fill="rgb(226,69,20)" fg:x="823" fg:w="1"/><text x="86.3379%" y="95.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.10%)</title><rect x="86.0879%" y="69" width="0.1046%" height="15" fill="rgb(247,184,54)" fg:x="823" fg:w="1"/><text x="86.3379%" y="79.50"></text></g><g><title>databend-query`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.10%)</title><rect x="86.0879%" y="53" width="0.1046%" height="15" fill="rgb(210,145,0)" fg:x="823" fg:w="1"/><text x="86.3379%" y="63.50"></text></g><g><title>databend-query`alloc::slice::_&lt;impl [T]&gt;::into_vec (1 samples, 0.10%)</title><rect x="86.1925%" y="485" width="0.1046%" height="15" fill="rgb(253,82,12)" fg:x="824" fg:w="1"/><text x="86.4425%" y="495.50"></text></g><g><title>databend-query`regex::re_set::unicode::RegexSet::matches (1 samples, 0.10%)</title><rect x="86.2971%" y="453" width="0.1046%" height="15" fill="rgb(245,42,11)" fg:x="825" fg:w="1"/><text x="86.5471%" y="463.50"></text></g><g><title>databend-query`regex::re_set::unicode::RegexSet::read_matches_at (1 samples, 0.10%)</title><rect x="86.2971%" y="437" width="0.1046%" height="15" fill="rgb(219,147,32)" fg:x="825" fg:w="1"/><text x="86.5471%" y="447.50"></text></g><g><title>databend-query`regex::exec::ExecNoSync::many_matches_at (1 samples, 0.10%)</title><rect x="86.2971%" y="421" width="0.1046%" height="15" fill="rgb(246,12,7)" fg:x="825" fg:w="1"/><text x="86.5471%" y="431.50"></text></g><g><title>databend-query`core::slice::_&lt;impl [T]&gt;::get_unchecked (1 samples, 0.10%)</title><rect x="86.2971%" y="405" width="0.1046%" height="15" fill="rgb(243,50,9)" fg:x="825" fg:w="1"/><text x="86.5471%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_syntax::hir::Hir&gt;&gt; (1 samples, 0.10%)</title><rect x="86.4017%" y="405" width="0.1046%" height="15" fill="rgb(219,149,6)" fg:x="826" fg:w="1"/><text x="86.6517%" y="415.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="86.4017%" y="389" width="0.1046%" height="15" fill="rgb(241,51,42)" fg:x="826" fg:w="1"/><text x="86.6517%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;[regex_syntax::hir::Hir]&gt; (1 samples, 0.10%)</title><rect x="86.4017%" y="373" width="0.1046%" height="15" fill="rgb(226,128,27)" fg:x="826" fg:w="1"/><text x="86.6517%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;regex_syntax::hir::Hir&gt; (1 samples, 0.10%)</title><rect x="86.4017%" y="357" width="0.1046%" height="15" fill="rgb(244,144,4)" fg:x="826" fg:w="1"/><text x="86.6517%" y="367.50"></text></g><g><title>databend-query`&lt;regex_syntax::hir::Hir as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="86.4017%" y="341" width="0.1046%" height="15" fill="rgb(221,4,13)" fg:x="826" fg:w="1"/><text x="86.6517%" y="351.50"></text></g><g><title>databend-query`regex_syntax::hir::HirInfo::set_anchored_end (1 samples, 0.10%)</title><rect x="86.4017%" y="325" width="0.1046%" height="15" fill="rgb(208,170,28)" fg:x="826" fg:w="1"/><text x="86.6517%" y="335.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.10%)</title><rect x="86.5063%" y="309" width="0.1046%" height="15" fill="rgb(226,131,13)" fg:x="827" fg:w="1"/><text x="86.7563%" y="319.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.10%)</title><rect x="86.5063%" y="293" width="0.1046%" height="15" fill="rgb(215,72,41)" fg:x="827" fg:w="1"/><text x="86.7563%" y="303.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.10%)</title><rect x="86.5063%" y="277" width="0.1046%" height="15" fill="rgb(243,108,20)" fg:x="827" fg:w="1"/><text x="86.7563%" y="287.50"></text></g><g><title>databend-query`core::iter::adapters::peekable::Peekable&lt;I&gt;::peek (1 samples, 0.10%)</title><rect x="86.6109%" y="133" width="0.1046%" height="15" fill="rgb(230,189,17)" fg:x="828" fg:w="1"/><text x="86.8609%" y="143.50"></text></g><g><title>databend-query`core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.10%)</title><rect x="86.6109%" y="117" width="0.1046%" height="15" fill="rgb(220,50,17)" fg:x="828" fg:w="1"/><text x="86.8609%" y="127.50"></text></g><g><title>databend-query`core::iter::adapters::peekable::Peekable&lt;I&gt;::peek::_{{closure}} (1 samples, 0.10%)</title><rect x="86.6109%" y="101" width="0.1046%" height="15" fill="rgb(248,152,48)" fg:x="828" fg:w="1"/><text x="86.8609%" y="111.50"></text></g><g><title>databend-query`&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="86.6109%" y="85" width="0.1046%" height="15" fill="rgb(244,91,11)" fg:x="828" fg:w="1"/><text x="86.8609%" y="95.50"></text></g><g><title>databend-query`&lt;regex_syntax::utf8::Utf8Sequences as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="86.6109%" y="69" width="0.1046%" height="15" fill="rgb(220,157,5)" fg:x="828" fg:w="1"/><text x="86.8609%" y="79.50"></text></g><g><title>databend-query`core::ptr::read (1 samples, 0.10%)</title><rect x="86.6109%" y="53" width="0.1046%" height="15" fill="rgb(253,137,8)" fg:x="828" fg:w="1"/><text x="86.8609%" y="63.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_capture (2 samples, 0.21%)</title><rect x="86.6109%" y="245" width="0.2092%" height="15" fill="rgb(217,137,51)" fg:x="828" fg:w="2"/><text x="86.8609%" y="255.50"></text></g><g><title>databend-query`regex::compile::Compiler::c (2 samples, 0.21%)</title><rect x="86.6109%" y="229" width="0.2092%" height="15" fill="rgb(218,209,53)" fg:x="828" fg:w="2"/><text x="86.8609%" y="239.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_repeat (2 samples, 0.21%)</title><rect x="86.6109%" y="213" width="0.2092%" height="15" fill="rgb(249,137,25)" fg:x="828" fg:w="2"/><text x="86.8609%" y="223.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_repeat_zero_or_more (2 samples, 0.21%)</title><rect x="86.6109%" y="197" width="0.2092%" height="15" fill="rgb(239,155,26)" fg:x="828" fg:w="2"/><text x="86.8609%" y="207.50"></text></g><g><title>databend-query`regex::compile::Compiler::c (2 samples, 0.21%)</title><rect x="86.6109%" y="181" width="0.2092%" height="15" fill="rgb(227,85,46)" fg:x="828" fg:w="2"/><text x="86.8609%" y="191.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_class (2 samples, 0.21%)</title><rect x="86.6109%" y="165" width="0.2092%" height="15" fill="rgb(251,107,43)" fg:x="828" fg:w="2"/><text x="86.8609%" y="175.50"></text></g><g><title>databend-query`regex::compile::CompileClass::compile (2 samples, 0.21%)</title><rect x="86.6109%" y="149" width="0.2092%" height="15" fill="rgb(234,170,33)" fg:x="828" fg:w="2"/><text x="86.8609%" y="159.50"></text></g><g><title>databend-query`regex::compile::Compiler::fill_split (1 samples, 0.10%)</title><rect x="86.7155%" y="133" width="0.1046%" height="15" fill="rgb(206,29,35)" fg:x="829" fg:w="1"/><text x="86.9655%" y="143.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.10%)</title><rect x="86.7155%" y="117" width="0.1046%" height="15" fill="rgb(227,138,25)" fg:x="829" fg:w="1"/><text x="86.9655%" y="127.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.10%)</title><rect x="86.7155%" y="101" width="0.1046%" height="15" fill="rgb(249,131,35)" fg:x="829" fg:w="1"/><text x="86.9655%" y="111.50"></text></g><g><title>databend-query`core::slice::raw::from_raw_parts_mut (1 samples, 0.10%)</title><rect x="86.7155%" y="85" width="0.1046%" height="15" fill="rgb(239,6,40)" fg:x="829" fg:w="1"/><text x="86.9655%" y="95.50"></text></g><g><title>databend-query`core::ptr::metadata::from_raw_parts_mut (1 samples, 0.10%)</title><rect x="86.7155%" y="69" width="0.1046%" height="15" fill="rgb(246,136,47)" fg:x="829" fg:w="1"/><text x="86.9655%" y="79.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.10%)</title><rect x="86.8201%" y="213" width="0.1046%" height="15" fill="rgb(253,58,26)" fg:x="830" fg:w="1"/><text x="87.0701%" y="223.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.10%)</title><rect x="86.8201%" y="197" width="0.1046%" height="15" fill="rgb(237,141,10)" fg:x="830" fg:w="1"/><text x="87.0701%" y="207.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.10%)</title><rect x="86.8201%" y="181" width="0.1046%" height="15" fill="rgb(234,156,12)" fg:x="830" fg:w="1"/><text x="87.0701%" y="191.50"></text></g><g><title>databend-query`core::num::_&lt;impl usize&gt;::checked_sub (1 samples, 0.10%)</title><rect x="86.9247%" y="197" width="0.1046%" height="15" fill="rgb(243,224,36)" fg:x="831" fg:w="1"/><text x="87.1747%" y="207.50"></text></g><g><title>databend-query`regex::compile::CompileClass::c_utf8_seq (2 samples, 0.21%)</title><rect x="86.9247%" y="213" width="0.2092%" height="15" fill="rgb(205,229,51)" fg:x="831" fg:w="2"/><text x="87.1747%" y="223.50"></text></g><g><title>databend-query`regex::compile::CompileClass::c_utf8_seq_ (1 samples, 0.10%)</title><rect x="87.0293%" y="197" width="0.1046%" height="15" fill="rgb(223,189,4)" fg:x="832" fg:w="1"/><text x="87.2793%" y="207.50"></text></g><g><title>databend-query`regex::compile::Compiler::push_hole (1 samples, 0.10%)</title><rect x="87.0293%" y="181" width="0.1046%" height="15" fill="rgb(249,167,54)" fg:x="832" fg:w="1"/><text x="87.2793%" y="191.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.10%)</title><rect x="87.0293%" y="165" width="0.1046%" height="15" fill="rgb(218,34,28)" fg:x="832" fg:w="1"/><text x="87.2793%" y="175.50"></text></g><g><title>databend-query`regex::compile::Compiler::c (6 samples, 0.63%)</title><rect x="86.6109%" y="261" width="0.6276%" height="15" fill="rgb(232,109,42)" fg:x="828" fg:w="6"/><text x="86.8609%" y="271.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_class (4 samples, 0.42%)</title><rect x="86.8201%" y="245" width="0.4184%" height="15" fill="rgb(248,214,46)" fg:x="830" fg:w="4"/><text x="87.0701%" y="255.50"></text></g><g><title>databend-query`regex::compile::CompileClass::compile (4 samples, 0.42%)</title><rect x="86.8201%" y="229" width="0.4184%" height="15" fill="rgb(244,216,40)" fg:x="830" fg:w="4"/><text x="87.0701%" y="239.50"></text></g><g><title>databend-query`regex::compile::SuffixCache::clear (1 samples, 0.10%)</title><rect x="87.1339%" y="213" width="0.1046%" height="15" fill="rgb(231,226,31)" fg:x="833" fg:w="1"/><text x="87.3839%" y="223.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::clear (1 samples, 0.10%)</title><rect x="87.1339%" y="197" width="0.1046%" height="15" fill="rgb(238,38,43)" fg:x="833" fg:w="1"/><text x="87.3839%" y="207.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1 samples, 0.10%)</title><rect x="87.1339%" y="181" width="0.1046%" height="15" fill="rgb(208,88,43)" fg:x="833" fg:w="1"/><text x="87.3839%" y="191.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.10%)</title><rect x="87.1339%" y="165" width="0.1046%" height="15" fill="rgb(205,136,37)" fg:x="833" fg:w="1"/><text x="87.3839%" y="175.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.10%)</title><rect x="87.1339%" y="149" width="0.1046%" height="15" fill="rgb(237,34,14)" fg:x="833" fg:w="1"/><text x="87.3839%" y="159.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.10%)</title><rect x="87.1339%" y="133" width="0.1046%" height="15" fill="rgb(236,193,44)" fg:x="833" fg:w="1"/><text x="87.3839%" y="143.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.10%)</title><rect x="87.2385%" y="245" width="0.1046%" height="15" fill="rgb(231,48,10)" fg:x="834" fg:w="1"/><text x="87.4885%" y="255.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.10%)</title><rect x="87.2385%" y="229" width="0.1046%" height="15" fill="rgb(213,141,34)" fg:x="834" fg:w="1"/><text x="87.4885%" y="239.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.10%)</title><rect x="87.2385%" y="213" width="0.1046%" height="15" fill="rgb(249,130,34)" fg:x="834" fg:w="1"/><text x="87.4885%" y="223.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.10%)</title><rect x="87.3431%" y="229" width="0.1046%" height="15" fill="rgb(219,42,41)" fg:x="835" fg:w="1"/><text x="87.5931%" y="239.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.10%)</title><rect x="87.3431%" y="213" width="0.1046%" height="15" fill="rgb(224,100,54)" fg:x="835" fg:w="1"/><text x="87.5931%" y="223.50"></text></g><g><title>databend-query`core::slice::raw::from_raw_parts_mut (1 samples, 0.10%)</title><rect x="87.3431%" y="197" width="0.1046%" height="15" fill="rgb(229,200,27)" fg:x="835" fg:w="1"/><text x="87.5931%" y="207.50"></text></g><g><title>databend-query`core::ptr::metadata::from_raw_parts_mut (1 samples, 0.10%)</title><rect x="87.3431%" y="181" width="0.1046%" height="15" fill="rgb(217,118,10)" fg:x="835" fg:w="1"/><text x="87.5931%" y="191.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_concat (10 samples, 1.05%)</title><rect x="86.5063%" y="341" width="1.0460%" height="15" fill="rgb(206,22,3)" fg:x="827" fg:w="10"/><text x="86.7563%" y="351.50"></text></g><g><title>databend-query`regex::compile::Compiler::c (10 samples, 1.05%)</title><rect x="86.5063%" y="325" width="1.0460%" height="15" fill="rgb(232,163,46)" fg:x="827" fg:w="10"/><text x="86.7563%" y="335.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_capture (9 samples, 0.94%)</title><rect x="86.6109%" y="309" width="0.9414%" height="15" fill="rgb(206,95,13)" fg:x="828" fg:w="9"/><text x="86.8609%" y="319.50"></text></g><g><title>databend-query`regex::compile::Compiler::c (9 samples, 0.94%)</title><rect x="86.6109%" y="293" width="0.9414%" height="15" fill="rgb(253,154,18)" fg:x="828" fg:w="9"/><text x="86.8609%" y="303.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_concat (9 samples, 0.94%)</title><rect x="86.6109%" y="277" width="0.9414%" height="15" fill="rgb(219,32,23)" fg:x="828" fg:w="9"/><text x="86.8609%" y="287.50"></text></g><g><title>databend-query`regex::compile::Compiler::fill (3 samples, 0.31%)</title><rect x="87.2385%" y="261" width="0.3138%" height="15" fill="rgb(230,191,45)" fg:x="834" fg:w="3"/><text x="87.4885%" y="271.50"></text></g><g><title>databend-query`regex::compile::Compiler::fill (2 samples, 0.21%)</title><rect x="87.3431%" y="245" width="0.2092%" height="15" fill="rgb(229,64,36)" fg:x="835" fg:w="2"/><text x="87.5931%" y="255.50"></text></g><g><title>databend-query`regex::compile::MaybeInst::fill (1 samples, 0.10%)</title><rect x="87.4477%" y="229" width="0.1046%" height="15" fill="rgb(205,129,25)" fg:x="836" fg:w="1"/><text x="87.6977%" y="239.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;regex::compile::MaybeInst&gt; (1 samples, 0.10%)</title><rect x="87.4477%" y="213" width="0.1046%" height="15" fill="rgb(254,112,7)" fg:x="836" fg:w="1"/><text x="87.6977%" y="223.50"></text></g><g><title>databend-query`regex::compile::Compiler::compile (11 samples, 1.15%)</title><rect x="86.5063%" y="405" width="1.1506%" height="15" fill="rgb(226,53,48)" fg:x="827" fg:w="11"/><text x="86.7563%" y="415.50"></text></g><g><title>databend-query`regex::compile::Compiler::compile_many (11 samples, 1.15%)</title><rect x="86.5063%" y="389" width="1.1506%" height="15" fill="rgb(214,153,38)" fg:x="827" fg:w="11"/><text x="86.7563%" y="399.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_capture (11 samples, 1.15%)</title><rect x="86.5063%" y="373" width="1.1506%" height="15" fill="rgb(243,101,7)" fg:x="827" fg:w="11"/><text x="86.7563%" y="383.50"></text></g><g><title>databend-query`regex::compile::Compiler::c (11 samples, 1.15%)</title><rect x="86.5063%" y="357" width="1.1506%" height="15" fill="rgb(240,140,22)" fg:x="827" fg:w="11"/><text x="86.7563%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.10%)</title><rect x="87.5523%" y="341" width="0.1046%" height="15" fill="rgb(235,114,2)" fg:x="837" fg:w="1"/><text x="87.8023%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;regex_syntax::ast::Ast&gt; (1 samples, 0.10%)</title><rect x="87.6569%" y="373" width="0.1046%" height="15" fill="rgb(242,59,12)" fg:x="838" fg:w="1"/><text x="87.9069%" y="383.50"></text></g><g><title>databend-query`DYLD-STUB$$memcpy (1 samples, 0.10%)</title><rect x="87.6569%" y="357" width="0.1046%" height="15" fill="rgb(252,134,9)" fg:x="838" fg:w="1"/><text x="87.9069%" y="367.50"></text></g><g><title>databend-query`regex_syntax::ast::parse::NestLimiter&lt;P&gt;::check (1 samples, 0.10%)</title><rect x="87.7615%" y="325" width="0.1046%" height="15" fill="rgb(236,4,44)" fg:x="839" fg:w="1"/><text x="88.0115%" y="335.50"></text></g><g><title>databend-query`regex_syntax::ast::visitor::visit (1 samples, 0.10%)</title><rect x="87.7615%" y="309" width="0.1046%" height="15" fill="rgb(254,172,41)" fg:x="839" fg:w="1"/><text x="88.0115%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;regex_syntax::ast::visitor::HeapVisitor&gt; (1 samples, 0.10%)</title><rect x="87.7615%" y="293" width="0.1046%" height="15" fill="rgb(244,63,20)" fg:x="839" fg:w="1"/><text x="88.0115%" y="303.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(&amp;regex_syntax::ast::Ast,regex_syntax::ast::visitor::Frame)&gt;&gt; (1 samples, 0.10%)</title><rect x="87.7615%" y="277" width="0.1046%" height="15" fill="rgb(250,73,31)" fg:x="839" fg:w="1"/><text x="88.0115%" y="287.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(&amp;regex_syntax::ast::Ast,regex_syntax::ast::visitor::Frame)&gt;&gt; (1 samples, 0.10%)</title><rect x="87.7615%" y="261" width="0.1046%" height="15" fill="rgb(241,38,36)" fg:x="839" fg:w="1"/><text x="88.0115%" y="271.50"></text></g><g><title>databend-query`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="87.7615%" y="245" width="0.1046%" height="15" fill="rgb(245,211,2)" fg:x="839" fg:w="1"/><text x="88.0115%" y="255.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.10%)</title><rect x="87.7615%" y="229" width="0.1046%" height="15" fill="rgb(206,120,28)" fg:x="839" fg:w="1"/><text x="88.0115%" y="239.50"></text></g><g><title>databend-query`alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="87.7615%" y="213" width="0.1046%" height="15" fill="rgb(211,59,34)" fg:x="839" fg:w="1"/><text x="88.0115%" y="223.50"></text></g><g><title>databend-query`__rg_dealloc (1 samples, 0.10%)</title><rect x="87.7615%" y="197" width="0.1046%" height="15" fill="rgb(233,168,5)" fg:x="839" fg:w="1"/><text x="88.0115%" y="207.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.10%)</title><rect x="87.7615%" y="181" width="0.1046%" height="15" fill="rgb(234,33,13)" fg:x="839" fg:w="1"/><text x="88.0115%" y="191.50"></text></g><g><title>databend-query`common_base::base::runtime_tracker::ThreadTracker::dealloc_memory (1 samples, 0.10%)</title><rect x="87.7615%" y="165" width="0.1046%" height="15" fill="rgb(231,150,26)" fg:x="839" fg:w="1"/><text x="88.0115%" y="175.50"></text></g><g><title>databend-query`regex_syntax::ast::parse::ParserI&lt;P&gt;::bump (1 samples, 0.10%)</title><rect x="87.8661%" y="309" width="0.1046%" height="15" fill="rgb(217,191,4)" fg:x="840" fg:w="1"/><text x="88.1161%" y="319.50"></text></g><g><title>databend-query`regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_primitive (2 samples, 0.21%)</title><rect x="87.8661%" y="325" width="0.2092%" height="15" fill="rgb(246,198,38)" fg:x="840" fg:w="2"/><text x="88.1161%" y="335.50"></text></g><g><title>databend-query`regex_syntax::ast::parse::ParserI&lt;P&gt;::char (1 samples, 0.10%)</title><rect x="87.9707%" y="309" width="0.1046%" height="15" fill="rgb(245,64,37)" fg:x="841" fg:w="1"/><text x="88.2207%" y="319.50"></text></g><g><title>databend-query`regex_syntax::ast::parse::ParserI&lt;P&gt;::char_at (1 samples, 0.10%)</title><rect x="87.9707%" y="293" width="0.1046%" height="15" fill="rgb(250,30,36)" fg:x="841" fg:w="1"/><text x="88.2207%" y="303.50"></text></g><g><title>databend-query`core::str::traits::_&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.10%)</title><rect x="87.9707%" y="277" width="0.1046%" height="15" fill="rgb(217,86,53)" fg:x="841" fg:w="1"/><text x="88.2207%" y="287.50"></text></g><g><title>databend-query`core::str::traits::_&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (1 samples, 0.10%)</title><rect x="87.9707%" y="261" width="0.1046%" height="15" fill="rgb(228,157,16)" fg:x="841" fg:w="1"/><text x="88.2207%" y="271.50"></text></g><g><title>databend-query`core::str::traits::_&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (1 samples, 0.10%)</title><rect x="87.9707%" y="245" width="0.1046%" height="15" fill="rgb(217,59,31)" fg:x="841" fg:w="1"/><text x="88.2207%" y="255.50"></text></g><g><title>databend-query`core::str::traits::_&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (1 samples, 0.10%)</title><rect x="87.9707%" y="229" width="0.1046%" height="15" fill="rgb(237,138,41)" fg:x="841" fg:w="1"/><text x="88.2207%" y="239.50"></text></g><g><title>databend-query`core::ptr::metadata::from_raw_parts (1 samples, 0.10%)</title><rect x="87.9707%" y="213" width="0.1046%" height="15" fill="rgb(227,91,49)" fg:x="841" fg:w="1"/><text x="88.2207%" y="223.50"></text></g><g><title>databend-query`regex_syntax::ast::parse::ParserI&lt;P&gt;::pop_group (1 samples, 0.10%)</title><rect x="88.0753%" y="325" width="0.1046%" height="15" fill="rgb(247,21,44)" fg:x="842" fg:w="1"/><text x="88.3253%" y="335.50"></text></g><g><title>databend-query`core::cell::Cell&lt;T&gt;::set (1 samples, 0.10%)</title><rect x="88.0753%" y="309" width="0.1046%" height="15" fill="rgb(219,210,51)" fg:x="842" fg:w="1"/><text x="88.3253%" y="319.50"></text></g><g><title>databend-query`core::cell::Cell&lt;T&gt;::replace (1 samples, 0.10%)</title><rect x="88.0753%" y="293" width="0.1046%" height="15" fill="rgb(209,140,6)" fg:x="842" fg:w="1"/><text x="88.3253%" y="303.50"></text></g><g><title>databend-query`core::ptr::read (1 samples, 0.10%)</title><rect x="88.0753%" y="277" width="0.1046%" height="15" fill="rgb(221,188,24)" fg:x="842" fg:w="1"/><text x="88.3253%" y="287.50"></text></g><g><title>databend-query`regex_syntax::ast::parse::Parser::parse (5 samples, 0.52%)</title><rect x="87.7615%" y="373" width="0.5230%" height="15" fill="rgb(232,154,20)" fg:x="839" fg:w="5"/><text x="88.0115%" y="383.50"></text></g><g><title>databend-query`regex_syntax::ast::parse::ParserI&lt;P&gt;::parse (5 samples, 0.52%)</title><rect x="87.7615%" y="357" width="0.5230%" height="15" fill="rgb(244,137,50)" fg:x="839" fg:w="5"/><text x="88.0115%" y="367.50"></text></g><g><title>databend-query`regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_with_comments (5 samples, 0.52%)</title><rect x="87.7615%" y="341" width="0.5230%" height="15" fill="rgb(225,185,43)" fg:x="839" fg:w="5"/><text x="88.0115%" y="351.50"></text></g><g><title>databend-query`regex_syntax::ast::parse::ParserI&lt;P&gt;::push_group (1 samples, 0.10%)</title><rect x="88.1799%" y="325" width="0.1046%" height="15" fill="rgb(213,205,38)" fg:x="843" fg:w="1"/><text x="88.4299%" y="335.50"></text></g><g><title>databend-query`regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_group (1 samples, 0.10%)</title><rect x="88.1799%" y="309" width="0.1046%" height="15" fill="rgb(236,73,12)" fg:x="843" fg:w="1"/><text x="88.4299%" y="319.50"></text></g><g><title>databend-query`regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_flags (1 samples, 0.10%)</title><rect x="88.1799%" y="293" width="0.1046%" height="15" fill="rgb(235,219,13)" fg:x="843" fg:w="1"/><text x="88.4299%" y="303.50"></text></g><g><title>databend-query`regex_syntax::ast::Flags::add_item (1 samples, 0.10%)</title><rect x="88.1799%" y="277" width="0.1046%" height="15" fill="rgb(218,59,36)" fg:x="843" fg:w="1"/><text x="88.4299%" y="287.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.10%)</title><rect x="88.1799%" y="261" width="0.1046%" height="15" fill="rgb(205,110,39)" fg:x="843" fg:w="1"/><text x="88.4299%" y="271.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.10%)</title><rect x="88.1799%" y="245" width="0.1046%" height="15" fill="rgb(218,206,42)" fg:x="843" fg:w="1"/><text x="88.4299%" y="255.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.10%)</title><rect x="88.1799%" y="229" width="0.1046%" height="15" fill="rgb(248,125,24)" fg:x="843" fg:w="1"/><text x="88.4299%" y="239.50"></text></g><g><title>databend-query`alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="88.1799%" y="213" width="0.1046%" height="15" fill="rgb(242,28,27)" fg:x="843" fg:w="1"/><text x="88.4299%" y="223.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="88.1799%" y="197" width="0.1046%" height="15" fill="rgb(216,228,15)" fg:x="843" fg:w="1"/><text x="88.4299%" y="207.50"></text></g><g><title>databend-query`alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="88.1799%" y="181" width="0.1046%" height="15" fill="rgb(235,116,46)" fg:x="843" fg:w="1"/><text x="88.4299%" y="191.50"></text></g><g><title>databend-query`alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="88.1799%" y="165" width="0.1046%" height="15" fill="rgb(224,18,32)" fg:x="843" fg:w="1"/><text x="88.4299%" y="175.50"></text></g><g><title>databend-query`__rg_alloc (1 samples, 0.10%)</title><rect x="88.1799%" y="149" width="0.1046%" height="15" fill="rgb(252,5,12)" fg:x="843" fg:w="1"/><text x="88.4299%" y="159.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.10%)</title><rect x="88.1799%" y="133" width="0.1046%" height="15" fill="rgb(251,36,5)" fg:x="843" fg:w="1"/><text x="88.4299%" y="143.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="88.3891%" y="229" width="0.1046%" height="15" fill="rgb(217,53,14)" fg:x="845" fg:w="1"/><text x="88.6391%" y="239.50"></text></g><g><title>databend-query`core::option::Option&lt;T&gt;::map (1 samples, 0.10%)</title><rect x="88.3891%" y="213" width="0.1046%" height="15" fill="rgb(215,86,45)" fg:x="845" fg:w="1"/><text x="88.6391%" y="223.50"></text></g><g><title>databend-query`regex_syntax::hir::ClassUnicode::try_case_fold_simple (3 samples, 0.31%)</title><rect x="88.2845%" y="277" width="0.3138%" height="15" fill="rgb(242,169,11)" fg:x="844" fg:w="3"/><text x="88.5345%" y="287.50"></text></g><g><title>databend-query`regex_syntax::hir::interval::IntervalSet&lt;I&gt;::case_fold_simple (3 samples, 0.31%)</title><rect x="88.2845%" y="261" width="0.3138%" height="15" fill="rgb(211,213,45)" fg:x="844" fg:w="3"/><text x="88.5345%" y="271.50"></text></g><g><title>databend-query`&lt;regex_syntax::hir::ClassUnicodeRange as regex_syntax::hir::interval::Interval&gt;::case_fold_simple (2 samples, 0.21%)</title><rect x="88.3891%" y="245" width="0.2092%" height="15" fill="rgb(205,88,11)" fg:x="845" fg:w="2"/><text x="88.6391%" y="255.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.10%)</title><rect x="88.4937%" y="229" width="0.1046%" height="15" fill="rgb(252,69,26)" fg:x="846" fg:w="1"/><text x="88.7437%" y="239.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.10%)</title><rect x="88.4937%" y="213" width="0.1046%" height="15" fill="rgb(246,123,37)" fg:x="846" fg:w="1"/><text x="88.7437%" y="223.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.10%)</title><rect x="88.4937%" y="197" width="0.1046%" height="15" fill="rgb(212,205,5)" fg:x="846" fg:w="1"/><text x="88.7437%" y="207.50"></text></g><g><title>databend-query`alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="88.4937%" y="181" width="0.1046%" height="15" fill="rgb(253,148,0)" fg:x="846" fg:w="1"/><text x="88.7437%" y="191.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.10%)</title><rect x="88.4937%" y="165" width="0.1046%" height="15" fill="rgb(239,22,4)" fg:x="846" fg:w="1"/><text x="88.7437%" y="175.50"></text></g><g><title>databend-query`alloc::alloc::Global::grow_impl (1 samples, 0.10%)</title><rect x="88.4937%" y="149" width="0.1046%" height="15" fill="rgb(226,26,53)" fg:x="846" fg:w="1"/><text x="88.7437%" y="159.50"></text></g><g><title>databend-query`alloc::alloc::realloc (1 samples, 0.10%)</title><rect x="88.4937%" y="133" width="0.1046%" height="15" fill="rgb(225,229,45)" fg:x="846" fg:w="1"/><text x="88.7437%" y="143.50"></text></g><g><title>databend-query`__rg_realloc (1 samples, 0.10%)</title><rect x="88.4937%" y="117" width="0.1046%" height="15" fill="rgb(220,60,37)" fg:x="846" fg:w="1"/><text x="88.7437%" y="127.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::realloc (1 samples, 0.10%)</title><rect x="88.4937%" y="101" width="0.1046%" height="15" fill="rgb(217,180,35)" fg:x="846" fg:w="1"/><text x="88.7437%" y="111.50"></text></g><g><title>databend-query`_rjem_rallocx (1 samples, 0.10%)</title><rect x="88.4937%" y="85" width="0.1046%" height="15" fill="rgb(229,7,53)" fg:x="846" fg:w="1"/><text x="88.7437%" y="95.50"></text></g><g><title>databend-query`_rjem_je_arena_ralloc (1 samples, 0.10%)</title><rect x="88.4937%" y="69" width="0.1046%" height="15" fill="rgb(254,137,3)" fg:x="846" fg:w="1"/><text x="88.7437%" y="79.50"></text></g><g><title>databend-query`regex_syntax::hir::translate::TranslatorI::hir_literal (4 samples, 0.42%)</title><rect x="88.2845%" y="309" width="0.4184%" height="15" fill="rgb(215,140,41)" fg:x="844" fg:w="4"/><text x="88.5345%" y="319.50"></text></g><g><title>databend-query`regex_syntax::hir::translate::TranslatorI::hir_from_char_case_insensitive (4 samples, 0.42%)</title><rect x="88.2845%" y="293" width="0.4184%" height="15" fill="rgb(250,80,15)" fg:x="844" fg:w="4"/><text x="88.5345%" y="303.50"></text></g><g><title>databend-query`regex_syntax::unicode::contains_simple_case_mapping (1 samples, 0.10%)</title><rect x="88.5983%" y="277" width="0.1046%" height="15" fill="rgb(252,191,6)" fg:x="847" fg:w="1"/><text x="88.8483%" y="287.50"></text></g><g><title>databend-query`regex_syntax::unicode::contains_simple_case_mapping::imp (1 samples, 0.10%)</title><rect x="88.5983%" y="261" width="0.1046%" height="15" fill="rgb(246,217,18)" fg:x="847" fg:w="1"/><text x="88.8483%" y="271.50"></text></g><g><title>databend-query`core::slice::_&lt;impl [T]&gt;::binary_search_by (1 samples, 0.10%)</title><rect x="88.5983%" y="245" width="0.1046%" height="15" fill="rgb(223,93,7)" fg:x="847" fg:w="1"/><text x="88.8483%" y="255.50"></text></g><g><title>databend-query`databend_query::servers::mysql::mysql_federated::MySQLFederated::federated_mixed_check (24 samples, 2.51%)</title><rect x="86.2971%" y="485" width="2.5105%" height="15" fill="rgb(225,55,52)" fg:x="825" fg:w="24"/><text x="86.5471%" y="495.50">da..</text></g><g><title>databend-query`databend_query::servers::mysql::mysql_federated::MySQLFederated::block_match_rule (24 samples, 2.51%)</title><rect x="86.2971%" y="469" width="2.5105%" height="15" fill="rgb(240,31,24)" fg:x="825" fg:w="24"/><text x="86.5471%" y="479.50">da..</text></g><g><title>databend-query`regex::re_set::unicode::RegexSet::new (23 samples, 2.41%)</title><rect x="86.4017%" y="453" width="2.4059%" height="15" fill="rgb(205,56,52)" fg:x="826" fg:w="23"/><text x="86.6517%" y="463.50">da..</text></g><g><title>databend-query`regex::re_builder::set_unicode::RegexSetBuilder::build (23 samples, 2.41%)</title><rect x="86.4017%" y="437" width="2.4059%" height="15" fill="rgb(246,146,12)" fg:x="826" fg:w="23"/><text x="86.6517%" y="447.50">da..</text></g><g><title>databend-query`regex::exec::ExecBuilder::build (23 samples, 2.41%)</title><rect x="86.4017%" y="421" width="2.4059%" height="15" fill="rgb(239,84,36)" fg:x="826" fg:w="23"/><text x="86.6517%" y="431.50">da..</text></g><g><title>databend-query`regex::exec::ExecBuilder::parse (11 samples, 1.15%)</title><rect x="87.6569%" y="405" width="1.1506%" height="15" fill="rgb(207,41,40)" fg:x="838" fg:w="11"/><text x="87.9069%" y="415.50"></text></g><g><title>databend-query`regex_syntax::parser::Parser::parse (11 samples, 1.15%)</title><rect x="87.6569%" y="389" width="1.1506%" height="15" fill="rgb(241,179,25)" fg:x="838" fg:w="11"/><text x="87.9069%" y="399.50"></text></g><g><title>databend-query`regex_syntax::hir::translate::Translator::translate (5 samples, 0.52%)</title><rect x="88.2845%" y="373" width="0.5230%" height="15" fill="rgb(210,0,34)" fg:x="844" fg:w="5"/><text x="88.5345%" y="383.50"></text></g><g><title>databend-query`regex_syntax::ast::visitor::visit (5 samples, 0.52%)</title><rect x="88.2845%" y="357" width="0.5230%" height="15" fill="rgb(225,217,29)" fg:x="844" fg:w="5"/><text x="88.5345%" y="367.50"></text></g><g><title>databend-query`regex_syntax::ast::visitor::HeapVisitor::visit (5 samples, 0.52%)</title><rect x="88.2845%" y="341" width="0.5230%" height="15" fill="rgb(216,191,38)" fg:x="844" fg:w="5"/><text x="88.5345%" y="351.50"></text></g><g><title>databend-query`&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_post (5 samples, 0.52%)</title><rect x="88.2845%" y="325" width="0.5230%" height="15" fill="rgb(232,140,52)" fg:x="844" fg:w="5"/><text x="88.5345%" y="335.50"></text></g><g><title>databend-query`regex_syntax::hir::translate::TranslatorI::push (1 samples, 0.10%)</title><rect x="88.7029%" y="309" width="0.1046%" height="15" fill="rgb(223,158,51)" fg:x="848" fg:w="1"/><text x="88.9529%" y="319.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.10%)</title><rect x="88.7029%" y="293" width="0.1046%" height="15" fill="rgb(235,29,51)" fg:x="848" fg:w="1"/><text x="88.9529%" y="303.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.10%)</title><rect x="88.7029%" y="277" width="0.1046%" height="15" fill="rgb(215,181,18)" fg:x="848" fg:w="1"/><text x="88.9529%" y="287.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.10%)</title><rect x="88.7029%" y="261" width="0.1046%" height="15" fill="rgb(227,125,34)" fg:x="848" fg:w="1"/><text x="88.9529%" y="271.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="88.8075%" y="469" width="0.1046%" height="15" fill="rgb(230,197,49)" fg:x="849" fg:w="1"/><text x="89.0575%" y="479.50"></text></g><g><title>databend-query`regex::re_set::unicode::RegexSet::matches (1 samples, 0.10%)</title><rect x="88.9121%" y="453" width="0.1046%" height="15" fill="rgb(239,141,16)" fg:x="850" fg:w="1"/><text x="89.1621%" y="463.50"></text></g><g><title>databend-query`regex::re_set::unicode::RegexSet::read_matches_at (1 samples, 0.10%)</title><rect x="88.9121%" y="437" width="0.1046%" height="15" fill="rgb(225,105,43)" fg:x="850" fg:w="1"/><text x="89.1621%" y="447.50"></text></g><g><title>databend-query`regex::exec::ExecNoSync::many_matches_at (1 samples, 0.10%)</title><rect x="88.9121%" y="421" width="0.1046%" height="15" fill="rgb(214,131,14)" fg:x="850" fg:w="1"/><text x="89.1621%" y="431.50"></text></g><g><title>databend-query`regex::dfa::Fsm::cached_state (1 samples, 0.10%)</title><rect x="88.9121%" y="405" width="0.1046%" height="15" fill="rgb(229,177,11)" fg:x="850" fg:w="1"/><text x="89.1621%" y="415.50"></text></g><g><title>databend-query`regex::dfa::Fsm::add_state (1 samples, 0.10%)</title><rect x="88.9121%" y="389" width="0.1046%" height="15" fill="rgb(231,180,14)" fg:x="850" fg:w="1"/><text x="89.1621%" y="399.50"></text></g><g><title>databend-query`regex::dfa::StateMap::insert (1 samples, 0.10%)</title><rect x="88.9121%" y="373" width="0.1046%" height="15" fill="rgb(232,88,2)" fg:x="850" fg:w="1"/><text x="89.1621%" y="383.50"></text></g><g><title>databend-query`std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.10%)</title><rect x="88.9121%" y="357" width="0.1046%" height="15" fill="rgb(205,220,8)" fg:x="850" fg:w="1"/><text x="89.1621%" y="367.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.10%)</title><rect x="88.9121%" y="341" width="0.1046%" height="15" fill="rgb(225,23,53)" fg:x="850" fg:w="1"/><text x="89.1621%" y="351.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.10%)</title><rect x="88.9121%" y="325" width="0.1046%" height="15" fill="rgb(213,62,29)" fg:x="850" fg:w="1"/><text x="89.1621%" y="335.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="88.9121%" y="309" width="0.1046%" height="15" fill="rgb(227,75,7)" fg:x="850" fg:w="1"/><text x="89.1621%" y="319.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.10%)</title><rect x="88.9121%" y="293" width="0.1046%" height="15" fill="rgb(207,105,14)" fg:x="850" fg:w="1"/><text x="89.1621%" y="303.50"></text></g><g><title>databend-query`regex::compile::Compiler::new (1 samples, 0.10%)</title><rect x="89.0167%" y="405" width="0.1046%" height="15" fill="rgb(245,62,29)" fg:x="851" fg:w="1"/><text x="89.2667%" y="415.50"></text></g><g><title>databend-query`regex::prog::Program::new (1 samples, 0.10%)</title><rect x="89.0167%" y="389" width="0.1046%" height="15" fill="rgb(236,202,4)" fg:x="851" fg:w="1"/><text x="89.2667%" y="399.50"></text></g><g><title>databend-query`alloc::vec::from_elem (1 samples, 0.10%)</title><rect x="89.0167%" y="373" width="0.1046%" height="15" fill="rgb(250,67,1)" fg:x="851" fg:w="1"/><text x="89.2667%" y="383.50"></text></g><g><title>databend-query`&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.10%)</title><rect x="89.0167%" y="357" width="0.1046%" height="15" fill="rgb(253,115,44)" fg:x="851" fg:w="1"/><text x="89.2667%" y="367.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (1 samples, 0.10%)</title><rect x="89.0167%" y="341" width="0.1046%" height="15" fill="rgb(251,139,18)" fg:x="851" fg:w="1"/><text x="89.2667%" y="351.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="89.0167%" y="325" width="0.1046%" height="15" fill="rgb(218,22,32)" fg:x="851" fg:w="1"/><text x="89.2667%" y="335.50"></text></g><g><title>databend-query`core::alloc::layout::Layout::array (1 samples, 0.10%)</title><rect x="89.0167%" y="309" width="0.1046%" height="15" fill="rgb(243,53,5)" fg:x="851" fg:w="1"/><text x="89.2667%" y="319.50"></text></g><g><title>databend-query`databend_query::servers::mysql::mysql_federated::MySQLFederated::federated_select_variable_check (4 samples, 0.42%)</title><rect x="88.8075%" y="485" width="0.4184%" height="15" fill="rgb(227,56,16)" fg:x="849" fg:w="4"/><text x="89.0575%" y="495.50"></text></g><g><title>databend-query`databend_query::servers::mysql::mysql_federated::MySQLFederated::lazy_block_match_rule (3 samples, 0.31%)</title><rect x="88.9121%" y="469" width="0.3138%" height="15" fill="rgb(245,53,0)" fg:x="850" fg:w="3"/><text x="89.1621%" y="479.50"></text></g><g><title>databend-query`regex::re_set::unicode::RegexSet::new (2 samples, 0.21%)</title><rect x="89.0167%" y="453" width="0.2092%" height="15" fill="rgb(216,170,35)" fg:x="851" fg:w="2"/><text x="89.2667%" y="463.50"></text></g><g><title>databend-query`regex::re_builder::set_unicode::RegexSetBuilder::build (2 samples, 0.21%)</title><rect x="89.0167%" y="437" width="0.2092%" height="15" fill="rgb(211,200,8)" fg:x="851" fg:w="2"/><text x="89.2667%" y="447.50"></text></g><g><title>databend-query`regex::exec::ExecBuilder::build (2 samples, 0.21%)</title><rect x="89.0167%" y="421" width="0.2092%" height="15" fill="rgb(228,204,44)" fg:x="851" fg:w="2"/><text x="89.2667%" y="431.50"></text></g><g><title>databend-query`regex::exec::ExecBuilder::parse (1 samples, 0.10%)</title><rect x="89.1213%" y="405" width="0.1046%" height="15" fill="rgb(214,121,17)" fg:x="852" fg:w="1"/><text x="89.3713%" y="415.50"></text></g><g><title>databend-query`regex_syntax::parser::Parser::parse (1 samples, 0.10%)</title><rect x="89.1213%" y="389" width="0.1046%" height="15" fill="rgb(233,64,38)" fg:x="852" fg:w="1"/><text x="89.3713%" y="399.50"></text></g><g><title>databend-query`regex_syntax::ast::parse::Parser::parse (1 samples, 0.10%)</title><rect x="89.1213%" y="373" width="0.1046%" height="15" fill="rgb(253,54,19)" fg:x="852" fg:w="1"/><text x="89.3713%" y="383.50"></text></g><g><title>databend-query`regex_syntax::ast::parse::ParserI&lt;P&gt;::parse (1 samples, 0.10%)</title><rect x="89.1213%" y="357" width="0.1046%" height="15" fill="rgb(253,94,18)" fg:x="852" fg:w="1"/><text x="89.3713%" y="367.50"></text></g><g><title>databend-query`regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_with_comments (1 samples, 0.10%)</title><rect x="89.1213%" y="341" width="0.1046%" height="15" fill="rgb(227,57,52)" fg:x="852" fg:w="1"/><text x="89.3713%" y="351.50"></text></g><g><title>databend-query`regex_syntax::ast::parse::ParserI&lt;P&gt;::push_group (1 samples, 0.10%)</title><rect x="89.1213%" y="325" width="0.1046%" height="15" fill="rgb(230,228,50)" fg:x="852" fg:w="1"/><text x="89.3713%" y="335.50"></text></g><g><title>databend-query`regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_group (1 samples, 0.10%)</title><rect x="89.1213%" y="309" width="0.1046%" height="15" fill="rgb(217,205,27)" fg:x="852" fg:w="1"/><text x="89.3713%" y="319.50"></text></g><g><title>databend-query`regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_flags (1 samples, 0.10%)</title><rect x="89.1213%" y="293" width="0.1046%" height="15" fill="rgb(252,71,50)" fg:x="852" fg:w="1"/><text x="89.3713%" y="303.50"></text></g><g><title>databend-query`regex_syntax::ast::Flags::add_item (1 samples, 0.10%)</title><rect x="89.1213%" y="277" width="0.1046%" height="15" fill="rgb(209,86,4)" fg:x="852" fg:w="1"/><text x="89.3713%" y="287.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.10%)</title><rect x="89.1213%" y="261" width="0.1046%" height="15" fill="rgb(229,94,0)" fg:x="852" fg:w="1"/><text x="89.3713%" y="271.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.10%)</title><rect x="89.1213%" y="245" width="0.1046%" height="15" fill="rgb(252,223,21)" fg:x="852" fg:w="1"/><text x="89.3713%" y="255.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.10%)</title><rect x="89.1213%" y="229" width="0.1046%" height="15" fill="rgb(230,210,4)" fg:x="852" fg:w="1"/><text x="89.3713%" y="239.50"></text></g><g><title>databend-query`alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="89.1213%" y="213" width="0.1046%" height="15" fill="rgb(240,149,38)" fg:x="852" fg:w="1"/><text x="89.3713%" y="223.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="89.1213%" y="197" width="0.1046%" height="15" fill="rgb(254,105,20)" fg:x="852" fg:w="1"/><text x="89.3713%" y="207.50"></text></g><g><title>databend-query`alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="89.1213%" y="181" width="0.1046%" height="15" fill="rgb(253,87,46)" fg:x="852" fg:w="1"/><text x="89.3713%" y="191.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::collect (1 samples, 0.10%)</title><rect x="89.2259%" y="453" width="0.1046%" height="15" fill="rgb(253,116,33)" fg:x="853" fg:w="1"/><text x="89.4759%" y="463.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="89.2259%" y="437" width="0.1046%" height="15" fill="rgb(229,198,5)" fg:x="853" fg:w="1"/><text x="89.4759%" y="447.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="89.2259%" y="421" width="0.1046%" height="15" fill="rgb(242,38,37)" fg:x="853" fg:w="1"/><text x="89.4759%" y="431.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="89.2259%" y="405" width="0.1046%" height="15" fill="rgb(242,69,53)" fg:x="853" fg:w="1"/><text x="89.4759%" y="415.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="89.2259%" y="389" width="0.1046%" height="15" fill="rgb(249,80,16)" fg:x="853" fg:w="1"/><text x="89.4759%" y="399.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="89.2259%" y="373" width="0.1046%" height="15" fill="rgb(206,128,11)" fg:x="853" fg:w="1"/><text x="89.4759%" y="383.50"></text></g><g><title>databend-query`regex::compile::Compiler::c (1 samples, 0.10%)</title><rect x="89.3305%" y="261" width="0.1046%" height="15" fill="rgb(212,35,20)" fg:x="854" fg:w="1"/><text x="89.5805%" y="271.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_capture (1 samples, 0.10%)</title><rect x="89.3305%" y="245" width="0.1046%" height="15" fill="rgb(236,79,13)" fg:x="854" fg:w="1"/><text x="89.5805%" y="255.50"></text></g><g><title>databend-query`regex::compile::Compiler::c (1 samples, 0.10%)</title><rect x="89.3305%" y="229" width="0.1046%" height="15" fill="rgb(233,123,3)" fg:x="854" fg:w="1"/><text x="89.5805%" y="239.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_repeat (1 samples, 0.10%)</title><rect x="89.3305%" y="213" width="0.1046%" height="15" fill="rgb(214,93,52)" fg:x="854" fg:w="1"/><text x="89.5805%" y="223.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_repeat_zero_or_more (1 samples, 0.10%)</title><rect x="89.3305%" y="197" width="0.1046%" height="15" fill="rgb(251,37,40)" fg:x="854" fg:w="1"/><text x="89.5805%" y="207.50"></text></g><g><title>databend-query`regex::compile::Compiler::c (1 samples, 0.10%)</title><rect x="89.3305%" y="181" width="0.1046%" height="15" fill="rgb(227,80,54)" fg:x="854" fg:w="1"/><text x="89.5805%" y="191.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_class (1 samples, 0.10%)</title><rect x="89.3305%" y="165" width="0.1046%" height="15" fill="rgb(254,48,11)" fg:x="854" fg:w="1"/><text x="89.5805%" y="175.50"></text></g><g><title>databend-query`regex::compile::CompileClass::compile (1 samples, 0.10%)</title><rect x="89.3305%" y="149" width="0.1046%" height="15" fill="rgb(235,193,26)" fg:x="854" fg:w="1"/><text x="89.5805%" y="159.50"></text></g><g><title>databend-query`regex::compile::CompileClass::c_utf8_seq (1 samples, 0.10%)</title><rect x="89.3305%" y="133" width="0.1046%" height="15" fill="rgb(229,99,21)" fg:x="854" fg:w="1"/><text x="89.5805%" y="143.50"></text></g><g><title>databend-query`regex::compile::CompileClass::c_utf8_seq_ (1 samples, 0.10%)</title><rect x="89.3305%" y="117" width="0.1046%" height="15" fill="rgb(211,140,41)" fg:x="854" fg:w="1"/><text x="89.5805%" y="127.50"></text></g><g><title>databend-query`&lt;&amp;regex_syntax::utf8::Utf8Sequence as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.10%)</title><rect x="89.3305%" y="101" width="0.1046%" height="15" fill="rgb(240,227,30)" fg:x="854" fg:w="1"/><text x="89.5805%" y="111.50"></text></g><g><title>databend-query`regex_syntax::utf8::Utf8Sequence::as_slice (1 samples, 0.10%)</title><rect x="89.3305%" y="85" width="0.1046%" height="15" fill="rgb(215,224,45)" fg:x="854" fg:w="1"/><text x="89.5805%" y="95.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_capture (2 samples, 0.21%)</title><rect x="89.3305%" y="373" width="0.2092%" height="15" fill="rgb(206,123,31)" fg:x="854" fg:w="2"/><text x="89.5805%" y="383.50"></text></g><g><title>databend-query`regex::compile::Compiler::c (2 samples, 0.21%)</title><rect x="89.3305%" y="357" width="0.2092%" height="15" fill="rgb(210,138,16)" fg:x="854" fg:w="2"/><text x="89.5805%" y="367.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_concat (2 samples, 0.21%)</title><rect x="89.3305%" y="341" width="0.2092%" height="15" fill="rgb(228,57,28)" fg:x="854" fg:w="2"/><text x="89.5805%" y="351.50"></text></g><g><title>databend-query`regex::compile::Compiler::c (2 samples, 0.21%)</title><rect x="89.3305%" y="325" width="0.2092%" height="15" fill="rgb(242,170,10)" fg:x="854" fg:w="2"/><text x="89.5805%" y="335.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_capture (2 samples, 0.21%)</title><rect x="89.3305%" y="309" width="0.2092%" height="15" fill="rgb(228,214,39)" fg:x="854" fg:w="2"/><text x="89.5805%" y="319.50"></text></g><g><title>databend-query`regex::compile::Compiler::c (2 samples, 0.21%)</title><rect x="89.3305%" y="293" width="0.2092%" height="15" fill="rgb(218,179,33)" fg:x="854" fg:w="2"/><text x="89.5805%" y="303.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_concat (2 samples, 0.21%)</title><rect x="89.3305%" y="277" width="0.2092%" height="15" fill="rgb(235,193,39)" fg:x="854" fg:w="2"/><text x="89.5805%" y="287.50"></text></g><g><title>databend-query`regex::compile::Compiler::fill (1 samples, 0.10%)</title><rect x="89.4351%" y="261" width="0.1046%" height="15" fill="rgb(219,221,36)" fg:x="855" fg:w="1"/><text x="89.6851%" y="271.50"></text></g><g><title>databend-query`regex::compile::MaybeInst::fill (1 samples, 0.10%)</title><rect x="89.4351%" y="245" width="0.1046%" height="15" fill="rgb(248,218,19)" fg:x="855" fg:w="1"/><text x="89.6851%" y="255.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;regex::compile::MaybeInst&gt; (1 samples, 0.10%)</title><rect x="89.4351%" y="229" width="0.1046%" height="15" fill="rgb(205,50,9)" fg:x="855" fg:w="1"/><text x="89.6851%" y="239.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;regex::compile::InstHole&gt; (1 samples, 0.10%)</title><rect x="89.4351%" y="213" width="0.1046%" height="15" fill="rgb(238,81,28)" fg:x="855" fg:w="1"/><text x="89.6851%" y="223.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(char,char)&gt;&gt; (1 samples, 0.10%)</title><rect x="89.4351%" y="197" width="0.1046%" height="15" fill="rgb(235,110,19)" fg:x="855" fg:w="1"/><text x="89.6851%" y="207.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(char,char)&gt;&gt; (1 samples, 0.10%)</title><rect x="89.4351%" y="181" width="0.1046%" height="15" fill="rgb(214,7,14)" fg:x="855" fg:w="1"/><text x="89.6851%" y="191.50"></text></g><g><title>databend-query`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="89.4351%" y="165" width="0.1046%" height="15" fill="rgb(211,77,3)" fg:x="855" fg:w="1"/><text x="89.6851%" y="175.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.10%)</title><rect x="89.4351%" y="149" width="0.1046%" height="15" fill="rgb(229,5,9)" fg:x="855" fg:w="1"/><text x="89.6851%" y="159.50"></text></g><g><title>databend-query`alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="89.4351%" y="133" width="0.1046%" height="15" fill="rgb(225,90,11)" fg:x="855" fg:w="1"/><text x="89.6851%" y="143.50"></text></g><g><title>databend-query`__rg_dealloc (1 samples, 0.10%)</title><rect x="89.4351%" y="117" width="0.1046%" height="15" fill="rgb(242,56,8)" fg:x="855" fg:w="1"/><text x="89.6851%" y="127.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.10%)</title><rect x="89.4351%" y="101" width="0.1046%" height="15" fill="rgb(249,212,39)" fg:x="855" fg:w="1"/><text x="89.6851%" y="111.50"></text></g><g><title>databend-query`_rjem_sdallocx (1 samples, 0.10%)</title><rect x="89.4351%" y="85" width="0.1046%" height="15" fill="rgb(236,90,9)" fg:x="855" fg:w="1"/><text x="89.6851%" y="95.50"></text></g><g><title>databend-query`regex::compile::Compiler::compile (3 samples, 0.31%)</title><rect x="89.3305%" y="405" width="0.3138%" height="15" fill="rgb(206,88,35)" fg:x="854" fg:w="3"/><text x="89.5805%" y="415.50"></text></g><g><title>databend-query`regex::compile::Compiler::compile_many (3 samples, 0.31%)</title><rect x="89.3305%" y="389" width="0.3138%" height="15" fill="rgb(205,126,30)" fg:x="854" fg:w="3"/><text x="89.5805%" y="399.50"></text></g><g><title>databend-query`regex::compile::Compiler::compile_finish (1 samples, 0.10%)</title><rect x="89.5397%" y="373" width="0.1046%" height="15" fill="rgb(230,176,12)" fg:x="856" fg:w="1"/><text x="89.7897%" y="383.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::collect (1 samples, 0.10%)</title><rect x="89.5397%" y="357" width="0.1046%" height="15" fill="rgb(243,19,9)" fg:x="856" fg:w="1"/><text x="89.7897%" y="367.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="89.5397%" y="341" width="0.1046%" height="15" fill="rgb(245,171,17)" fg:x="856" fg:w="1"/><text x="89.7897%" y="351.50"></text></g><g><title>databend-query`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="89.5397%" y="325" width="0.1046%" height="15" fill="rgb(227,52,21)" fg:x="856" fg:w="1"/><text x="89.7897%" y="335.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="89.5397%" y="309" width="0.1046%" height="15" fill="rgb(238,69,14)" fg:x="856" fg:w="1"/><text x="89.7897%" y="319.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="89.5397%" y="293" width="0.1046%" height="15" fill="rgb(241,156,39)" fg:x="856" fg:w="1"/><text x="89.7897%" y="303.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="89.5397%" y="277" width="0.1046%" height="15" fill="rgb(212,227,28)" fg:x="856" fg:w="1"/><text x="89.7897%" y="287.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="89.5397%" y="261" width="0.1046%" height="15" fill="rgb(209,118,27)" fg:x="856" fg:w="1"/><text x="89.7897%" y="271.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="89.5397%" y="245" width="0.1046%" height="15" fill="rgb(226,102,5)" fg:x="856" fg:w="1"/><text x="89.7897%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.10%)</title><rect x="89.5397%" y="229" width="0.1046%" height="15" fill="rgb(223,34,3)" fg:x="856" fg:w="1"/><text x="89.7897%" y="239.50"></text></g><g><title>databend-query`databend_query::servers::mysql::mysql_federated::MySQLFederated::check (34 samples, 3.56%)</title><rect x="86.1925%" y="501" width="3.5565%" height="15" fill="rgb(221,81,38)" fg:x="824" fg:w="34"/><text x="86.4425%" y="511.50">data..</text></g><g><title>databend-query`databend_query::servers::mysql::mysql_federated::MySQLFederated::federated_show_variables_check (5 samples, 0.52%)</title><rect x="89.2259%" y="485" width="0.5230%" height="15" fill="rgb(236,219,28)" fg:x="853" fg:w="5"/><text x="89.4759%" y="495.50"></text></g><g><title>databend-query`databend_query::servers::mysql::mysql_federated::MySQLFederated::block_match_rule (5 samples, 0.52%)</title><rect x="89.2259%" y="469" width="0.5230%" height="15" fill="rgb(213,200,14)" fg:x="853" fg:w="5"/><text x="89.4759%" y="479.50"></text></g><g><title>databend-query`regex::re_set::unicode::RegexSet::new (4 samples, 0.42%)</title><rect x="89.3305%" y="453" width="0.4184%" height="15" fill="rgb(240,33,19)" fg:x="854" fg:w="4"/><text x="89.5805%" y="463.50"></text></g><g><title>databend-query`regex::re_builder::set_unicode::RegexSetBuilder::build (4 samples, 0.42%)</title><rect x="89.3305%" y="437" width="0.4184%" height="15" fill="rgb(233,113,27)" fg:x="854" fg:w="4"/><text x="89.5805%" y="447.50"></text></g><g><title>databend-query`regex::exec::ExecBuilder::build (4 samples, 0.42%)</title><rect x="89.3305%" y="421" width="0.4184%" height="15" fill="rgb(220,221,18)" fg:x="854" fg:w="4"/><text x="89.5805%" y="431.50"></text></g><g><title>databend-query`regex::exec::ExecBuilder::parse (1 samples, 0.10%)</title><rect x="89.6444%" y="405" width="0.1046%" height="15" fill="rgb(238,92,8)" fg:x="857" fg:w="1"/><text x="89.8944%" y="415.50"></text></g><g><title>databend-query`regex_syntax::parser::Parser::parse (1 samples, 0.10%)</title><rect x="89.6444%" y="389" width="0.1046%" height="15" fill="rgb(222,164,16)" fg:x="857" fg:w="1"/><text x="89.8944%" y="399.50"></text></g><g><title>databend-query`regex_syntax::hir::translate::Translator::translate (1 samples, 0.10%)</title><rect x="89.6444%" y="373" width="0.1046%" height="15" fill="rgb(241,119,3)" fg:x="857" fg:w="1"/><text x="89.8944%" y="383.50"></text></g><g><title>databend-query`regex_syntax::ast::visitor::visit (1 samples, 0.10%)</title><rect x="89.6444%" y="357" width="0.1046%" height="15" fill="rgb(241,44,8)" fg:x="857" fg:w="1"/><text x="89.8944%" y="367.50"></text></g><g><title>databend-query`regex_syntax::ast::visitor::HeapVisitor::visit (1 samples, 0.10%)</title><rect x="89.6444%" y="341" width="0.1046%" height="15" fill="rgb(230,36,40)" fg:x="857" fg:w="1"/><text x="89.8944%" y="351.50"></text></g><g><title>databend-query`&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_post (1 samples, 0.10%)</title><rect x="89.6444%" y="325" width="0.1046%" height="15" fill="rgb(243,16,36)" fg:x="857" fg:w="1"/><text x="89.8944%" y="335.50"></text></g><g><title>databend-query`regex_syntax::hir::translate::TranslatorI::hir_literal (1 samples, 0.10%)</title><rect x="89.6444%" y="309" width="0.1046%" height="15" fill="rgb(231,4,26)" fg:x="857" fg:w="1"/><text x="89.8944%" y="319.50"></text></g><g><title>databend-query`regex_syntax::hir::translate::TranslatorI::hir_from_char_case_insensitive (1 samples, 0.10%)</title><rect x="89.6444%" y="293" width="0.1046%" height="15" fill="rgb(240,9,31)" fg:x="857" fg:w="1"/><text x="89.8944%" y="303.50"></text></g><g><title>databend-query`regex_syntax::hir::ClassUnicode::try_case_fold_simple (1 samples, 0.10%)</title><rect x="89.6444%" y="277" width="0.1046%" height="15" fill="rgb(207,173,15)" fg:x="857" fg:w="1"/><text x="89.8944%" y="287.50"></text></g><g><title>databend-query`regex_syntax::hir::interval::IntervalSet&lt;I&gt;::case_fold_simple (1 samples, 0.10%)</title><rect x="89.6444%" y="261" width="0.1046%" height="15" fill="rgb(224,192,53)" fg:x="857" fg:w="1"/><text x="89.8944%" y="271.50"></text></g><g><title>databend-query`regex_syntax::hir::interval::IntervalSet&lt;I&gt;::canonicalize (1 samples, 0.10%)</title><rect x="89.6444%" y="245" width="0.1046%" height="15" fill="rgb(223,67,28)" fg:x="857" fg:w="1"/><text x="89.8944%" y="255.50"></text></g><g><title>databend-query`alloc::slice::_&lt;impl [T]&gt;::sort (1 samples, 0.10%)</title><rect x="89.6444%" y="229" width="0.1046%" height="15" fill="rgb(211,20,47)" fg:x="857" fg:w="1"/><text x="89.8944%" y="239.50"></text></g><g><title>databend-query`alloc::slice::merge_sort (1 samples, 0.10%)</title><rect x="89.6444%" y="213" width="0.1046%" height="15" fill="rgb(240,228,2)" fg:x="857" fg:w="1"/><text x="89.8944%" y="223.50"></text></g><g><title>databend-query`databend_query::servers::mysql::mysql_interactive_worker::InteractiveWorkerBase&lt;W&gt;::federated_server_command_check (35 samples, 3.66%)</title><rect x="86.1925%" y="517" width="3.6611%" height="15" fill="rgb(248,151,12)" fg:x="824" fg:w="35"/><text x="86.4425%" y="527.50">data..</text></g><g><title>databend-query`databend_query::servers::mysql::mysql_federated::MySQLFederated::create (1 samples, 0.10%)</title><rect x="89.7490%" y="501" width="0.1046%" height="15" fill="rgb(244,8,39)" fg:x="858" fg:w="1"/><text x="89.9990%" y="511.50"></text></g><g><title>databend-query`&lt;str as alloc::string::ToString&gt;::to_string (1 samples, 0.10%)</title><rect x="89.7490%" y="485" width="0.1046%" height="15" fill="rgb(222,26,8)" fg:x="858" fg:w="1"/><text x="89.9990%" y="495.50"></text></g><g><title>databend-query`&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.10%)</title><rect x="89.7490%" y="469" width="0.1046%" height="15" fill="rgb(213,106,44)" fg:x="858" fg:w="1"/><text x="89.9990%" y="479.50"></text></g><g><title>databend-query`alloc::str::_&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.10%)</title><rect x="89.7490%" y="453" width="0.1046%" height="15" fill="rgb(214,129,20)" fg:x="858" fg:w="1"/><text x="89.9990%" y="463.50"></text></g><g><title>databend-query`alloc::slice::_&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.10%)</title><rect x="89.7490%" y="437" width="0.1046%" height="15" fill="rgb(212,32,13)" fg:x="858" fg:w="1"/><text x="89.9990%" y="447.50"></text></g><g><title>databend-query`alloc::slice::_&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="89.7490%" y="421" width="0.1046%" height="15" fill="rgb(208,168,33)" fg:x="858" fg:w="1"/><text x="89.9990%" y="431.50"></text></g><g><title>databend-query`alloc::slice::_&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="89.7490%" y="405" width="0.1046%" height="15" fill="rgb(231,207,8)" fg:x="858" fg:w="1"/><text x="89.9990%" y="415.50"></text></g><g><title>databend-query`alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="89.7490%" y="389" width="0.1046%" height="15" fill="rgb(235,219,23)" fg:x="858" fg:w="1"/><text x="89.9990%" y="399.50"></text></g><g><title>databend-query`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="89.7490%" y="373" width="0.1046%" height="15" fill="rgb(226,216,26)" fg:x="858" fg:w="1"/><text x="89.9990%" y="383.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="89.7490%" y="357" width="0.1046%" height="15" fill="rgb(239,137,16)" fg:x="858" fg:w="1"/><text x="89.9990%" y="367.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="89.7490%" y="341" width="0.1046%" height="15" fill="rgb(207,12,36)" fg:x="858" fg:w="1"/><text x="89.9990%" y="351.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="89.7490%" y="325" width="0.1046%" height="15" fill="rgb(210,214,24)" fg:x="858" fg:w="1"/><text x="89.9990%" y="335.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="89.7490%" y="309" width="0.1046%" height="15" fill="rgb(206,56,30)" fg:x="858" fg:w="1"/><text x="89.9990%" y="319.50"></text></g><g><title>databend-query`alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="89.7490%" y="293" width="0.1046%" height="15" fill="rgb(228,143,26)" fg:x="858" fg:w="1"/><text x="89.9990%" y="303.50"></text></g><g><title>databend-query`alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="89.7490%" y="277" width="0.1046%" height="15" fill="rgb(216,218,46)" fg:x="858" fg:w="1"/><text x="89.9990%" y="287.50"></text></g><g><title>databend-query`__rg_alloc (1 samples, 0.10%)</title><rect x="89.7490%" y="261" width="0.1046%" height="15" fill="rgb(206,6,19)" fg:x="858" fg:w="1"/><text x="89.9990%" y="271.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.10%)</title><rect x="89.7490%" y="245" width="0.1046%" height="15" fill="rgb(239,177,51)" fg:x="858" fg:w="1"/><text x="89.9990%" y="255.50"></text></g><g><title>databend-query`_rjem_mallocx (1 samples, 0.10%)</title><rect x="89.7490%" y="229" width="0.1046%" height="15" fill="rgb(216,55,25)" fg:x="858" fg:w="1"/><text x="89.9990%" y="239.50"></text></g><g><title>databend-query`&lt;metrics_exporter_prometheus::recorder::PrometheusRecorder as metrics::recorder::Recorder&gt;::register_histogram (1 samples, 0.10%)</title><rect x="89.8536%" y="501" width="0.1046%" height="15" fill="rgb(231,163,29)" fg:x="859" fg:w="1"/><text x="90.1036%" y="511.50"></text></g><g><title>databend-query`metrics_util::registry::Registry&lt;K,S&gt;::get_or_create_histogram (1 samples, 0.10%)</title><rect x="89.8536%" y="485" width="0.1046%" height="15" fill="rgb(232,149,50)" fg:x="859" fg:w="1"/><text x="90.1036%" y="495.50"></text></g><g><title>databend-query`hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::from_key_hashed_nocheck (1 samples, 0.10%)</title><rect x="89.8536%" y="469" width="0.1046%" height="15" fill="rgb(223,142,48)" fg:x="859" fg:w="1"/><text x="90.1036%" y="479.50"></text></g><g><title>databend-query`hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::from_hash (1 samples, 0.10%)</title><rect x="89.8536%" y="453" width="0.1046%" height="15" fill="rgb(245,83,23)" fg:x="859" fg:w="1"/><text x="90.1036%" y="463.50"></text></g><g><title>databend-query`hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::search (1 samples, 0.10%)</title><rect x="89.8536%" y="437" width="0.1046%" height="15" fill="rgb(224,63,2)" fg:x="859" fg:w="1"/><text x="90.1036%" y="447.50"></text></g><g><title>databend-query`hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (1 samples, 0.10%)</title><rect x="89.8536%" y="421" width="0.1046%" height="15" fill="rgb(218,65,53)" fg:x="859" fg:w="1"/><text x="90.1036%" y="431.50"></text></g><g><title>databend-query`hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (1 samples, 0.10%)</title><rect x="89.8536%" y="405" width="0.1046%" height="15" fill="rgb(221,84,29)" fg:x="859" fg:w="1"/><text x="90.1036%" y="415.50"></text></g><g><title>databend-query`hashbrown::raw::inner::Bucket&lt;T&gt;::as_ptr (1 samples, 0.10%)</title><rect x="89.8536%" y="389" width="0.1046%" height="15" fill="rgb(234,0,32)" fg:x="859" fg:w="1"/><text x="90.1036%" y="399.50"></text></g><g><title>databend-query`databend_query::servers::mysql::mysql_interactive_worker::InteractiveWorkerBase&lt;W&gt;::do_query::_{{closure}} (39 samples, 4.08%)</title><rect x="85.9833%" y="565" width="4.0795%" height="15" fill="rgb(206,20,16)" fg:x="822" fg:w="39"/><text x="86.2333%" y="575.50">data..</text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (39 samples, 4.08%)</title><rect x="85.9833%" y="549" width="4.0795%" height="15" fill="rgb(244,172,18)" fg:x="822" fg:w="39"/><text x="86.2333%" y="559.50">data..</text></g><g><title>databend-query`databend_query::servers::mysql::mysql_interactive_worker::InteractiveWorkerBase&lt;W&gt;::do_query::_{{closure}}::_{{closure}} (39 samples, 4.08%)</title><rect x="85.9833%" y="533" width="4.0795%" height="15" fill="rgb(254,133,1)" fg:x="822" fg:w="39"/><text x="86.2333%" y="543.50">data..</text></g><g><title>databend-query`databend_query::sql::sql_parser::DfParser::parse_sql (2 samples, 0.21%)</title><rect x="89.8536%" y="517" width="0.2092%" height="15" fill="rgb(222,206,41)" fg:x="859" fg:w="2"/><text x="90.1036%" y="527.50"></text></g><g><title>databend-query`databend_query::sql::sql_parser::DfParser::parse_sql_with_dialect (1 samples, 0.10%)</title><rect x="89.9582%" y="501" width="0.1046%" height="15" fill="rgb(212,3,42)" fg:x="860" fg:w="1"/><text x="90.2082%" y="511.50"></text></g><g><title>databend-query`databend_query::sql::sql_parser::DfParser::new_with_dialect (1 samples, 0.10%)</title><rect x="89.9582%" y="485" width="0.1046%" height="15" fill="rgb(241,11,4)" fg:x="860" fg:w="1"/><text x="90.2082%" y="495.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.10%)</title><rect x="89.9582%" y="469" width="0.1046%" height="15" fill="rgb(205,19,26)" fg:x="860" fg:w="1"/><text x="90.2082%" y="479.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (40 samples, 4.18%)</title><rect x="85.9833%" y="581" width="4.1841%" height="15" fill="rgb(210,179,32)" fg:x="822" fg:w="40"/><text x="86.2333%" y="591.50">datab..</text></g><g><title>databend-query`databend_query::sessions::session::Session::get_shared_query_context::_{{closure}} (1 samples, 0.10%)</title><rect x="90.0628%" y="565" width="0.1046%" height="15" fill="rgb(227,116,49)" fg:x="861" fg:w="1"/><text x="90.3128%" y="575.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="90.0628%" y="549" width="0.1046%" height="15" fill="rgb(211,146,6)" fg:x="861" fg:w="1"/><text x="90.3128%" y="559.50"></text></g><g><title>databend-query`databend_query::sessions::query_ctx_shared::QueryContextShared::try_create::_{{closure}} (1 samples, 0.10%)</title><rect x="90.0628%" y="533" width="0.1046%" height="15" fill="rgb(219,44,39)" fg:x="861" fg:w="1"/><text x="90.3128%" y="543.50"></text></g><g><title>databend-query`databend_query::users::role_cache_mgr::RoleCacheMgr::new (1 samples, 0.10%)</title><rect x="90.0628%" y="517" width="0.1046%" height="15" fill="rgb(234,128,11)" fg:x="861" fg:w="1"/><text x="90.3128%" y="527.50"></text></g><g><title>databend-query`databend_query::users::role_cache_mgr::RoleCacheMgr::background_polling (1 samples, 0.10%)</title><rect x="90.0628%" y="501" width="0.1046%" height="15" fill="rgb(220,183,53)" fg:x="861" fg:w="1"/><text x="90.3128%" y="511.50"></text></g><g><title>databend-query`tokio::task::spawn::spawn (1 samples, 0.10%)</title><rect x="90.0628%" y="485" width="0.1046%" height="15" fill="rgb(213,219,32)" fg:x="861" fg:w="1"/><text x="90.3128%" y="495.50"></text></g><g><title>databend-query`tokio::task::spawn::spawn_inner (1 samples, 0.10%)</title><rect x="90.0628%" y="469" width="0.1046%" height="15" fill="rgb(232,156,16)" fg:x="861" fg:w="1"/><text x="90.3128%" y="479.50"></text></g><g><title>databend-query`tokio::runtime::spawner::Spawner::spawn (1 samples, 0.10%)</title><rect x="90.0628%" y="453" width="0.1046%" height="15" fill="rgb(246,135,34)" fg:x="861" fg:w="1"/><text x="90.3128%" y="463.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::Spawner::spawn (1 samples, 0.10%)</title><rect x="90.0628%" y="437" width="0.1046%" height="15" fill="rgb(241,99,0)" fg:x="861" fg:w="1"/><text x="90.3128%" y="447.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Shared::bind_new_task (1 samples, 0.10%)</title><rect x="90.0628%" y="421" width="0.1046%" height="15" fill="rgb(222,103,45)" fg:x="861" fg:w="1"/><text x="90.3128%" y="431.50"></text></g><g><title>databend-query`tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (1 samples, 0.10%)</title><rect x="90.0628%" y="405" width="0.1046%" height="15" fill="rgb(212,57,4)" fg:x="861" fg:w="1"/><text x="90.3128%" y="415.50"></text></g><g><title>databend-query`&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.10%)</title><rect x="90.0628%" y="389" width="0.1046%" height="15" fill="rgb(215,68,47)" fg:x="861" fg:w="1"/><text x="90.3128%" y="399.50"></text></g><g><title>databend-query`common_datavalues::columns::column::Column::get_checked (1 samples, 0.10%)</title><rect x="90.1674%" y="549" width="0.1046%" height="15" fill="rgb(230,84,2)" fg:x="862" fg:w="1"/><text x="90.4174%" y="559.50"></text></g><g><title>databend-query`&lt;common_datavalues::columns::primitive::PrimitiveColumn&lt;T&gt; as common_datavalues::columns::column::Column&gt;::get (1 samples, 0.10%)</title><rect x="90.1674%" y="533" width="0.1046%" height="15" fill="rgb(220,102,14)" fg:x="862" fg:w="1"/><text x="90.4174%" y="543.50"></text></g><g><title>databend-query`common_datavalues::columns::primitive::PrimitiveColumn&lt;T&gt;::value_unchecked (1 samples, 0.10%)</title><rect x="90.1674%" y="517" width="0.1046%" height="15" fill="rgb(240,10,32)" fg:x="862" fg:w="1"/><text x="90.4174%" y="527.50"></text></g><g><title>databend-query`&lt;arrow2::buffer::immutable::Buffer&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="90.1674%" y="501" width="0.1046%" height="15" fill="rgb(215,47,27)" fg:x="862" fg:w="1"/><text x="90.4174%" y="511.50"></text></g><g><title>databend-query`arrow2::buffer::immutable::Buffer&lt;T&gt;::as_slice (1 samples, 0.10%)</title><rect x="90.1674%" y="485" width="0.1046%" height="15" fill="rgb(233,188,43)" fg:x="862" fg:w="1"/><text x="90.4174%" y="495.50"></text></g><g><title>databend-query`&lt;arrow2::buffer::bytes::Bytes&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="90.1674%" y="469" width="0.1046%" height="15" fill="rgb(253,190,1)" fg:x="862" fg:w="1"/><text x="90.4174%" y="479.50"></text></g><g><title>databend-query`&lt;arrow2::buffer::foreign::MaybeForeign&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="90.1674%" y="453" width="0.1046%" height="15" fill="rgb(206,114,52)" fg:x="862" fg:w="1"/><text x="90.4174%" y="463.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="90.1674%" y="437" width="0.1046%" height="15" fill="rgb(233,120,37)" fg:x="862" fg:w="1"/><text x="90.4174%" y="447.50"></text></g><g><title>databend-query`core::slice::raw::from_raw_parts (1 samples, 0.10%)</title><rect x="90.1674%" y="421" width="0.1046%" height="15" fill="rgb(214,52,39)" fg:x="862" fg:w="1"/><text x="90.4174%" y="431.50"></text></g><g><title>databend-query`core::ptr::metadata::from_raw_parts (1 samples, 0.10%)</title><rect x="90.1674%" y="405" width="0.1046%" height="15" fill="rgb(223,80,29)" fg:x="862" fg:w="1"/><text x="90.4174%" y="415.50"></text></g><g><title>databend-query`common_datavalues::types::data_type::remove_nullable (1 samples, 0.10%)</title><rect x="90.2720%" y="549" width="0.1046%" height="15" fill="rgb(230,101,40)" fg:x="863" fg:w="1"/><text x="90.5220%" y="559.50"></text></g><g><title>databend-query`&lt;common_datavalues::types::data_type::DataTypeImpl as common_datavalues::types::data_type::DataType&gt;::data_type_id (1 samples, 0.10%)</title><rect x="90.2720%" y="533" width="0.1046%" height="15" fill="rgb(219,211,8)" fg:x="863" fg:w="1"/><text x="90.5220%" y="543.50"></text></g><g><title>databend-query`core::option::Option&lt;T&gt;::as_mut (1 samples, 0.10%)</title><rect x="90.3766%" y="549" width="0.1046%" height="15" fill="rgb(252,126,28)" fg:x="864" fg:w="1"/><text x="90.6266%" y="559.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.10%)</title><rect x="90.4812%" y="341" width="0.1046%" height="15" fill="rgb(215,56,38)" fg:x="865" fg:w="1"/><text x="90.7312%" y="351.50"></text></g><g><title>databend-query`alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="90.4812%" y="325" width="0.1046%" height="15" fill="rgb(249,55,44)" fg:x="865" fg:w="1"/><text x="90.7312%" y="335.50"></text></g><g><title>databend-query`core::alloc::layout::Layout::align (1 samples, 0.10%)</title><rect x="90.4812%" y="309" width="0.1046%" height="15" fill="rgb(220,221,32)" fg:x="865" fg:w="1"/><text x="90.7312%" y="319.50"></text></g><g><title>databend-query`core::num::nonzero::NonZeroUsize::new_unchecked (1 samples, 0.10%)</title><rect x="90.4812%" y="293" width="0.1046%" height="15" fill="rgb(212,216,41)" fg:x="865" fg:w="1"/><text x="90.7312%" y="303.50"></text></g><g><title>databend-query`core::mem::drop (2 samples, 0.21%)</title><rect x="90.4812%" y="389" width="0.2092%" height="15" fill="rgb(228,213,43)" fg:x="865" fg:w="2"/><text x="90.7312%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;dyn common_datavalues::columns::column::Column&gt;&gt; (2 samples, 0.21%)</title><rect x="90.4812%" y="373" width="0.2092%" height="15" fill="rgb(211,31,26)" fg:x="865" fg:w="2"/><text x="90.7312%" y="383.50"></text></g><g><title>databend-query`&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.21%)</title><rect x="90.4812%" y="357" width="0.2092%" height="15" fill="rgb(229,202,19)" fg:x="865" fg:w="2"/><text x="90.7312%" y="367.50"></text></g><g><title>databend-query`core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.10%)</title><rect x="90.5858%" y="341" width="0.1046%" height="15" fill="rgb(229,105,46)" fg:x="866" fg:w="1"/><text x="90.8358%" y="351.50"></text></g><g><title>databend-query`core::mem::drop (2 samples, 0.21%)</title><rect x="90.6904%" y="293" width="0.2092%" height="15" fill="rgb(235,108,1)" fg:x="867" fg:w="2"/><text x="90.9404%" y="303.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;arrow2::buffer::bytes::Bytes&lt;u64&gt;&gt;&gt; (2 samples, 0.21%)</title><rect x="90.6904%" y="277" width="0.2092%" height="15" fill="rgb(245,111,35)" fg:x="867" fg:w="2"/><text x="90.9404%" y="287.50"></text></g><g><title>databend-query`&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.21%)</title><rect x="90.6904%" y="261" width="0.2092%" height="15" fill="rgb(219,185,31)" fg:x="867" fg:w="2"/><text x="90.9404%" y="271.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.21%)</title><rect x="90.6904%" y="245" width="0.2092%" height="15" fill="rgb(214,4,43)" fg:x="867" fg:w="2"/><text x="90.9404%" y="255.50"></text></g><g><title>databend-query`alloc::alloc::dealloc (2 samples, 0.21%)</title><rect x="90.6904%" y="229" width="0.2092%" height="15" fill="rgb(235,227,40)" fg:x="867" fg:w="2"/><text x="90.9404%" y="239.50"></text></g><g><title>databend-query`__rg_dealloc (2 samples, 0.21%)</title><rect x="90.6904%" y="213" width="0.2092%" height="15" fill="rgb(230,88,30)" fg:x="867" fg:w="2"/><text x="90.9404%" y="223.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::dealloc (2 samples, 0.21%)</title><rect x="90.6904%" y="197" width="0.2092%" height="15" fill="rgb(216,217,1)" fg:x="867" fg:w="2"/><text x="90.9404%" y="207.50"></text></g><g><title>databend-query`_rjem_sdallocx (1 samples, 0.10%)</title><rect x="90.7950%" y="181" width="0.1046%" height="15" fill="rgb(248,139,50)" fg:x="868" fg:w="1"/><text x="91.0450%" y="191.50"></text></g><g><title>databend-query`_rjem_je_sdallocx_default (1 samples, 0.10%)</title><rect x="90.7950%" y="165" width="0.1046%" height="15" fill="rgb(233,1,21)" fg:x="868" fg:w="1"/><text x="91.0450%" y="175.50"></text></g><g><title>databend-query`_rjem_je_tcache_bin_flush_small (1 samples, 0.10%)</title><rect x="90.7950%" y="149" width="0.1046%" height="15" fill="rgb(215,183,12)" fg:x="868" fg:w="1"/><text x="91.0450%" y="159.50"></text></g><g><title>databend-query`core::mem::take (1 samples, 0.10%)</title><rect x="90.8996%" y="245" width="0.1046%" height="15" fill="rgb(229,104,42)" fg:x="869" fg:w="1"/><text x="91.1496%" y="255.50"></text></g><g><title>databend-query`core::ptr::read (1 samples, 0.10%)</title><rect x="90.8996%" y="229" width="0.1046%" height="15" fill="rgb(243,34,48)" fg:x="869" fg:w="1"/><text x="91.1496%" y="239.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.63%)</title><rect x="90.4812%" y="469" width="0.6276%" height="15" fill="rgb(239,11,44)" fg:x="865" fg:w="6"/><text x="90.7312%" y="479.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;dyn common_datavalues::columns::column::Column&gt;]&gt; (6 samples, 0.63%)</title><rect x="90.4812%" y="453" width="0.6276%" height="15" fill="rgb(231,98,35)" fg:x="865" fg:w="6"/><text x="90.7312%" y="463.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn common_datavalues::columns::column::Column&gt;&gt; (6 samples, 0.63%)</title><rect x="90.4812%" y="437" width="0.6276%" height="15" fill="rgb(233,28,25)" fg:x="865" fg:w="6"/><text x="90.7312%" y="447.50"></text></g><g><title>databend-query`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.63%)</title><rect x="90.4812%" y="421" width="0.6276%" height="15" fill="rgb(234,123,11)" fg:x="865" fg:w="6"/><text x="90.7312%" y="431.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (6 samples, 0.63%)</title><rect x="90.4812%" y="405" width="0.6276%" height="15" fill="rgb(220,69,3)" fg:x="865" fg:w="6"/><text x="90.7312%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;dyn common_datavalues::columns::column::Column&gt; (4 samples, 0.42%)</title><rect x="90.6904%" y="389" width="0.4184%" height="15" fill="rgb(214,64,36)" fg:x="867" fg:w="4"/><text x="90.9404%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_datavalues::columns::primitive::PrimitiveColumn&lt;u64&gt;&gt; (4 samples, 0.42%)</title><rect x="90.6904%" y="373" width="0.4184%" height="15" fill="rgb(211,138,32)" fg:x="867" fg:w="4"/><text x="90.9404%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;arrow2::buffer::immutable::Buffer&lt;u64&gt;&gt; (4 samples, 0.42%)</title><rect x="90.6904%" y="357" width="0.4184%" height="15" fill="rgb(213,118,47)" fg:x="867" fg:w="4"/><text x="90.9404%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;arrow2::buffer::bytes::Bytes&lt;u64&gt;&gt;&gt; (4 samples, 0.42%)</title><rect x="90.6904%" y="341" width="0.4184%" height="15" fill="rgb(243,124,49)" fg:x="867" fg:w="4"/><text x="90.9404%" y="351.50"></text></g><g><title>databend-query`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.42%)</title><rect x="90.6904%" y="325" width="0.4184%" height="15" fill="rgb(221,30,28)" fg:x="867" fg:w="4"/><text x="90.9404%" y="335.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (4 samples, 0.42%)</title><rect x="90.6904%" y="309" width="0.4184%" height="15" fill="rgb(246,37,13)" fg:x="867" fg:w="4"/><text x="90.9404%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;arrow2::buffer::bytes::Bytes&lt;u64&gt;&gt; (2 samples, 0.21%)</title><rect x="90.8996%" y="293" width="0.2092%" height="15" fill="rgb(249,66,14)" fg:x="869" fg:w="2"/><text x="91.1496%" y="303.50"></text></g><g><title>databend-query`&lt;arrow2::buffer::bytes::Bytes&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.21%)</title><rect x="90.8996%" y="277" width="0.2092%" height="15" fill="rgb(213,166,5)" fg:x="869" fg:w="2"/><text x="91.1496%" y="287.50"></text></g><g><title>databend-query`arrow2::buffer::foreign::MaybeForeign&lt;T&gt;::drop_local (2 samples, 0.21%)</title><rect x="90.8996%" y="261" width="0.2092%" height="15" fill="rgb(221,66,24)" fg:x="869" fg:w="2"/><text x="91.1496%" y="271.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u64&gt;&gt; (1 samples, 0.10%)</title><rect x="91.0042%" y="245" width="0.1046%" height="15" fill="rgb(210,132,17)" fg:x="870" fg:w="1"/><text x="91.2542%" y="255.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u64&gt;&gt; (1 samples, 0.10%)</title><rect x="91.0042%" y="229" width="0.1046%" height="15" fill="rgb(243,202,5)" fg:x="870" fg:w="1"/><text x="91.2542%" y="239.50"></text></g><g><title>databend-query`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="91.0042%" y="213" width="0.1046%" height="15" fill="rgb(233,70,48)" fg:x="870" fg:w="1"/><text x="91.2542%" y="223.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.10%)</title><rect x="91.0042%" y="197" width="0.1046%" height="15" fill="rgb(238,41,26)" fg:x="870" fg:w="1"/><text x="91.2542%" y="207.50"></text></g><g><title>databend-query`alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="91.0042%" y="181" width="0.1046%" height="15" fill="rgb(241,19,31)" fg:x="870" fg:w="1"/><text x="91.2542%" y="191.50"></text></g><g><title>databend-query`__rg_dealloc (1 samples, 0.10%)</title><rect x="91.0042%" y="165" width="0.1046%" height="15" fill="rgb(214,76,10)" fg:x="870" fg:w="1"/><text x="91.2542%" y="175.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.10%)</title><rect x="91.0042%" y="149" width="0.1046%" height="15" fill="rgb(254,202,22)" fg:x="870" fg:w="1"/><text x="91.2542%" y="159.50"></text></g><g><title>databend-query`_rjem_sdallocx (1 samples, 0.10%)</title><rect x="91.0042%" y="133" width="0.1046%" height="15" fill="rgb(214,72,24)" fg:x="870" fg:w="1"/><text x="91.2542%" y="143.50"></text></g><g><title>databend-query`_rjem_je_sdallocx_default (1 samples, 0.10%)</title><rect x="91.0042%" y="117" width="0.1046%" height="15" fill="rgb(221,92,46)" fg:x="870" fg:w="1"/><text x="91.2542%" y="127.50"></text></g><g><title>databend-query`_rjem_je_tcache_bin_flush_small (1 samples, 0.10%)</title><rect x="91.0042%" y="101" width="0.1046%" height="15" fill="rgb(246,13,50)" fg:x="870" fg:w="1"/><text x="91.2542%" y="111.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;common_datablocks::data_block::DataBlock&gt;&gt; (8 samples, 0.84%)</title><rect x="90.4812%" y="549" width="0.8368%" height="15" fill="rgb(240,165,38)" fg:x="865" fg:w="8"/><text x="90.7312%" y="559.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.84%)</title><rect x="90.4812%" y="533" width="0.8368%" height="15" fill="rgb(241,24,51)" fg:x="865" fg:w="8"/><text x="90.7312%" y="543.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;[common_datablocks::data_block::DataBlock]&gt; (8 samples, 0.84%)</title><rect x="90.4812%" y="517" width="0.8368%" height="15" fill="rgb(227,51,44)" fg:x="865" fg:w="8"/><text x="90.7312%" y="527.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_datablocks::data_block::DataBlock&gt; (8 samples, 0.84%)</title><rect x="90.4812%" y="501" width="0.8368%" height="15" fill="rgb(231,121,3)" fg:x="865" fg:w="8"/><text x="90.7312%" y="511.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;dyn common_datavalues::columns::column::Column&gt;&gt;&gt; (8 samples, 0.84%)</title><rect x="90.4812%" y="485" width="0.8368%" height="15" fill="rgb(245,3,41)" fg:x="865" fg:w="8"/><text x="90.7312%" y="495.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::sync::Arc&lt;dyn common_datavalues::columns::column::Column&gt;&gt;&gt; (2 samples, 0.21%)</title><rect x="91.1088%" y="469" width="0.2092%" height="15" fill="rgb(214,13,26)" fg:x="871" fg:w="2"/><text x="91.3588%" y="479.50"></text></g><g><title>databend-query`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.21%)</title><rect x="91.1088%" y="453" width="0.2092%" height="15" fill="rgb(252,75,11)" fg:x="871" fg:w="2"/><text x="91.3588%" y="463.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.21%)</title><rect x="91.1088%" y="437" width="0.2092%" height="15" fill="rgb(218,226,17)" fg:x="871" fg:w="2"/><text x="91.3588%" y="447.50"></text></g><g><title>databend-query`alloc::alloc::dealloc (2 samples, 0.21%)</title><rect x="91.1088%" y="421" width="0.2092%" height="15" fill="rgb(248,89,38)" fg:x="871" fg:w="2"/><text x="91.3588%" y="431.50"></text></g><g><title>databend-query`__rg_dealloc (2 samples, 0.21%)</title><rect x="91.1088%" y="405" width="0.2092%" height="15" fill="rgb(237,73,46)" fg:x="871" fg:w="2"/><text x="91.3588%" y="415.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::dealloc (2 samples, 0.21%)</title><rect x="91.1088%" y="389" width="0.2092%" height="15" fill="rgb(242,78,33)" fg:x="871" fg:w="2"/><text x="91.3588%" y="399.50"></text></g><g><title>databend-query`_rjem_sdallocx (2 samples, 0.21%)</title><rect x="91.1088%" y="373" width="0.2092%" height="15" fill="rgb(235,60,3)" fg:x="871" fg:w="2"/><text x="91.3588%" y="383.50"></text></g><g><title>databend-query`_rjem_je_sdallocx_default (1 samples, 0.10%)</title><rect x="91.2134%" y="357" width="0.1046%" height="15" fill="rgb(216,172,19)" fg:x="872" fg:w="1"/><text x="91.4634%" y="367.50"></text></g><g><title>databend-query`_rjem_je_tcache_bin_flush_small (1 samples, 0.10%)</title><rect x="91.2134%" y="341" width="0.1046%" height="15" fill="rgb(227,6,42)" fg:x="872" fg:w="1"/><text x="91.4634%" y="351.50"></text></g><g><title>databend-query`_rjem_je_arena_dalloc_bin_junked_locked (1 samples, 0.10%)</title><rect x="91.2134%" y="325" width="0.1046%" height="15" fill="rgb(223,207,42)" fg:x="872" fg:w="1"/><text x="91.4634%" y="335.50"></text></g><g><title>databend-query`databend_query::servers::mysql::writers::query_result_writer::DFQueryResultWriter&lt;W&gt;::ok::convert_schema (1 samples, 0.10%)</title><rect x="91.3180%" y="549" width="0.1046%" height="15" fill="rgb(246,138,30)" fg:x="873" fg:w="1"/><text x="91.5680%" y="559.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::collect (1 samples, 0.10%)</title><rect x="91.3180%" y="533" width="0.1046%" height="15" fill="rgb(251,199,47)" fg:x="873" fg:w="1"/><text x="91.5680%" y="543.50"></text></g><g><title>databend-query`&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="91.3180%" y="517" width="0.1046%" height="15" fill="rgb(228,218,44)" fg:x="873" fg:w="1"/><text x="91.5680%" y="527.50"></text></g><g><title>databend-query`core::iter::adapters::try_process (1 samples, 0.10%)</title><rect x="91.3180%" y="501" width="0.1046%" height="15" fill="rgb(220,68,6)" fg:x="873" fg:w="1"/><text x="91.5680%" y="511.50"></text></g><g><title>databend-query`&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::_{{closure}} (1 samples, 0.10%)</title><rect x="91.3180%" y="485" width="0.1046%" height="15" fill="rgb(240,60,26)" fg:x="873" fg:w="1"/><text x="91.5680%" y="495.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::collect (1 samples, 0.10%)</title><rect x="91.3180%" y="469" width="0.1046%" height="15" fill="rgb(211,200,19)" fg:x="873" fg:w="1"/><text x="91.5680%" y="479.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="91.3180%" y="453" width="0.1046%" height="15" fill="rgb(242,145,30)" fg:x="873" fg:w="1"/><text x="91.5680%" y="463.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="91.3180%" y="437" width="0.1046%" height="15" fill="rgb(225,64,13)" fg:x="873" fg:w="1"/><text x="91.5680%" y="447.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="91.3180%" y="421" width="0.1046%" height="15" fill="rgb(218,103,35)" fg:x="873" fg:w="1"/><text x="91.5680%" y="431.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="91.3180%" y="405" width="0.1046%" height="15" fill="rgb(216,93,46)" fg:x="873" fg:w="1"/><text x="91.5680%" y="415.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.10%)</title><rect x="91.3180%" y="389" width="0.1046%" height="15" fill="rgb(225,159,27)" fg:x="873" fg:w="1"/><text x="91.5680%" y="399.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.10%)</title><rect x="91.3180%" y="373" width="0.1046%" height="15" fill="rgb(225,204,11)" fg:x="873" fg:w="1"/><text x="91.5680%" y="383.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.10%)</title><rect x="91.3180%" y="357" width="0.1046%" height="15" fill="rgb(205,56,4)" fg:x="873" fg:w="1"/><text x="91.5680%" y="367.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="91.3180%" y="341" width="0.1046%" height="15" fill="rgb(206,6,35)" fg:x="873" fg:w="1"/><text x="91.5680%" y="351.50"></text></g><g><title>databend-query`core::iter::adapters::map::map_try_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="91.3180%" y="325" width="0.1046%" height="15" fill="rgb(247,73,52)" fg:x="873" fg:w="1"/><text x="91.5680%" y="335.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="91.3180%" y="309" width="0.1046%" height="15" fill="rgb(246,97,4)" fg:x="873" fg:w="1"/><text x="91.5680%" y="319.50"></text></g><g><title>databend-query`&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::FromResidual&gt;::from_residual (1 samples, 0.10%)</title><rect x="91.3180%" y="293" width="0.1046%" height="15" fill="rgb(212,37,15)" fg:x="873" fg:w="1"/><text x="91.5680%" y="303.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.10%)</title><rect x="91.5272%" y="501" width="0.1046%" height="15" fill="rgb(208,130,40)" fg:x="875" fg:w="1"/><text x="91.7772%" y="511.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.10%)</title><rect x="91.5272%" y="485" width="0.1046%" height="15" fill="rgb(236,55,29)" fg:x="875" fg:w="1"/><text x="91.7772%" y="495.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.10%)</title><rect x="91.5272%" y="469" width="0.1046%" height="15" fill="rgb(209,156,45)" fg:x="875" fg:w="1"/><text x="91.7772%" y="479.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.10%)</title><rect x="91.5272%" y="453" width="0.1046%" height="15" fill="rgb(249,107,4)" fg:x="875" fg:w="1"/><text x="91.7772%" y="463.50"></text></g><g><title>databend-query`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.10%)</title><rect x="91.5272%" y="437" width="0.1046%" height="15" fill="rgb(227,7,13)" fg:x="875" fg:w="1"/><text x="91.7772%" y="447.50"></text></g><g><title>databend-query`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.10%)</title><rect x="91.6318%" y="501" width="0.1046%" height="15" fill="rgb(250,129,14)" fg:x="876" fg:w="1"/><text x="91.8818%" y="511.50"></text></g><g><title>databend-query`opensrv_mysql::resultset::RowWriter&lt;W&gt;::end_row (4 samples, 0.42%)</title><rect x="91.4226%" y="549" width="0.4184%" height="15" fill="rgb(229,92,13)" fg:x="874" fg:w="4"/><text x="91.6726%" y="559.50"></text></g><g><title>databend-query`opensrv_mysql::packet::PacketWriter&lt;W&gt;::end_packet (4 samples, 0.42%)</title><rect x="91.4226%" y="533" width="0.4184%" height="15" fill="rgb(245,98,39)" fg:x="874" fg:w="4"/><text x="91.6726%" y="543.50"></text></g><g><title>databend-query`opensrv_mysql::packet::PacketWriter&lt;W&gt;::maybe_end_packet (4 samples, 0.42%)</title><rect x="91.4226%" y="517" width="0.4184%" height="15" fill="rgb(234,135,48)" fg:x="874" fg:w="4"/><text x="91.6726%" y="527.50"></text></g><g><title>databend-query`std::io::Write::write_all (1 samples, 0.10%)</title><rect x="91.7364%" y="501" width="0.1046%" height="15" fill="rgb(230,98,28)" fg:x="877" fg:w="1"/><text x="91.9864%" y="511.50"></text></g><g><title>databend-query`&lt;std::io::cursor::Cursor&lt;alloc::vec::Vec&lt;u8,A&gt;&gt; as std::io::Write&gt;::write (1 samples, 0.10%)</title><rect x="91.7364%" y="485" width="0.1046%" height="15" fill="rgb(223,121,0)" fg:x="877" fg:w="1"/><text x="91.9864%" y="495.50"></text></g><g><title>databend-query`std::io::cursor::vec_write (1 samples, 0.10%)</title><rect x="91.7364%" y="469" width="0.1046%" height="15" fill="rgb(234,173,33)" fg:x="877" fg:w="1"/><text x="91.9864%" y="479.50"></text></g><g><title>databend-query`core::slice::_&lt;impl [T]&gt;::split_at (1 samples, 0.10%)</title><rect x="91.7364%" y="453" width="0.1046%" height="15" fill="rgb(245,47,8)" fg:x="877" fg:w="1"/><text x="91.9864%" y="463.50"></text></g><g><title>databend-query`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (1 samples, 0.10%)</title><rect x="91.7364%" y="437" width="0.1046%" height="15" fill="rgb(205,17,20)" fg:x="877" fg:w="1"/><text x="91.9864%" y="447.50"></text></g><g><title>databend-query`core::slice::_&lt;impl [T]&gt;::get_unchecked (1 samples, 0.10%)</title><rect x="91.7364%" y="421" width="0.1046%" height="15" fill="rgb(232,151,16)" fg:x="877" fg:w="1"/><text x="91.9864%" y="431.50"></text></g><g><title>databend-query`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.10%)</title><rect x="91.7364%" y="405" width="0.1046%" height="15" fill="rgb(208,30,32)" fg:x="877" fg:w="1"/><text x="91.9864%" y="415.50"></text></g><g><title>databend-query`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.10%)</title><rect x="91.7364%" y="389" width="0.1046%" height="15" fill="rgb(254,26,3)" fg:x="877" fg:w="1"/><text x="91.9864%" y="399.50"></text></g><g><title>databend-query`core::ptr::metadata::from_raw_parts (1 samples, 0.10%)</title><rect x="91.7364%" y="373" width="0.1046%" height="15" fill="rgb(240,177,30)" fg:x="877" fg:w="1"/><text x="91.9864%" y="383.50"></text></g><g><title>databend-query`alloc::string::String::as_bytes (1 samples, 0.10%)</title><rect x="91.9456%" y="517" width="0.1046%" height="15" fill="rgb(248,76,44)" fg:x="879" fg:w="1"/><text x="92.1956%" y="527.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="91.9456%" y="501" width="0.1046%" height="15" fill="rgb(241,186,54)" fg:x="879" fg:w="1"/><text x="92.1956%" y="511.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.10%)</title><rect x="91.9456%" y="485" width="0.1046%" height="15" fill="rgb(249,171,29)" fg:x="879" fg:w="1"/><text x="92.1956%" y="495.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.31%)</title><rect x="92.0502%" y="517" width="0.3138%" height="15" fill="rgb(237,151,44)" fg:x="880" fg:w="3"/><text x="92.3002%" y="527.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.31%)</title><rect x="92.0502%" y="501" width="0.3138%" height="15" fill="rgb(228,174,30)" fg:x="880" fg:w="3"/><text x="92.3002%" y="511.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.31%)</title><rect x="92.0502%" y="485" width="0.3138%" height="15" fill="rgb(252,14,37)" fg:x="880" fg:w="3"/><text x="92.3002%" y="495.50"></text></g><g><title>databend-query`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.21%)</title><rect x="92.1548%" y="469" width="0.2092%" height="15" fill="rgb(207,111,40)" fg:x="881" fg:w="2"/><text x="92.4048%" y="479.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.21%)</title><rect x="92.1548%" y="453" width="0.2092%" height="15" fill="rgb(248,171,54)" fg:x="881" fg:w="2"/><text x="92.4048%" y="463.50"></text></g><g><title>databend-query`alloc::alloc::dealloc (2 samples, 0.21%)</title><rect x="92.1548%" y="437" width="0.2092%" height="15" fill="rgb(211,127,2)" fg:x="881" fg:w="2"/><text x="92.4048%" y="447.50"></text></g><g><title>databend-query`__rg_dealloc (2 samples, 0.21%)</title><rect x="92.1548%" y="421" width="0.2092%" height="15" fill="rgb(236,87,47)" fg:x="881" fg:w="2"/><text x="92.4048%" y="431.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::dealloc (2 samples, 0.21%)</title><rect x="92.1548%" y="405" width="0.2092%" height="15" fill="rgb(223,190,45)" fg:x="881" fg:w="2"/><text x="92.4048%" y="415.50"></text></g><g><title>databend-query`_rjem_sdallocx (2 samples, 0.21%)</title><rect x="92.1548%" y="389" width="0.2092%" height="15" fill="rgb(215,5,16)" fg:x="881" fg:w="2"/><text x="92.4048%" y="399.50"></text></g><g><title>databend-query`_rjem_je_sdallocx_default (1 samples, 0.10%)</title><rect x="92.2594%" y="373" width="0.1046%" height="15" fill="rgb(252,82,33)" fg:x="882" fg:w="1"/><text x="92.5094%" y="383.50"></text></g><g><title>databend-query`_rjem_je_tcache_event_hard (1 samples, 0.10%)</title><rect x="92.2594%" y="357" width="0.1046%" height="15" fill="rgb(247,213,44)" fg:x="882" fg:w="1"/><text x="92.5094%" y="367.50"></text></g><g><title>databend-query`_rjem_je_tcache_bin_flush_small (1 samples, 0.10%)</title><rect x="92.2594%" y="341" width="0.1046%" height="15" fill="rgb(205,196,44)" fg:x="882" fg:w="1"/><text x="92.5094%" y="351.50"></text></g><g><title>databend-query`_rjem_je_arena_dalloc_bin_junked_locked (1 samples, 0.10%)</title><rect x="92.2594%" y="325" width="0.1046%" height="15" fill="rgb(237,96,54)" fg:x="882" fg:w="1"/><text x="92.5094%" y="335.50"></text></g><g><title>databend-query`arena_dalloc_bin_locked_impl (1 samples, 0.10%)</title><rect x="92.2594%" y="309" width="0.1046%" height="15" fill="rgb(230,113,34)" fg:x="882" fg:w="1"/><text x="92.5094%" y="319.50"></text></g><g><title>databend-query`arena_dalloc_bin_slab (1 samples, 0.10%)</title><rect x="92.2594%" y="293" width="0.1046%" height="15" fill="rgb(221,224,12)" fg:x="882" fg:w="1"/><text x="92.5094%" y="303.50"></text></g><g><title>databend-query`arena_slab_dalloc (1 samples, 0.10%)</title><rect x="92.2594%" y="277" width="0.1046%" height="15" fill="rgb(219,112,44)" fg:x="882" fg:w="1"/><text x="92.5094%" y="287.50"></text></g><g><title>databend-query`_rjem_je_arena_extents_dirty_dalloc (1 samples, 0.10%)</title><rect x="92.2594%" y="261" width="0.1046%" height="15" fill="rgb(210,31,13)" fg:x="882" fg:w="1"/><text x="92.5094%" y="271.50"></text></g><g><title>databend-query`_rjem_je_extents_dalloc (1 samples, 0.10%)</title><rect x="92.2594%" y="245" width="0.1046%" height="15" fill="rgb(230,25,16)" fg:x="882" fg:w="1"/><text x="92.5094%" y="255.50"></text></g><g><title>databend-query`extent_record (1 samples, 0.10%)</title><rect x="92.2594%" y="229" width="0.1046%" height="15" fill="rgb(246,108,53)" fg:x="882" fg:w="1"/><text x="92.5094%" y="239.50"></text></g><g><title>databend-query`extent_try_coalesce_large (1 samples, 0.10%)</title><rect x="92.2594%" y="213" width="0.1046%" height="15" fill="rgb(241,172,50)" fg:x="882" fg:w="1"/><text x="92.5094%" y="223.50"></text></g><g><title>databend-query`extent_try_coalesce_impl (1 samples, 0.10%)</title><rect x="92.2594%" y="197" width="0.1046%" height="15" fill="rgb(235,141,10)" fg:x="882" fg:w="1"/><text x="92.5094%" y="207.50"></text></g><g><title>databend-query`extent_coalesce (1 samples, 0.10%)</title><rect x="92.2594%" y="181" width="0.1046%" height="15" fill="rgb(220,174,43)" fg:x="882" fg:w="1"/><text x="92.5094%" y="191.50"></text></g><g><title>databend-query`extent_merge_impl (1 samples, 0.10%)</title><rect x="92.2594%" y="165" width="0.1046%" height="15" fill="rgb(215,181,40)" fg:x="882" fg:w="1"/><text x="92.5094%" y="175.50"></text></g><g><title>databend-query`extent_lock2 (1 samples, 0.10%)</title><rect x="92.2594%" y="149" width="0.1046%" height="15" fill="rgb(230,97,2)" fg:x="882" fg:w="1"/><text x="92.5094%" y="159.50"></text></g><g><title>databend-query`mutex_pool_lock2 (1 samples, 0.10%)</title><rect x="92.2594%" y="133" width="0.1046%" height="15" fill="rgb(211,25,27)" fg:x="882" fg:w="1"/><text x="92.5094%" y="143.50"></text></g><g><title>databend-query`mutex_pool_assert_not_held (1 samples, 0.10%)</title><rect x="92.2594%" y="117" width="0.1046%" height="15" fill="rgb(230,87,26)" fg:x="882" fg:w="1"/><text x="92.5094%" y="127.50"></text></g><g><title>databend-query`witness_assert_not_owner (1 samples, 0.10%)</title><rect x="92.2594%" y="101" width="0.1046%" height="15" fill="rgb(227,160,17)" fg:x="882" fg:w="1"/><text x="92.5094%" y="111.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (66 samples, 6.90%)</title><rect x="85.5649%" y="725" width="6.9038%" height="15" fill="rgb(244,85,34)" fg:x="818" fg:w="66"/><text x="85.8149%" y="735.50">databend-..</text></g><g><title>databend-query`databend_query::servers::mysql::mysql_session::MySQLConnection::run_on_stream::_{{closure}}::_{{closure}} (65 samples, 6.80%)</title><rect x="85.6695%" y="709" width="6.7992%" height="15" fill="rgb(207,70,0)" fg:x="819" fg:w="65"/><text x="85.9195%" y="719.50">databend-..</text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (65 samples, 6.80%)</title><rect x="85.6695%" y="693" width="6.7992%" height="15" fill="rgb(223,129,7)" fg:x="819" fg:w="65"/><text x="85.9195%" y="703.50">databend-..</text></g><g><title>databend-query`opensrv_mysql::AsyncMysqlIntermediary&lt;B,S&gt;::run_with_options::_{{closure}} (65 samples, 6.80%)</title><rect x="85.6695%" y="677" width="6.7992%" height="15" fill="rgb(246,105,7)" fg:x="819" fg:w="65"/><text x="85.9195%" y="687.50">databend-..</text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (65 samples, 6.80%)</title><rect x="85.6695%" y="661" width="6.7992%" height="15" fill="rgb(215,154,42)" fg:x="819" fg:w="65"/><text x="85.9195%" y="671.50">databend-..</text></g><g><title>databend-query`opensrv_mysql::AsyncMysqlIntermediary&lt;B,S&gt;::run::_{{closure}} (63 samples, 6.59%)</title><rect x="85.8787%" y="645" width="6.5900%" height="15" fill="rgb(220,215,30)" fg:x="821" fg:w="63"/><text x="86.1287%" y="655.50">databend-..</text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (62 samples, 6.49%)</title><rect x="85.9833%" y="629" width="6.4854%" height="15" fill="rgb(228,81,51)" fg:x="822" fg:w="62"/><text x="86.2333%" y="639.50">databend..</text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (62 samples, 6.49%)</title><rect x="85.9833%" y="613" width="6.4854%" height="15" fill="rgb(247,71,54)" fg:x="822" fg:w="62"/><text x="86.2333%" y="623.50">databend..</text></g><g><title>databend-query`&lt;databend_query::servers::mysql::mysql_interactive_worker::InteractiveWorker&lt;W&gt; as opensrv_mysql::AsyncMysqlShim&lt;W&gt;&gt;::on_query::_{{closure}} (62 samples, 6.49%)</title><rect x="85.9833%" y="597" width="6.4854%" height="15" fill="rgb(234,176,34)" fg:x="822" fg:w="62"/><text x="86.2333%" y="607.50">databend..</text></g><g><title>databend-query`databend_query::servers::mysql::writers::query_result_writer::DFQueryResultWriter&lt;W&gt;::write (22 samples, 2.30%)</title><rect x="90.1674%" y="581" width="2.3013%" height="15" fill="rgb(241,103,54)" fg:x="862" fg:w="22"/><text x="90.4174%" y="591.50">d..</text></g><g><title>databend-query`databend_query::servers::mysql::writers::query_result_writer::DFQueryResultWriter&lt;W&gt;::ok (22 samples, 2.30%)</title><rect x="90.1674%" y="565" width="2.3013%" height="15" fill="rgb(228,22,34)" fg:x="862" fg:w="22"/><text x="90.4174%" y="575.50">d..</text></g><g><title>databend-query`opensrv_mysql::resultset::RowWriter&lt;W&gt;::write_col (6 samples, 0.63%)</title><rect x="91.8410%" y="549" width="0.6276%" height="15" fill="rgb(241,179,48)" fg:x="878" fg:w="6"/><text x="92.0910%" y="559.50"></text></g><g><title>databend-query`&lt;u64 as opensrv_mysql::value::encode::ToMysqlValue&gt;::to_mysql_text (6 samples, 0.63%)</title><rect x="91.8410%" y="533" width="0.6276%" height="15" fill="rgb(235,167,37)" fg:x="878" fg:w="6"/><text x="92.0910%" y="543.50"></text></g><g><title>databend-query`mysql_common::io::WriteMysqlExt::write_lenenc_str (1 samples, 0.10%)</title><rect x="92.3640%" y="517" width="0.1046%" height="15" fill="rgb(213,109,30)" fg:x="883" fg:w="1"/><text x="92.6140%" y="527.50"></text></g><g><title>databend-query`mysql_common::io::WriteMysqlExt::write_lenenc_int (1 samples, 0.10%)</title><rect x="92.3640%" y="501" width="0.1046%" height="15" fill="rgb(222,172,16)" fg:x="883" fg:w="1"/><text x="92.6140%" y="511.50"></text></g><g><title>databend-query`byteorder::io::WriteBytesExt::write_u8 (1 samples, 0.10%)</title><rect x="92.3640%" y="485" width="0.1046%" height="15" fill="rgb(233,192,5)" fg:x="883" fg:w="1"/><text x="92.6140%" y="495.50"></text></g><g><title>databend-query`std::io::Write::write_all (1 samples, 0.10%)</title><rect x="92.3640%" y="469" width="0.1046%" height="15" fill="rgb(247,189,41)" fg:x="883" fg:w="1"/><text x="92.6140%" y="479.50"></text></g><g><title>databend-query`&lt;opensrv_mysql::packet::PacketWriter&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.10%)</title><rect x="92.3640%" y="453" width="0.1046%" height="15" fill="rgb(218,134,47)" fg:x="883" fg:w="1"/><text x="92.6140%" y="463.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (1 samples, 0.10%)</title><rect x="92.3640%" y="437" width="0.1046%" height="15" fill="rgb(216,29,3)" fg:x="883" fg:w="1"/><text x="92.6140%" y="447.50"></text></g><g><title>databend-query`core::slice::iter::_&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (1 samples, 0.10%)</title><rect x="92.3640%" y="421" width="0.1046%" height="15" fill="rgb(246,140,12)" fg:x="883" fg:w="1"/><text x="92.6140%" y="431.50"></text></g><g><title>databend-query`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.10%)</title><rect x="92.3640%" y="405" width="0.1046%" height="15" fill="rgb(230,136,11)" fg:x="883" fg:w="1"/><text x="92.6140%" y="415.50"></text></g><g><title>databend-query`core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.10%)</title><rect x="92.3640%" y="389" width="0.1046%" height="15" fill="rgb(247,22,47)" fg:x="883" fg:w="1"/><text x="92.6140%" y="399.50"></text></g><g><title>databend-query`&lt;databend_query::interpreters::interpreter_factory_interceptor::InterceptorInterpreter as databend_query::interpreters::interpreter::Interpreter&gt;::finish::_{{closure}} (1 samples, 0.10%)</title><rect x="92.4686%" y="645" width="0.1046%" height="15" fill="rgb(218,84,22)" fg:x="884" fg:w="1"/><text x="92.7186%" y="655.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="92.4686%" y="629" width="0.1046%" height="15" fill="rgb(216,87,39)" fg:x="884" fg:w="1"/><text x="92.7186%" y="639.50"></text></g><g><title>databend-query`databend_query::interpreters::interpreter_query_log::InterpreterQueryLog::log_finish::_{{closure}} (1 samples, 0.10%)</title><rect x="92.4686%" y="613" width="0.1046%" height="15" fill="rgb(221,178,8)" fg:x="884" fg:w="1"/><text x="92.7186%" y="623.50"></text></g><g><title>databend-query`databend_query::sessions::session_settings::Settings::get_setting_values_short (1 samples, 0.10%)</title><rect x="92.4686%" y="597" width="0.1046%" height="15" fill="rgb(230,42,11)" fg:x="884" fg:w="1"/><text x="92.7186%" y="607.50"></text></g><g><title>databend-query`itertools::Itertools::sorted_by_key (1 samples, 0.10%)</title><rect x="92.4686%" y="581" width="0.1046%" height="15" fill="rgb(237,229,4)" fg:x="884" fg:w="1"/><text x="92.7186%" y="591.50"></text></g><g><title>databend-query`alloc::slice::_&lt;impl [T]&gt;::sort_by_key (1 samples, 0.10%)</title><rect x="92.4686%" y="565" width="0.1046%" height="15" fill="rgb(222,31,33)" fg:x="884" fg:w="1"/><text x="92.7186%" y="575.50"></text></g><g><title>databend-query`alloc::slice::merge_sort (1 samples, 0.10%)</title><rect x="92.4686%" y="549" width="0.1046%" height="15" fill="rgb(210,17,39)" fg:x="884" fg:w="1"/><text x="92.7186%" y="559.50"></text></g><g><title>databend-query`alloc::slice::insert_head (1 samples, 0.10%)</title><rect x="92.4686%" y="533" width="0.1046%" height="15" fill="rgb(244,93,20)" fg:x="884" fg:w="1"/><text x="92.7186%" y="543.50"></text></g><g><title>databend-query`alloc::slice::_&lt;impl [T]&gt;::sort_by_key::_{{closure}} (1 samples, 0.10%)</title><rect x="92.4686%" y="517" width="0.1046%" height="15" fill="rgb(210,40,47)" fg:x="884" fg:w="1"/><text x="92.7186%" y="527.50"></text></g><g><title>databend-query`core::cmp::impls::_&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::lt (1 samples, 0.10%)</title><rect x="92.4686%" y="501" width="0.1046%" height="15" fill="rgb(239,211,47)" fg:x="884" fg:w="1"/><text x="92.7186%" y="511.50"></text></g><g><title>databend-query`core::cmp::PartialOrd::lt (1 samples, 0.10%)</title><rect x="92.4686%" y="485" width="0.1046%" height="15" fill="rgb(251,223,49)" fg:x="884" fg:w="1"/><text x="92.7186%" y="495.50"></text></g><g><title>databend-query`&lt;alloc::string::String as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.10%)</title><rect x="92.4686%" y="469" width="0.1046%" height="15" fill="rgb(221,149,5)" fg:x="884" fg:w="1"/><text x="92.7186%" y="479.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.10%)</title><rect x="92.4686%" y="453" width="0.1046%" height="15" fill="rgb(219,224,51)" fg:x="884" fg:w="1"/><text x="92.7186%" y="463.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="92.4686%" y="437" width="0.1046%" height="15" fill="rgb(223,7,8)" fg:x="884" fg:w="1"/><text x="92.7186%" y="447.50"></text></g><g><title>databend-query`core::slice::raw::from_raw_parts (1 samples, 0.10%)</title><rect x="92.4686%" y="421" width="0.1046%" height="15" fill="rgb(241,217,22)" fg:x="884" fg:w="1"/><text x="92.7186%" y="431.50"></text></g><g><title>databend-query`&lt;databend_query::interpreters::interpreter_factory_interceptor::InterceptorInterpreter as databend_query::interpreters::interpreter::Interpreter&gt;::start::_{{closure}} (1 samples, 0.10%)</title><rect x="92.5732%" y="645" width="0.1046%" height="15" fill="rgb(248,209,0)" fg:x="885" fg:w="1"/><text x="92.8232%" y="655.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="92.5732%" y="629" width="0.1046%" height="15" fill="rgb(217,205,4)" fg:x="885" fg:w="1"/><text x="92.8232%" y="639.50"></text></g><g><title>databend-query`databend_query::interpreters::interpreter_query_log::InterpreterQueryLog::log_start::_{{closure}} (1 samples, 0.10%)</title><rect x="92.5732%" y="613" width="0.1046%" height="15" fill="rgb(228,124,39)" fg:x="885" fg:w="1"/><text x="92.8232%" y="623.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="92.5732%" y="597" width="0.1046%" height="15" fill="rgb(250,116,42)" fg:x="885" fg:w="1"/><text x="92.8232%" y="607.50"></text></g><g><title>databend-query`databend_query::interpreters::interpreter_query_log::InterpreterQueryLog::write_log::_{{closure}} (1 samples, 0.10%)</title><rect x="92.5732%" y="581" width="0.1046%" height="15" fill="rgb(223,202,9)" fg:x="885" fg:w="1"/><text x="92.8232%" y="591.50"></text></g><g><title>databend-query`&lt;common_datavalues::columns::primitive::PrimitiveColumn&lt;T&gt; as common_datavalues::scalars::column::ScalarColumn&gt;::from_slice (1 samples, 0.10%)</title><rect x="92.5732%" y="565" width="0.1046%" height="15" fill="rgb(242,222,40)" fg:x="885" fg:w="1"/><text x="92.8232%" y="575.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="92.6778%" y="565" width="0.1046%" height="15" fill="rgb(229,99,46)" fg:x="886" fg:w="1"/><text x="92.9278%" y="575.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::Binder::bind::_{{closure}} (1 samples, 0.10%)</title><rect x="92.6778%" y="549" width="0.1046%" height="15" fill="rgb(225,56,46)" fg:x="886" fg:w="1"/><text x="92.9278%" y="559.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="92.6778%" y="533" width="0.1046%" height="15" fill="rgb(227,94,5)" fg:x="886" fg:w="1"/><text x="92.9278%" y="543.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::select::_&lt;impl databend_query::sql::planner::binder::Binder&gt;::bind_query (1 samples, 0.10%)</title><rect x="92.6778%" y="517" width="0.1046%" height="15" fill="rgb(205,112,38)" fg:x="886" fg:w="1"/><text x="92.9278%" y="527.50"></text></g><g><title>databend-query`common_ast::parser::tokenize_sql (1 samples, 0.10%)</title><rect x="92.7824%" y="565" width="0.1046%" height="15" fill="rgb(231,133,46)" fg:x="887" fg:w="1"/><text x="93.0324%" y="575.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::collect (1 samples, 0.10%)</title><rect x="92.7824%" y="549" width="0.1046%" height="15" fill="rgb(217,16,9)" fg:x="887" fg:w="1"/><text x="93.0324%" y="559.50"></text></g><g><title>databend-query`&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="92.7824%" y="533" width="0.1046%" height="15" fill="rgb(249,173,9)" fg:x="887" fg:w="1"/><text x="93.0324%" y="543.50"></text></g><g><title>databend-query`core::iter::adapters::try_process (1 samples, 0.10%)</title><rect x="92.7824%" y="517" width="0.1046%" height="15" fill="rgb(205,163,53)" fg:x="887" fg:w="1"/><text x="93.0324%" y="527.50"></text></g><g><title>databend-query`&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::_{{closure}} (1 samples, 0.10%)</title><rect x="92.7824%" y="501" width="0.1046%" height="15" fill="rgb(217,54,41)" fg:x="887" fg:w="1"/><text x="93.0324%" y="511.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::collect (1 samples, 0.10%)</title><rect x="92.7824%" y="485" width="0.1046%" height="15" fill="rgb(228,216,12)" fg:x="887" fg:w="1"/><text x="93.0324%" y="495.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="92.7824%" y="469" width="0.1046%" height="15" fill="rgb(244,228,15)" fg:x="887" fg:w="1"/><text x="93.0324%" y="479.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="92.7824%" y="453" width="0.1046%" height="15" fill="rgb(221,176,53)" fg:x="887" fg:w="1"/><text x="93.0324%" y="463.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="92.7824%" y="437" width="0.1046%" height="15" fill="rgb(205,94,34)" fg:x="887" fg:w="1"/><text x="93.0324%" y="447.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="92.7824%" y="421" width="0.1046%" height="15" fill="rgb(213,110,48)" fg:x="887" fg:w="1"/><text x="93.0324%" y="431.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.10%)</title><rect x="92.7824%" y="405" width="0.1046%" height="15" fill="rgb(236,142,28)" fg:x="887" fg:w="1"/><text x="93.0324%" y="415.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.10%)</title><rect x="92.7824%" y="389" width="0.1046%" height="15" fill="rgb(225,135,29)" fg:x="887" fg:w="1"/><text x="93.0324%" y="399.50"></text></g><g><title>databend-query`core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="92.7824%" y="373" width="0.1046%" height="15" fill="rgb(252,45,31)" fg:x="887" fg:w="1"/><text x="93.0324%" y="383.50"></text></g><g><title>databend-query`&lt;common_ast::parser::token::Tokenizer as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="92.7824%" y="357" width="0.1046%" height="15" fill="rgb(211,187,50)" fg:x="887" fg:w="1"/><text x="93.0324%" y="367.50"></text></g><g><title>databend-query`core::mem::manually_drop::ManuallyDrop&lt;T&gt;::take (1 samples, 0.10%)</title><rect x="92.7824%" y="341" width="0.1046%" height="15" fill="rgb(229,109,7)" fg:x="887" fg:w="1"/><text x="93.0324%" y="351.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.31%)</title><rect x="92.6778%" y="597" width="0.3138%" height="15" fill="rgb(251,131,51)" fg:x="886" fg:w="3"/><text x="92.9278%" y="607.50"></text></g><g><title>databend-query`databend_query::sql::planner::Planner::plan_sql::_{{closure}} (3 samples, 0.31%)</title><rect x="92.6778%" y="581" width="0.3138%" height="15" fill="rgb(251,180,35)" fg:x="886" fg:w="3"/><text x="92.9278%" y="591.50"></text></g><g><title>databend-query`databend_query::sql::exec::PipelineBuilder::spawn (1 samples, 0.10%)</title><rect x="92.8870%" y="565" width="0.1046%" height="15" fill="rgb(211,46,32)" fg:x="888" fg:w="1"/><text x="93.1370%" y="575.50"></text></g><g><title>databend-query`databend_query::sql::exec::PipelineBuilder::build_pipeline (1 samples, 0.10%)</title><rect x="92.8870%" y="549" width="0.1046%" height="15" fill="rgb(248,123,17)" fg:x="888" fg:w="1"/><text x="93.1370%" y="559.50"></text></g><g><title>databend-query`databend_query::sql::exec::PipelineBuilder::build_pipeline (1 samples, 0.10%)</title><rect x="92.8870%" y="533" width="0.1046%" height="15" fill="rgb(227,141,18)" fg:x="888" fg:w="1"/><text x="93.1370%" y="543.50"></text></g><g><title>databend-query`databend_query::sql::exec::PipelineBuilder::build_pipeline (1 samples, 0.10%)</title><rect x="92.8870%" y="517" width="0.1046%" height="15" fill="rgb(216,102,9)" fg:x="888" fg:w="1"/><text x="93.1370%" y="527.50"></text></g><g><title>databend-query`databend_query::sql::exec::PipelineBuilder::build_physical_scan (1 samples, 0.10%)</title><rect x="92.8870%" y="501" width="0.1046%" height="15" fill="rgb(253,47,13)" fg:x="888" fg:w="1"/><text x="93.1370%" y="511.50"></text></g><g><title>databend-query`databend_query::sessions::query_ctx::QueryContext::build_table_from_source_plan (1 samples, 0.10%)</title><rect x="92.8870%" y="485" width="0.1046%" height="15" fill="rgb(226,93,23)" fg:x="888" fg:w="1"/><text x="93.1370%" y="495.50"></text></g><g><title>databend-query`databend_query::sessions::query_ctx::QueryContext::build_table_by_table_info (1 samples, 0.10%)</title><rect x="92.8870%" y="469" width="0.1046%" height="15" fill="rgb(247,104,17)" fg:x="888" fg:w="1"/><text x="93.1370%" y="479.50"></text></g><g><title>databend-query`&lt;databend_query::catalogs::default::database_catalog::DatabaseCatalog as databend_query::catalogs::catalog::Catalog&gt;::get_table_function (1 samples, 0.10%)</title><rect x="92.8870%" y="453" width="0.1046%" height="15" fill="rgb(233,203,26)" fg:x="888" fg:w="1"/><text x="93.1370%" y="463.50"></text></g><g><title>databend-query`databend_query::table_functions::table_function_factory::TableFunctionFactory::get (1 samples, 0.10%)</title><rect x="92.8870%" y="437" width="0.1046%" height="15" fill="rgb(244,98,49)" fg:x="888" fg:w="1"/><text x="93.1370%" y="447.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (6 samples, 0.63%)</title><rect x="92.4686%" y="677" width="0.6276%" height="15" fill="rgb(235,134,22)" fg:x="884" fg:w="6"/><text x="92.7186%" y="687.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.63%)</title><rect x="92.4686%" y="661" width="0.6276%" height="15" fill="rgb(221,70,32)" fg:x="884" fg:w="6"/><text x="92.7186%" y="671.50"></text></g><g><title>databend-query`&lt;databend_query::interpreters::interpreter_select_v2::SelectInterpreterV2 as databend_query::interpreters::interpreter::Interpreter&gt;::execute::_{{closure}} (4 samples, 0.42%)</title><rect x="92.6778%" y="645" width="0.4184%" height="15" fill="rgb(238,15,50)" fg:x="886" fg:w="4"/><text x="92.9278%" y="655.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.42%)</title><rect x="92.6778%" y="629" width="0.4184%" height="15" fill="rgb(215,221,48)" fg:x="886" fg:w="4"/><text x="92.9278%" y="639.50"></text></g><g><title>databend-query`&lt;databend_query::interpreters::interpreter_select_v2::SelectInterpreterV2 as databend_query::interpreters::interpreter::Interpreter&gt;::execute::_{{closure}}::_{{closure}} (4 samples, 0.42%)</title><rect x="92.6778%" y="613" width="0.4184%" height="15" fill="rgb(236,73,3)" fg:x="886" fg:w="4"/><text x="92.9278%" y="623.50"></text></g><g><title>databend-query`databend_query::pipelines::new::executor::pipeline_executor::PipelineExecutor::execute (1 samples, 0.10%)</title><rect x="92.9916%" y="597" width="0.1046%" height="15" fill="rgb(250,107,11)" fg:x="889" fg:w="1"/><text x="93.2416%" y="607.50"></text></g><g><title>databend-query`std::thread::JoinHandle&lt;T&gt;::join (1 samples, 0.10%)</title><rect x="92.9916%" y="581" width="0.1046%" height="15" fill="rgb(242,39,14)" fg:x="889" fg:w="1"/><text x="93.2416%" y="591.50"></text></g><g><title>databend-query`std::thread::JoinInner&lt;T&gt;::join (1 samples, 0.10%)</title><rect x="92.9916%" y="565" width="0.1046%" height="15" fill="rgb(248,164,37)" fg:x="889" fg:w="1"/><text x="93.2416%" y="575.50"></text></g><g><title>databend-query`std::sys::unix::thread::Thread::join (1 samples, 0.10%)</title><rect x="92.9916%" y="549" width="0.1046%" height="15" fill="rgb(217,60,12)" fg:x="889" fg:w="1"/><text x="93.2416%" y="559.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_join (1 samples, 0.10%)</title><rect x="92.9916%" y="533" width="0.1046%" height="15" fill="rgb(240,125,29)" fg:x="889" fg:w="1"/><text x="93.2416%" y="543.50"></text></g><g><title>databend-query`core::task::poll::Poll&lt;T&gt;::map (1 samples, 0.10%)</title><rect x="93.3054%" y="613" width="0.1046%" height="15" fill="rgb(208,207,28)" fg:x="892" fg:w="1"/><text x="93.5554%" y="623.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.10%)</title><rect x="93.5146%" y="485" width="0.1046%" height="15" fill="rgb(209,159,27)" fg:x="894" fg:w="1"/><text x="93.7646%" y="495.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.10%)</title><rect x="93.6192%" y="485" width="0.1046%" height="15" fill="rgb(251,176,53)" fg:x="895" fg:w="1"/><text x="93.8692%" y="495.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.10%)</title><rect x="93.6192%" y="469" width="0.1046%" height="15" fill="rgb(211,85,7)" fg:x="895" fg:w="1"/><text x="93.8692%" y="479.50"></text></g><g><title>databend-query`core::option::Option&lt;T&gt;::unwrap (1 samples, 0.10%)</title><rect x="93.7238%" y="485" width="0.1046%" height="15" fill="rgb(216,64,54)" fg:x="896" fg:w="1"/><text x="93.9738%" y="495.50"></text></g><g><title>databend-query`std::sync::mpsc::sync::Buffer&lt;T&gt;::dequeue (4 samples, 0.42%)</title><rect x="93.5146%" y="501" width="0.4184%" height="15" fill="rgb(217,54,24)" fg:x="894" fg:w="4"/><text x="93.7646%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.10%)</title><rect x="93.8285%" y="485" width="0.1046%" height="15" fill="rgb(208,206,53)" fg:x="897" fg:w="1"/><text x="94.0785%" y="495.50"></text></g><g><title>databend-query`__rust_dealloc (1 samples, 0.10%)</title><rect x="93.9331%" y="485" width="0.1046%" height="15" fill="rgb(251,74,39)" fg:x="898" fg:w="1"/><text x="94.1831%" y="495.50"></text></g><g><title>databend-query`core::mem::drop (1 samples, 0.10%)</title><rect x="94.0377%" y="485" width="0.1046%" height="15" fill="rgb(226,47,5)" fg:x="899" fg:w="1"/><text x="94.2877%" y="495.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;std::sync::mpsc::sync::State&lt;core::result::Result&lt;core::option::Option&lt;common_datablocks::data_block::DataBlock&gt;,common_exception::exception::ErrorCode&gt;&gt;&gt;&gt; (1 samples, 0.10%)</title><rect x="94.0377%" y="469" width="0.1046%" height="15" fill="rgb(234,111,33)" fg:x="899" fg:w="1"/><text x="94.2877%" y="479.50"></text></g><g><title>databend-query`&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="94.0377%" y="453" width="0.1046%" height="15" fill="rgb(251,14,10)" fg:x="899" fg:w="1"/><text x="94.2877%" y="463.50"></text></g><g><title>databend-query`std::sync::poison::Flag::done (1 samples, 0.10%)</title><rect x="94.0377%" y="437" width="0.1046%" height="15" fill="rgb(232,43,0)" fg:x="899" fg:w="1"/><text x="94.2877%" y="447.50"></text></g><g><title>databend-query`std::thread::panicking (1 samples, 0.10%)</title><rect x="94.0377%" y="421" width="0.1046%" height="15" fill="rgb(222,68,43)" fg:x="899" fg:w="1"/><text x="94.2877%" y="431.50"></text></g><g><title>databend-query`std::panicking::panicking (1 samples, 0.10%)</title><rect x="94.0377%" y="405" width="0.1046%" height="15" fill="rgb(217,24,23)" fg:x="899" fg:w="1"/><text x="94.2877%" y="415.50"></text></g><g><title>databend-query`std::panicking::panic_count::count_is_zero (1 samples, 0.10%)</title><rect x="94.0377%" y="389" width="0.1046%" height="15" fill="rgb(229,209,14)" fg:x="899" fg:w="1"/><text x="94.2877%" y="399.50"></text></g><g><title>databend-query`__rg_dealloc (2 samples, 0.21%)</title><rect x="94.1423%" y="469" width="0.2092%" height="15" fill="rgb(250,149,48)" fg:x="900" fg:w="2"/><text x="94.3923%" y="479.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::dealloc (2 samples, 0.21%)</title><rect x="94.1423%" y="453" width="0.2092%" height="15" fill="rgb(210,120,37)" fg:x="900" fg:w="2"/><text x="94.3923%" y="463.50"></text></g><g><title>databend-query`_rjem_sdallocx (2 samples, 0.21%)</title><rect x="94.1423%" y="437" width="0.2092%" height="15" fill="rgb(210,21,8)" fg:x="900" fg:w="2"/><text x="94.3923%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (23 samples, 2.41%)</title><rect x="94.4561%" y="453" width="2.4059%" height="15" fill="rgb(243,145,7)" fg:x="903" fg:w="23"/><text x="94.7061%" y="463.50">li..</text></g><g><title>databend-query`std::sync::mpsc::blocking::WaitToken::wait (27 samples, 2.82%)</title><rect x="94.1423%" y="485" width="2.8243%" height="15" fill="rgb(238,178,32)" fg:x="900" fg:w="27"/><text x="94.3923%" y="495.50">da..</text></g><g><title>databend-query`std::thread::park (25 samples, 2.62%)</title><rect x="94.3515%" y="469" width="2.6151%" height="15" fill="rgb(222,4,10)" fg:x="902" fg:w="25"/><text x="94.6015%" y="479.50">da..</text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (1 samples, 0.10%)</title><rect x="96.8619%" y="453" width="0.1046%" height="15" fill="rgb(239,7,37)" fg:x="926" fg:w="1"/><text x="97.1119%" y="463.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_droplock (1 samples, 0.10%)</title><rect x="96.8619%" y="437" width="0.1046%" height="15" fill="rgb(215,31,37)" fg:x="926" fg:w="1"/><text x="97.1119%" y="447.50"></text></g><g><title>databend-query`std::sync::mpsc::blocking::tokens (1 samples, 0.10%)</title><rect x="96.9665%" y="485" width="0.1046%" height="15" fill="rgb(224,83,33)" fg:x="927" fg:w="1"/><text x="97.2165%" y="495.50"></text></g><g><title>databend-query`__rg_alloc (1 samples, 0.10%)</title><rect x="96.9665%" y="469" width="0.1046%" height="15" fill="rgb(239,55,3)" fg:x="927" fg:w="1"/><text x="97.2165%" y="479.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.10%)</title><rect x="96.9665%" y="453" width="0.1046%" height="15" fill="rgb(247,92,11)" fg:x="927" fg:w="1"/><text x="97.2165%" y="463.50"></text></g><g><title>databend-query`common_base::base::runtime_tracker::ThreadTracker::alloc_memory (1 samples, 0.10%)</title><rect x="96.9665%" y="437" width="0.1046%" height="15" fill="rgb(239,200,7)" fg:x="927" fg:w="1"/><text x="97.2165%" y="447.50"></text></g><g><title>databend-query`std::sync::mpsc::sync::wait (32 samples, 3.35%)</title><rect x="93.9331%" y="501" width="3.3473%" height="15" fill="rgb(227,115,8)" fg:x="898" fg:w="32"/><text x="94.1831%" y="511.50">dat..</text></g><g><title>databend-query`std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.21%)</title><rect x="97.0711%" y="485" width="0.2092%" height="15" fill="rgb(215,189,27)" fg:x="928" fg:w="2"/><text x="97.3211%" y="495.50"></text></g><g><title>databend-query`std::sync::mutex::MutexGuard&lt;T&gt;::new (2 samples, 0.21%)</title><rect x="97.0711%" y="469" width="0.2092%" height="15" fill="rgb(251,216,39)" fg:x="928" fg:w="2"/><text x="97.3211%" y="479.50"></text></g><g><title>databend-query`std::sync::poison::Flag::borrow (1 samples, 0.10%)</title><rect x="97.1757%" y="453" width="0.1046%" height="15" fill="rgb(207,29,47)" fg:x="929" fg:w="1"/><text x="97.4257%" y="463.50"></text></g><g><title>databend-query`std::thread::panicking (1 samples, 0.10%)</title><rect x="97.1757%" y="437" width="0.1046%" height="15" fill="rgb(210,71,34)" fg:x="929" fg:w="1"/><text x="97.4257%" y="447.50"></text></g><g><title>databend-query`std::panicking::panicking (1 samples, 0.10%)</title><rect x="97.1757%" y="421" width="0.1046%" height="15" fill="rgb(253,217,51)" fg:x="929" fg:w="1"/><text x="97.4257%" y="431.50"></text></g><g><title>databend-query`std::panicking::panic_count::count_is_zero (1 samples, 0.10%)</title><rect x="97.1757%" y="405" width="0.1046%" height="15" fill="rgb(222,117,46)" fg:x="929" fg:w="1"/><text x="97.4257%" y="415.50"></text></g><g><title>databend-query`core::sync::atomic::AtomicUsize::load (1 samples, 0.10%)</title><rect x="97.1757%" y="389" width="0.1046%" height="15" fill="rgb(226,132,6)" fg:x="929" fg:w="1"/><text x="97.4257%" y="399.50"></text></g><g><title>databend-query`core::sync::atomic::atomic_load (1 samples, 0.10%)</title><rect x="97.1757%" y="373" width="0.1046%" height="15" fill="rgb(254,145,51)" fg:x="929" fg:w="1"/><text x="97.4257%" y="383.50"></text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (41 samples, 4.29%)</title><rect x="93.0962%" y="661" width="4.2887%" height="15" fill="rgb(231,199,27)" fg:x="890" fg:w="41"/><text x="93.3462%" y="671.50">datab..</text></g><g><title>databend-query`&lt;common_streams::stream_abort::AbortStream as futures_core::stream::Stream&gt;::poll_next (40 samples, 4.18%)</title><rect x="93.2008%" y="645" width="4.1841%" height="15" fill="rgb(245,158,14)" fg:x="891" fg:w="40"/><text x="93.4508%" y="655.50">datab..</text></g><g><title>databend-query`&lt;futures_util::abortable::Abortable&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (39 samples, 4.08%)</title><rect x="93.3054%" y="629" width="4.0795%" height="15" fill="rgb(240,113,14)" fg:x="892" fg:w="39"/><text x="93.5554%" y="639.50">data..</text></g><g><title>databend-query`futures_util::abortable::Abortable&lt;T&gt;::try_poll (38 samples, 3.97%)</title><rect x="93.4100%" y="613" width="3.9749%" height="15" fill="rgb(210,20,13)" fg:x="893" fg:w="38"/><text x="93.6600%" y="623.50">data..</text></g><g><title>databend-query`&lt;futures_util::abortable::Abortable&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next::_{{closure}} (38 samples, 3.97%)</title><rect x="93.4100%" y="597" width="3.9749%" height="15" fill="rgb(241,144,13)" fg:x="893" fg:w="38"/><text x="93.6600%" y="607.50">data..</text></g><g><title>databend-query`&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (38 samples, 3.97%)</title><rect x="93.4100%" y="581" width="3.9749%" height="15" fill="rgb(235,43,34)" fg:x="893" fg:w="38"/><text x="93.6600%" y="591.50">data..</text></g><g><title>databend-query`&lt;databend_query::interpreters::stream::processor_executor_stream::ProcessorExecutorStream as futures_core::stream::Stream&gt;::poll_next (38 samples, 3.97%)</title><rect x="93.4100%" y="565" width="3.9749%" height="15" fill="rgb(208,36,20)" fg:x="893" fg:w="38"/><text x="93.6600%" y="575.50">data..</text></g><g><title>databend-query`databend_query::pipelines::new::executor::pipeline_pulling_executor::PipelinePullingExecutor::pull_data (38 samples, 3.97%)</title><rect x="93.4100%" y="549" width="3.9749%" height="15" fill="rgb(239,204,10)" fg:x="893" fg:w="38"/><text x="93.6600%" y="559.50">data..</text></g><g><title>databend-query`std::sync::mpsc::Receiver&lt;T&gt;::recv (38 samples, 3.97%)</title><rect x="93.4100%" y="533" width="3.9749%" height="15" fill="rgb(217,84,43)" fg:x="893" fg:w="38"/><text x="93.6600%" y="543.50">data..</text></g><g><title>databend-query`std::sync::mpsc::sync::Packet&lt;T&gt;::recv (37 samples, 3.87%)</title><rect x="93.5146%" y="517" width="3.8703%" height="15" fill="rgb(241,170,50)" fg:x="894" fg:w="37"/><text x="93.7646%" y="527.50">data..</text></g><g><title>databend-query`std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.10%)</title><rect x="97.2803%" y="501" width="0.1046%" height="15" fill="rgb(226,205,29)" fg:x="930" fg:w="1"/><text x="97.5303%" y="511.50"></text></g><g><title>databend-query`core::result::Result&lt;T,E&gt;::is_ok (1 samples, 0.10%)</title><rect x="97.3849%" y="661" width="0.1046%" height="15" fill="rgb(233,113,1)" fg:x="931" fg:w="1"/><text x="97.6349%" y="671.50"></text></g><g><title>databend-query`tokio_stream::stream_ext::collect::_&lt;impl tokio_stream::stream_ext::collect::sealed::FromStreamPriv&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::extend (1 samples, 0.10%)</title><rect x="97.4895%" y="661" width="0.1046%" height="15" fill="rgb(253,98,13)" fg:x="932" fg:w="1"/><text x="97.7395%" y="671.50"></text></g><g><title>databend-query`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (51 samples, 5.33%)</title><rect x="92.4686%" y="725" width="5.3347%" height="15" fill="rgb(211,115,12)" fg:x="884" fg:w="51"/><text x="92.7186%" y="735.50">databen..</text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (51 samples, 5.33%)</title><rect x="92.4686%" y="709" width="5.3347%" height="15" fill="rgb(208,12,16)" fg:x="884" fg:w="51"/><text x="92.7186%" y="719.50">databen..</text></g><g><title>databend-query`databend_query::servers::mysql::mysql_interactive_worker::InteractiveWorkerBase&lt;W&gt;::exec_query::_{{closure}}::_{{closure}}::_{{closure}} (51 samples, 5.33%)</title><rect x="92.4686%" y="693" width="5.3347%" height="15" fill="rgb(237,193,54)" fg:x="884" fg:w="51"/><text x="92.7186%" y="703.50">databen..</text></g><g><title>databend-query`&lt;tokio_stream::stream_ext::collect::Collect&lt;T,U&gt; as core::future::future::Future&gt;::poll (45 samples, 4.71%)</title><rect x="93.0962%" y="677" width="4.7071%" height="15" fill="rgb(243,22,42)" fg:x="890" fg:w="45"/><text x="93.3462%" y="687.50">datab..</text></g><g><title>databend-query`tokio_stream::stream_ext::collect::_&lt;impl tokio_stream::stream_ext::collect::sealed::FromStreamPriv&lt;core::result::Result&lt;T,E&gt;&gt; for core::result::Result&lt;U,E&gt;&gt;::extend (2 samples, 0.21%)</title><rect x="97.5941%" y="661" width="0.2092%" height="15" fill="rgb(233,151,36)" fg:x="933" fg:w="2"/><text x="97.8441%" y="671.50"></text></g><g><title>databend-query`tokio_stream::stream_ext::collect::_&lt;impl tokio_stream::stream_ext::collect::sealed::FromStreamPriv&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::extend (1 samples, 0.10%)</title><rect x="97.6987%" y="645" width="0.1046%" height="15" fill="rgb(237,57,45)" fg:x="934" fg:w="1"/><text x="97.9487%" y="655.50"></text></g><g><title>databend-query`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.10%)</title><rect x="97.6987%" y="629" width="0.1046%" height="15" fill="rgb(221,88,17)" fg:x="934" fg:w="1"/><text x="97.9487%" y="639.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.10%)</title><rect x="97.6987%" y="613" width="0.1046%" height="15" fill="rgb(230,79,15)" fg:x="934" fg:w="1"/><text x="97.9487%" y="623.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.10%)</title><rect x="97.6987%" y="597" width="0.1046%" height="15" fill="rgb(213,57,13)" fg:x="934" fg:w="1"/><text x="97.9487%" y="607.50"></text></g><g><title>databend-query`alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="97.6987%" y="581" width="0.1046%" height="15" fill="rgb(222,116,39)" fg:x="934" fg:w="1"/><text x="97.9487%" y="591.50"></text></g><g><title>databend-query`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.10%)</title><rect x="97.6987%" y="565" width="0.1046%" height="15" fill="rgb(245,107,2)" fg:x="934" fg:w="1"/><text x="97.9487%" y="575.50"></text></g><g><title>databend-query`alloc::alloc::Global::grow_impl (1 samples, 0.10%)</title><rect x="97.6987%" y="549" width="0.1046%" height="15" fill="rgb(238,1,10)" fg:x="934" fg:w="1"/><text x="97.9487%" y="559.50"></text></g><g><title>databend-query`alloc::alloc::realloc (1 samples, 0.10%)</title><rect x="97.6987%" y="533" width="0.1046%" height="15" fill="rgb(249,4,48)" fg:x="934" fg:w="1"/><text x="97.9487%" y="543.50"></text></g><g><title>databend-query`__rg_realloc (1 samples, 0.10%)</title><rect x="97.6987%" y="517" width="0.1046%" height="15" fill="rgb(223,151,18)" fg:x="934" fg:w="1"/><text x="97.9487%" y="527.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::realloc (1 samples, 0.10%)</title><rect x="97.6987%" y="501" width="0.1046%" height="15" fill="rgb(227,65,43)" fg:x="934" fg:w="1"/><text x="97.9487%" y="511.50"></text></g><g><title>databend-query`_rjem_rallocx (1 samples, 0.10%)</title><rect x="97.6987%" y="485" width="0.1046%" height="15" fill="rgb(218,40,45)" fg:x="934" fg:w="1"/><text x="97.9487%" y="495.50"></text></g><g><title>databend-query`_rjem_je_arena_ralloc (1 samples, 0.10%)</title><rect x="97.6987%" y="469" width="0.1046%" height="15" fill="rgb(252,121,31)" fg:x="934" fg:w="1"/><text x="97.9487%" y="479.50"></text></g><g><title>databend-query`arena_ralloc_move_helper (1 samples, 0.10%)</title><rect x="97.6987%" y="453" width="0.1046%" height="15" fill="rgb(219,158,43)" fg:x="934" fg:w="1"/><text x="97.9487%" y="463.50"></text></g><g><title>databend-query`_rjem_je_tcache_alloc_small_hard (1 samples, 0.10%)</title><rect x="97.6987%" y="437" width="0.1046%" height="15" fill="rgb(231,162,42)" fg:x="934" fg:w="1"/><text x="97.9487%" y="447.50"></text></g><g><title>databend-query`_rjem_je_arena_tcache_fill_small (1 samples, 0.10%)</title><rect x="97.6987%" y="421" width="0.1046%" height="15" fill="rgb(217,179,25)" fg:x="934" fg:w="1"/><text x="97.9487%" y="431.50"></text></g><g><title>databend-query`arena_bin_malloc_hard (1 samples, 0.10%)</title><rect x="97.6987%" y="405" width="0.1046%" height="15" fill="rgb(206,212,31)" fg:x="934" fg:w="1"/><text x="97.9487%" y="415.50"></text></g><g><title>databend-query`arena_bin_nonfull_slab_get (1 samples, 0.10%)</title><rect x="97.6987%" y="389" width="0.1046%" height="15" fill="rgb(235,144,12)" fg:x="934" fg:w="1"/><text x="97.9487%" y="399.50"></text></g><g><title>databend-query`arena_slab_alloc (1 samples, 0.10%)</title><rect x="97.6987%" y="373" width="0.1046%" height="15" fill="rgb(213,51,10)" fg:x="934" fg:w="1"/><text x="97.9487%" y="383.50"></text></g><g><title>databend-query`arena_slab_alloc_hard (1 samples, 0.10%)</title><rect x="97.6987%" y="357" width="0.1046%" height="15" fill="rgb(231,145,14)" fg:x="934" fg:w="1"/><text x="97.9487%" y="367.50"></text></g><g><title>databend-query`_rjem_je_extent_alloc_wrapper (1 samples, 0.10%)</title><rect x="97.6987%" y="341" width="0.1046%" height="15" fill="rgb(235,15,28)" fg:x="934" fg:w="1"/><text x="97.9487%" y="351.50"></text></g><g><title>databend-query`extent_alloc_wrapper_hard (1 samples, 0.10%)</title><rect x="97.6987%" y="325" width="0.1046%" height="15" fill="rgb(237,206,10)" fg:x="934" fg:w="1"/><text x="97.9487%" y="335.50"></text></g><g><title>databend-query`_rjem_je_extent_alloc (1 samples, 0.10%)</title><rect x="97.6987%" y="309" width="0.1046%" height="15" fill="rgb(236,227,27)" fg:x="934" fg:w="1"/><text x="97.9487%" y="319.50"></text></g><g><title>databend-query`_rjem_je_base_alloc_extent (1 samples, 0.10%)</title><rect x="97.6987%" y="293" width="0.1046%" height="15" fill="rgb(246,83,35)" fg:x="934" fg:w="1"/><text x="97.9487%" y="303.50"></text></g><g><title>databend-query`base_alloc_impl (1 samples, 0.10%)</title><rect x="97.6987%" y="277" width="0.1046%" height="15" fill="rgb(220,136,24)" fg:x="934" fg:w="1"/><text x="97.9487%" y="287.50"></text></g><g><title>databend-query`malloc_mutex_lock (1 samples, 0.10%)</title><rect x="97.6987%" y="261" width="0.1046%" height="15" fill="rgb(217,3,25)" fg:x="934" fg:w="1"/><text x="97.9487%" y="271.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_trylock (1 samples, 0.10%)</title><rect x="97.6987%" y="245" width="0.1046%" height="15" fill="rgb(239,24,14)" fg:x="934" fg:w="1"/><text x="97.9487%" y="255.50"></text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Context::run_task (120 samples, 12.55%)</title><rect x="85.3556%" y="1045" width="12.5523%" height="15" fill="rgb(244,16,53)" fg:x="816" fg:w="120"/><text x="85.6056%" y="1055.50">databend-query`toki..</text></g><g><title>databend-query`std::thread::local::LocalKey&lt;T&gt;::with (120 samples, 12.55%)</title><rect x="85.3556%" y="1029" width="12.5523%" height="15" fill="rgb(208,175,44)" fg:x="816" fg:w="120"/><text x="85.6056%" y="1039.50">databend-query`std:..</text></g><g><title>databend-query`std::thread::local::LocalKey&lt;T&gt;::try_with (120 samples, 12.55%)</title><rect x="85.3556%" y="1013" width="12.5523%" height="15" fill="rgb(252,18,48)" fg:x="816" fg:w="120"/><text x="85.6056%" y="1023.50">databend-query`std:..</text></g><g><title>databend-query`tokio::coop::with_budget::_{{closure}} (120 samples, 12.55%)</title><rect x="85.3556%" y="997" width="12.5523%" height="15" fill="rgb(234,199,32)" fg:x="816" fg:w="120"/><text x="85.6056%" y="1007.50">databend-query`toki..</text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Context::run_task::_{{closure}} (120 samples, 12.55%)</title><rect x="85.3556%" y="981" width="12.5523%" height="15" fill="rgb(225,77,54)" fg:x="816" fg:w="120"/><text x="85.6056%" y="991.50">databend-query`toki..</text></g><g><title>databend-query`tokio::runtime::task::LocalNotified&lt;S&gt;::run (120 samples, 12.55%)</title><rect x="85.3556%" y="965" width="12.5523%" height="15" fill="rgb(225,42,25)" fg:x="816" fg:w="120"/><text x="85.6056%" y="975.50">databend-query`toki..</text></g><g><title>databend-query`tokio::runtime::task::raw::RawTask::poll (120 samples, 12.55%)</title><rect x="85.3556%" y="949" width="12.5523%" height="15" fill="rgb(242,227,46)" fg:x="816" fg:w="120"/><text x="85.6056%" y="959.50">databend-query`toki..</text></g><g><title>databend-query`tokio::runtime::task::raw::poll (120 samples, 12.55%)</title><rect x="85.3556%" y="933" width="12.5523%" height="15" fill="rgb(246,197,35)" fg:x="816" fg:w="120"/><text x="85.6056%" y="943.50">databend-query`toki..</text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (119 samples, 12.45%)</title><rect x="85.4603%" y="917" width="12.4477%" height="15" fill="rgb(215,159,26)" fg:x="817" fg:w="119"/><text x="85.7103%" y="927.50">databend-query`toki..</text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (118 samples, 12.34%)</title><rect x="85.5649%" y="901" width="12.3431%" height="15" fill="rgb(212,194,50)" fg:x="818" fg:w="118"/><text x="85.8149%" y="911.50">databend-query`tok..</text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future (118 samples, 12.34%)</title><rect x="85.5649%" y="885" width="12.3431%" height="15" fill="rgb(246,132,1)" fg:x="818" fg:w="118"/><text x="85.8149%" y="895.50">databend-query`tok..</text></g><g><title>databend-query`std::panic::catch_unwind (118 samples, 12.34%)</title><rect x="85.5649%" y="869" width="12.3431%" height="15" fill="rgb(217,71,7)" fg:x="818" fg:w="118"/><text x="85.8149%" y="879.50">databend-query`std..</text></g><g><title>databend-query`std::panicking::try (118 samples, 12.34%)</title><rect x="85.5649%" y="853" width="12.3431%" height="15" fill="rgb(252,59,32)" fg:x="818" fg:w="118"/><text x="85.8149%" y="863.50">databend-query`std..</text></g><g><title>databend-query`__rust_try (118 samples, 12.34%)</title><rect x="85.5649%" y="837" width="12.3431%" height="15" fill="rgb(253,204,25)" fg:x="818" fg:w="118"/><text x="85.8149%" y="847.50">databend-query`__r..</text></g><g><title>databend-query`std::panicking::try::do_call (118 samples, 12.34%)</title><rect x="85.5649%" y="821" width="12.3431%" height="15" fill="rgb(232,21,16)" fg:x="818" fg:w="118"/><text x="85.8149%" y="831.50">databend-query`std..</text></g><g><title>databend-query`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (118 samples, 12.34%)</title><rect x="85.5649%" y="805" width="12.3431%" height="15" fill="rgb(248,90,29)" fg:x="818" fg:w="118"/><text x="85.8149%" y="815.50">databend-query`&lt;co..</text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future::_{{closure}} (118 samples, 12.34%)</title><rect x="85.5649%" y="789" width="12.3431%" height="15" fill="rgb(249,223,7)" fg:x="818" fg:w="118"/><text x="85.8149%" y="799.50">databend-query`tok..</text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (118 samples, 12.34%)</title><rect x="85.5649%" y="773" width="12.3431%" height="15" fill="rgb(231,119,42)" fg:x="818" fg:w="118"/><text x="85.8149%" y="783.50">databend-query`tok..</text></g><g><title>databend-query`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (118 samples, 12.34%)</title><rect x="85.5649%" y="757" width="12.3431%" height="15" fill="rgb(215,41,35)" fg:x="818" fg:w="118"/><text x="85.8149%" y="767.50">databend-query`tok..</text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (118 samples, 12.34%)</title><rect x="85.5649%" y="741" width="12.3431%" height="15" fill="rgb(220,44,45)" fg:x="818" fg:w="118"/><text x="85.8149%" y="751.50">databend-query`tok..</text></g><g><title>databend-query`tracing::instrument::_::_&lt;impl tracing::instrument::Instrumented&lt;T&gt;&gt;::project (1 samples, 0.10%)</title><rect x="97.8033%" y="725" width="0.1046%" height="15" fill="rgb(253,197,36)" fg:x="935" fg:w="1"/><text x="98.0533%" y="735.50"></text></g><g><title>databend-query`tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (124 samples, 12.97%)</title><rect x="85.0418%" y="1429" width="12.9707%" height="15" fill="rgb(245,225,54)" fg:x="813" fg:w="124"/><text x="85.2918%" y="1439.50">databend-query`toki..</text></g><g><title>databend-query`tokio::runtime::blocking::pool::Inner::run (124 samples, 12.97%)</title><rect x="85.0418%" y="1413" width="12.9707%" height="15" fill="rgb(239,94,37)" fg:x="813" fg:w="124"/><text x="85.2918%" y="1423.50">databend-query`toki..</text></g><g><title>databend-query`tokio::runtime::blocking::pool::Task::run (122 samples, 12.76%)</title><rect x="85.2510%" y="1397" width="12.7615%" height="15" fill="rgb(242,217,10)" fg:x="815" fg:w="122"/><text x="85.5010%" y="1407.50">databend-query`toki..</text></g><g><title>databend-query`tokio::runtime::task::UnownedTask&lt;S&gt;::run (122 samples, 12.76%)</title><rect x="85.2510%" y="1381" width="12.7615%" height="15" fill="rgb(250,193,7)" fg:x="815" fg:w="122"/><text x="85.5010%" y="1391.50">databend-query`toki..</text></g><g><title>databend-query`tokio::runtime::task::raw::RawTask::poll (122 samples, 12.76%)</title><rect x="85.2510%" y="1365" width="12.7615%" height="15" fill="rgb(230,104,19)" fg:x="815" fg:w="122"/><text x="85.5010%" y="1375.50">databend-query`toki..</text></g><g><title>databend-query`tokio::runtime::task::raw::poll (122 samples, 12.76%)</title><rect x="85.2510%" y="1349" width="12.7615%" height="15" fill="rgb(230,181,4)" fg:x="815" fg:w="122"/><text x="85.5010%" y="1359.50">databend-query`toki..</text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (122 samples, 12.76%)</title><rect x="85.2510%" y="1333" width="12.7615%" height="15" fill="rgb(216,219,49)" fg:x="815" fg:w="122"/><text x="85.5010%" y="1343.50">databend-query`toki..</text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (122 samples, 12.76%)</title><rect x="85.2510%" y="1317" width="12.7615%" height="15" fill="rgb(254,144,0)" fg:x="815" fg:w="122"/><text x="85.5010%" y="1327.50">databend-query`toki..</text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future (121 samples, 12.66%)</title><rect x="85.3556%" y="1301" width="12.6569%" height="15" fill="rgb(205,209,38)" fg:x="816" fg:w="121"/><text x="85.6056%" y="1311.50">databend-query`toki..</text></g><g><title>databend-query`std::panic::catch_unwind (121 samples, 12.66%)</title><rect x="85.3556%" y="1285" width="12.6569%" height="15" fill="rgb(240,21,42)" fg:x="816" fg:w="121"/><text x="85.6056%" y="1295.50">databend-query`std:..</text></g><g><title>databend-query`std::panicking::try (121 samples, 12.66%)</title><rect x="85.3556%" y="1269" width="12.6569%" height="15" fill="rgb(241,132,3)" fg:x="816" fg:w="121"/><text x="85.6056%" y="1279.50">databend-query`std:..</text></g><g><title>databend-query`__rust_try (121 samples, 12.66%)</title><rect x="85.3556%" y="1253" width="12.6569%" height="15" fill="rgb(225,14,2)" fg:x="816" fg:w="121"/><text x="85.6056%" y="1263.50">databend-query`__ru..</text></g><g><title>databend-query`std::panicking::try::do_call (121 samples, 12.66%)</title><rect x="85.3556%" y="1237" width="12.6569%" height="15" fill="rgb(210,141,35)" fg:x="816" fg:w="121"/><text x="85.6056%" y="1247.50">databend-query`std:..</text></g><g><title>databend-query`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (121 samples, 12.66%)</title><rect x="85.3556%" y="1221" width="12.6569%" height="15" fill="rgb(251,14,44)" fg:x="816" fg:w="121"/><text x="85.6056%" y="1231.50">databend-query`&lt;cor..</text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future::_{{closure}} (121 samples, 12.66%)</title><rect x="85.3556%" y="1205" width="12.6569%" height="15" fill="rgb(247,48,18)" fg:x="816" fg:w="121"/><text x="85.6056%" y="1215.50">databend-query`toki..</text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (121 samples, 12.66%)</title><rect x="85.3556%" y="1189" width="12.6569%" height="15" fill="rgb(225,0,40)" fg:x="816" fg:w="121"/><text x="85.6056%" y="1199.50">databend-query`toki..</text></g><g><title>databend-query`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (121 samples, 12.66%)</title><rect x="85.3556%" y="1173" width="12.6569%" height="15" fill="rgb(221,31,33)" fg:x="816" fg:w="121"/><text x="85.6056%" y="1183.50">databend-query`toki..</text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::_{{closure}} (121 samples, 12.66%)</title><rect x="85.3556%" y="1157" width="12.6569%" height="15" fill="rgb(237,42,40)" fg:x="816" fg:w="121"/><text x="85.6056%" y="1167.50">databend-query`toki..</text></g><g><title>databend-query`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (121 samples, 12.66%)</title><rect x="85.3556%" y="1141" width="12.6569%" height="15" fill="rgb(233,51,29)" fg:x="816" fg:w="121"/><text x="85.6056%" y="1151.50">databend-query`&lt;tok..</text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Launch::launch::_{{closure}} (121 samples, 12.66%)</title><rect x="85.3556%" y="1125" width="12.6569%" height="15" fill="rgb(226,58,20)" fg:x="816" fg:w="121"/><text x="85.6056%" y="1135.50">databend-query`toki..</text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::run (121 samples, 12.66%)</title><rect x="85.3556%" y="1109" width="12.6569%" height="15" fill="rgb(208,98,7)" fg:x="816" fg:w="121"/><text x="85.6056%" y="1119.50">databend-query`toki..</text></g><g><title>databend-query`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (121 samples, 12.66%)</title><rect x="85.3556%" y="1093" width="12.6569%" height="15" fill="rgb(228,143,44)" fg:x="816" fg:w="121"/><text x="85.6056%" y="1103.50">databend-query`toki..</text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::run::_{{closure}} (121 samples, 12.66%)</title><rect x="85.3556%" y="1077" width="12.6569%" height="15" fill="rgb(246,55,38)" fg:x="816" fg:w="121"/><text x="85.6056%" y="1087.50">databend-query`toki..</text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Context::run (121 samples, 12.66%)</title><rect x="85.3556%" y="1061" width="12.6569%" height="15" fill="rgb(247,87,16)" fg:x="816" fg:w="121"/><text x="85.6056%" y="1071.50">databend-query`toki..</text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Core::steal_work (1 samples, 0.10%)</title><rect x="97.9079%" y="1045" width="0.1046%" height="15" fill="rgb(234,129,42)" fg:x="936" fg:w="1"/><text x="98.1579%" y="1055.50"></text></g><g><title>databend-query`tokio::util::rand::FastRand::fastrand_n (1 samples, 0.10%)</title><rect x="97.9079%" y="1029" width="0.1046%" height="15" fill="rgb(220,82,16)" fg:x="936" fg:w="1"/><text x="98.1579%" y="1039.50"></text></g><g><title>databend-query`std::panic::catch_unwind (875 samples, 91.53%)</title><rect x="6.5900%" y="1541" width="91.5272%" height="15" fill="rgb(211,88,4)" fg:x="63" fg:w="875"/><text x="6.8400%" y="1551.50">databend-query`std::panic::catch_unwind</text></g><g><title>databend-query`std::panicking::try (875 samples, 91.53%)</title><rect x="6.5900%" y="1525" width="91.5272%" height="15" fill="rgb(248,151,21)" fg:x="63" fg:w="875"/><text x="6.8400%" y="1535.50">databend-query`std::panicking::try</text></g><g><title>databend-query`__rust_try (875 samples, 91.53%)</title><rect x="6.5900%" y="1509" width="91.5272%" height="15" fill="rgb(238,163,6)" fg:x="63" fg:w="875"/><text x="6.8400%" y="1519.50">databend-query`__rust_try</text></g><g><title>databend-query`std::panicking::try::do_call (875 samples, 91.53%)</title><rect x="6.5900%" y="1493" width="91.5272%" height="15" fill="rgb(209,183,11)" fg:x="63" fg:w="875"/><text x="6.8400%" y="1503.50">databend-query`std::panicking::try::do_call</text></g><g><title>databend-query`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (875 samples, 91.53%)</title><rect x="6.5900%" y="1477" width="91.5272%" height="15" fill="rgb(219,37,20)" fg:x="63" fg:w="875"/><text x="6.8400%" y="1487.50">databend-query`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>databend-query`std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (875 samples, 91.53%)</title><rect x="6.5900%" y="1461" width="91.5272%" height="15" fill="rgb(210,158,4)" fg:x="63" fg:w="875"/><text x="6.8400%" y="1471.50">databend-query`std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>databend-query`std::sys_common::backtrace::__rust_begin_short_backtrace (875 samples, 91.53%)</title><rect x="6.5900%" y="1445" width="91.5272%" height="15" fill="rgb(221,167,53)" fg:x="63" fg:w="875"/><text x="6.8400%" y="1455.50">databend-query`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>databend-query`tracing_appender::worker::Worker&lt;T&gt;::worker_thread::_{{closure}} (1 samples, 0.10%)</title><rect x="98.0126%" y="1429" width="0.1046%" height="15" fill="rgb(237,151,45)" fg:x="937" fg:w="1"/><text x="98.2626%" y="1439.50"></text></g><g><title>databend-query`tracing_appender::worker::Worker&lt;T&gt;::work (1 samples, 0.10%)</title><rect x="98.0126%" y="1413" width="0.1046%" height="15" fill="rgb(231,39,3)" fg:x="937" fg:w="1"/><text x="98.2626%" y="1423.50"></text></g><g><title>databend-query`crossbeam_channel::channel::Receiver&lt;T&gt;::recv (1 samples, 0.10%)</title><rect x="98.0126%" y="1397" width="0.1046%" height="15" fill="rgb(212,167,28)" fg:x="937" fg:w="1"/><text x="98.2626%" y="1407.50"></text></g><g><title>databend-query`crossbeam_channel::flavors::array::Channel&lt;T&gt;::recv (1 samples, 0.10%)</title><rect x="98.0126%" y="1381" width="0.1046%" height="15" fill="rgb(232,178,8)" fg:x="937" fg:w="1"/><text x="98.2626%" y="1391.50"></text></g><g><title>databend-query`crossbeam_channel::context::Context::with (1 samples, 0.10%)</title><rect x="98.0126%" y="1365" width="0.1046%" height="15" fill="rgb(225,151,20)" fg:x="937" fg:w="1"/><text x="98.2626%" y="1375.50"></text></g><g><title>databend-query`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.10%)</title><rect x="98.0126%" y="1349" width="0.1046%" height="15" fill="rgb(238,3,37)" fg:x="937" fg:w="1"/><text x="98.2626%" y="1359.50"></text></g><g><title>databend-query`crossbeam_channel::context::Context::with::_{{closure}} (1 samples, 0.10%)</title><rect x="98.0126%" y="1333" width="0.1046%" height="15" fill="rgb(251,147,42)" fg:x="937" fg:w="1"/><text x="98.2626%" y="1343.50"></text></g><g><title>databend-query`crossbeam_channel::context::Context::with::_{{closure}} (1 samples, 0.10%)</title><rect x="98.0126%" y="1317" width="0.1046%" height="15" fill="rgb(208,173,10)" fg:x="937" fg:w="1"/><text x="98.2626%" y="1327.50"></text></g><g><title>databend-query`crossbeam_channel::flavors::array::Channel&lt;T&gt;::recv::_{{closure}} (1 samples, 0.10%)</title><rect x="98.0126%" y="1301" width="0.1046%" height="15" fill="rgb(246,225,4)" fg:x="937" fg:w="1"/><text x="98.2626%" y="1311.50"></text></g><g><title>databend-query`crossbeam_channel::context::Context::wait_until (1 samples, 0.10%)</title><rect x="98.0126%" y="1285" width="0.1046%" height="15" fill="rgb(248,102,6)" fg:x="937" fg:w="1"/><text x="98.2626%" y="1295.50"></text></g><g><title>databend-query`crossbeam_utils::backoff::Backoff::snooze (1 samples, 0.10%)</title><rect x="98.0126%" y="1269" width="0.1046%" height="15" fill="rgb(232,6,21)" fg:x="937" fg:w="1"/><text x="98.2626%" y="1279.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (1 samples, 0.10%)</title><rect x="98.0126%" y="1253" width="0.1046%" height="15" fill="rgb(221,179,22)" fg:x="937" fg:w="1"/><text x="98.2626%" y="1263.50"></text></g><g><title>databend-query`std::sys::unix::thread::guard::current (1 samples, 0.10%)</title><rect x="98.1172%" y="1541" width="0.1046%" height="15" fill="rgb(252,50,20)" fg:x="938" fg:w="1"/><text x="98.3672%" y="1551.50"></text></g><g><title>libsystem_pthread.dylib`pthread_get_stackaddr_np (1 samples, 0.10%)</title><rect x="98.1172%" y="1525" width="0.1046%" height="15" fill="rgb(222,56,38)" fg:x="938" fg:w="1"/><text x="98.3672%" y="1535.50"></text></g><g><title>databend-query`arena_malloc_small (1 samples, 0.10%)</title><rect x="98.4310%" y="1381" width="0.1046%" height="15" fill="rgb(206,193,29)" fg:x="941" fg:w="1"/><text x="98.6810%" y="1391.50"></text></g><g><title>databend-query`arena_bin_malloc_hard (1 samples, 0.10%)</title><rect x="98.4310%" y="1365" width="0.1046%" height="15" fill="rgb(239,192,45)" fg:x="941" fg:w="1"/><text x="98.6810%" y="1375.50"></text></g><g><title>databend-query`arena_bin_nonfull_slab_get (1 samples, 0.10%)</title><rect x="98.4310%" y="1349" width="0.1046%" height="15" fill="rgb(254,18,36)" fg:x="941" fg:w="1"/><text x="98.6810%" y="1359.50"></text></g><g><title>databend-query`arena_slab_alloc (1 samples, 0.10%)</title><rect x="98.4310%" y="1333" width="0.1046%" height="15" fill="rgb(221,127,11)" fg:x="941" fg:w="1"/><text x="98.6810%" y="1343.50"></text></g><g><title>databend-query`_rjem_je_extents_alloc (1 samples, 0.10%)</title><rect x="98.4310%" y="1317" width="0.1046%" height="15" fill="rgb(234,146,35)" fg:x="941" fg:w="1"/><text x="98.6810%" y="1327.50"></text></g><g><title>databend-query`extent_recycle (1 samples, 0.10%)</title><rect x="98.4310%" y="1301" width="0.1046%" height="15" fill="rgb(254,201,37)" fg:x="941" fg:w="1"/><text x="98.6810%" y="1311.50"></text></g><g><title>databend-query`extent_recycle_split (1 samples, 0.10%)</title><rect x="98.4310%" y="1285" width="0.1046%" height="15" fill="rgb(211,202,23)" fg:x="941" fg:w="1"/><text x="98.6810%" y="1295.50"></text></g><g><title>databend-query`extent_split_interior (1 samples, 0.10%)</title><rect x="98.4310%" y="1269" width="0.1046%" height="15" fill="rgb(237,91,2)" fg:x="941" fg:w="1"/><text x="98.6810%" y="1279.50"></text></g><g><title>databend-query`extent_split_impl (1 samples, 0.10%)</title><rect x="98.4310%" y="1253" width="0.1046%" height="15" fill="rgb(226,228,36)" fg:x="941" fg:w="1"/><text x="98.6810%" y="1263.50"></text></g><g><title>databend-query`extent_lock2 (1 samples, 0.10%)</title><rect x="98.4310%" y="1237" width="0.1046%" height="15" fill="rgb(213,63,50)" fg:x="941" fg:w="1"/><text x="98.6810%" y="1247.50"></text></g><g><title>databend-query`mutex_pool_lock2 (1 samples, 0.10%)</title><rect x="98.4310%" y="1221" width="0.1046%" height="15" fill="rgb(235,194,19)" fg:x="941" fg:w="1"/><text x="98.6810%" y="1231.50"></text></g><g><title>databend-query`mutex_pool_assert_not_held (1 samples, 0.10%)</title><rect x="98.4310%" y="1205" width="0.1046%" height="15" fill="rgb(207,204,18)" fg:x="941" fg:w="1"/><text x="98.6810%" y="1215.50"></text></g><g><title>databend-query`malloc_mutex_assert_not_owner (1 samples, 0.10%)</title><rect x="98.4310%" y="1189" width="0.1046%" height="15" fill="rgb(248,8,7)" fg:x="941" fg:w="1"/><text x="98.6810%" y="1199.50"></text></g><g><title>databend-query`_rjem_je_arena_palloc (3 samples, 0.31%)</title><rect x="98.4310%" y="1413" width="0.3138%" height="15" fill="rgb(223,145,47)" fg:x="941" fg:w="3"/><text x="98.6810%" y="1423.50"></text></g><g><title>databend-query`_rjem_je_arena_malloc_hard (3 samples, 0.31%)</title><rect x="98.4310%" y="1397" width="0.3138%" height="15" fill="rgb(228,84,11)" fg:x="941" fg:w="3"/><text x="98.6810%" y="1407.50"></text></g><g><title>libsystem_platform.dylib`__bzero (2 samples, 0.21%)</title><rect x="98.5356%" y="1381" width="0.2092%" height="15" fill="rgb(218,76,45)" fg:x="942" fg:w="2"/><text x="98.7856%" y="1391.50"></text></g><g><title>databend-query`__rg_alloc (4 samples, 0.42%)</title><rect x="98.4310%" y="1525" width="0.4184%" height="15" fill="rgb(223,80,15)" fg:x="941" fg:w="4"/><text x="98.6810%" y="1535.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::alloc (4 samples, 0.42%)</title><rect x="98.4310%" y="1509" width="0.4184%" height="15" fill="rgb(219,218,33)" fg:x="941" fg:w="4"/><text x="98.6810%" y="1519.50"></text></g><g><title>databend-query`_rjem_mallocx (4 samples, 0.42%)</title><rect x="98.4310%" y="1493" width="0.4184%" height="15" fill="rgb(208,51,11)" fg:x="941" fg:w="4"/><text x="98.6810%" y="1503.50"></text></g><g><title>databend-query`_rjem_je_tsd_fetch_slow (4 samples, 0.42%)</title><rect x="98.4310%" y="1477" width="0.4184%" height="15" fill="rgb(229,165,39)" fg:x="941" fg:w="4"/><text x="98.6810%" y="1487.50"></text></g><g><title>databend-query`tsd_data_init (4 samples, 0.42%)</title><rect x="98.4310%" y="1461" width="0.4184%" height="15" fill="rgb(241,100,24)" fg:x="941" fg:w="4"/><text x="98.6810%" y="1471.50"></text></g><g><title>databend-query`_rjem_je_tsd_tcache_enabled_data_init (4 samples, 0.42%)</title><rect x="98.4310%" y="1445" width="0.4184%" height="15" fill="rgb(228,14,23)" fg:x="941" fg:w="4"/><text x="98.6810%" y="1455.50"></text></g><g><title>databend-query`_rjem_je_tsd_tcache_data_init (4 samples, 0.42%)</title><rect x="98.4310%" y="1429" width="0.4184%" height="15" fill="rgb(247,116,52)" fg:x="941" fg:w="4"/><text x="98.6810%" y="1439.50"></text></g><g><title>databend-query`arena_choose (1 samples, 0.10%)</title><rect x="98.7448%" y="1413" width="0.1046%" height="15" fill="rgb(216,149,33)" fg:x="944" fg:w="1"/><text x="98.9948%" y="1423.50"></text></g><g><title>databend-query`arena_choose_impl (1 samples, 0.10%)</title><rect x="98.7448%" y="1397" width="0.1046%" height="15" fill="rgb(238,142,29)" fg:x="944" fg:w="1"/><text x="98.9948%" y="1407.50"></text></g><g><title>databend-query`_rjem_je_arena_choose_hard (1 samples, 0.10%)</title><rect x="98.7448%" y="1381" width="0.1046%" height="15" fill="rgb(224,83,40)" fg:x="944" fg:w="1"/><text x="98.9948%" y="1391.50"></text></g><g><title>databend-query`arena_init_locked (1 samples, 0.10%)</title><rect x="98.7448%" y="1365" width="0.1046%" height="15" fill="rgb(234,165,11)" fg:x="944" fg:w="1"/><text x="98.9948%" y="1375.50"></text></g><g><title>databend-query`_rjem_je_arena_new (1 samples, 0.10%)</title><rect x="98.7448%" y="1349" width="0.1046%" height="15" fill="rgb(215,96,23)" fg:x="944" fg:w="1"/><text x="98.9948%" y="1359.50"></text></g><g><title>databend-query`_rjem_je_base_new (1 samples, 0.10%)</title><rect x="98.7448%" y="1333" width="0.1046%" height="15" fill="rgb(233,179,26)" fg:x="944" fg:w="1"/><text x="98.9948%" y="1343.50"></text></g><g><title>databend-query`base_block_alloc (1 samples, 0.10%)</title><rect x="98.7448%" y="1317" width="0.1046%" height="15" fill="rgb(225,129,33)" fg:x="944" fg:w="1"/><text x="98.9948%" y="1327.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.21%)</title><rect x="98.8494%" y="1525" width="0.2092%" height="15" fill="rgb(237,49,13)" fg:x="945" fg:w="2"/><text x="99.0994%" y="1535.50"></text></g><g><title>databend-query`alloc::raw_vec::finish_grow (2 samples, 0.21%)</title><rect x="98.8494%" y="1509" width="0.2092%" height="15" fill="rgb(211,3,31)" fg:x="945" fg:w="2"/><text x="99.0994%" y="1519.50"></text></g><g><title>databend-query`__rg_alloc (2 samples, 0.21%)</title><rect x="98.8494%" y="1493" width="0.2092%" height="15" fill="rgb(216,152,19)" fg:x="945" fg:w="2"/><text x="99.0994%" y="1503.50"></text></g><g><title>databend-query`&lt;common_base::mem_allocator::allocators::platform::Allocator as core::alloc::global::GlobalAlloc&gt;::alloc (2 samples, 0.21%)</title><rect x="98.8494%" y="1477" width="0.2092%" height="15" fill="rgb(251,121,35)" fg:x="945" fg:w="2"/><text x="99.0994%" y="1487.50"></text></g><g><title>databend-query`_rjem_mallocx (2 samples, 0.21%)</title><rect x="98.8494%" y="1461" width="0.2092%" height="15" fill="rgb(210,217,47)" fg:x="945" fg:w="2"/><text x="99.0994%" y="1471.50"></text></g><g><title>databend-query`_rjem_je_tcache_alloc_small_hard (2 samples, 0.21%)</title><rect x="98.8494%" y="1445" width="0.2092%" height="15" fill="rgb(244,116,22)" fg:x="945" fg:w="2"/><text x="99.0994%" y="1455.50"></text></g><g><title>databend-query`_rjem_je_arena_tcache_fill_small (2 samples, 0.21%)</title><rect x="98.8494%" y="1429" width="0.2092%" height="15" fill="rgb(228,17,21)" fg:x="945" fg:w="2"/><text x="99.0994%" y="1439.50"></text></g><g><title>databend-query`arena_bin_malloc_hard (2 samples, 0.21%)</title><rect x="98.8494%" y="1413" width="0.2092%" height="15" fill="rgb(240,149,34)" fg:x="945" fg:w="2"/><text x="99.0994%" y="1423.50"></text></g><g><title>databend-query`arena_bin_nonfull_slab_get (2 samples, 0.21%)</title><rect x="98.8494%" y="1397" width="0.2092%" height="15" fill="rgb(208,125,47)" fg:x="945" fg:w="2"/><text x="99.0994%" y="1407.50"></text></g><g><title>databend-query`arena_slab_alloc (2 samples, 0.21%)</title><rect x="98.8494%" y="1381" width="0.2092%" height="15" fill="rgb(249,186,39)" fg:x="945" fg:w="2"/><text x="99.0994%" y="1391.50"></text></g><g><title>databend-query`arena_slab_alloc_hard (2 samples, 0.21%)</title><rect x="98.8494%" y="1365" width="0.2092%" height="15" fill="rgb(240,220,33)" fg:x="945" fg:w="2"/><text x="99.0994%" y="1375.50"></text></g><g><title>databend-query`_rjem_je_extent_alloc_wrapper (2 samples, 0.21%)</title><rect x="98.8494%" y="1349" width="0.2092%" height="15" fill="rgb(243,110,23)" fg:x="945" fg:w="2"/><text x="99.0994%" y="1359.50"></text></g><g><title>databend-query`extent_alloc_wrapper_hard (2 samples, 0.21%)</title><rect x="98.8494%" y="1333" width="0.2092%" height="15" fill="rgb(219,163,46)" fg:x="945" fg:w="2"/><text x="99.0994%" y="1343.50"></text></g><g><title>databend-query`extent_alloc_default_impl (2 samples, 0.21%)</title><rect x="98.8494%" y="1317" width="0.2092%" height="15" fill="rgb(216,126,30)" fg:x="945" fg:w="2"/><text x="99.0994%" y="1327.50"></text></g><g><title>databend-query`extent_alloc_core (2 samples, 0.21%)</title><rect x="98.8494%" y="1301" width="0.2092%" height="15" fill="rgb(208,139,11)" fg:x="945" fg:w="2"/><text x="99.0994%" y="1311.50"></text></g><g><title>databend-query`_rjem_je_extent_alloc_mmap (2 samples, 0.21%)</title><rect x="98.8494%" y="1285" width="0.2092%" height="15" fill="rgb(213,118,36)" fg:x="945" fg:w="2"/><text x="99.0994%" y="1295.50"></text></g><g><title>databend-query`_rjem_je_pages_map (2 samples, 0.21%)</title><rect x="98.8494%" y="1269" width="0.2092%" height="15" fill="rgb(226,43,17)" fg:x="945" fg:w="2"/><text x="99.0994%" y="1279.50"></text></g><g><title>databend-query`os_pages_map (2 samples, 0.21%)</title><rect x="98.8494%" y="1253" width="0.2092%" height="15" fill="rgb(254,217,4)" fg:x="945" fg:w="2"/><text x="99.0994%" y="1263.50"></text></g><g><title>libsystem_kernel.dylib`__mmap (2 samples, 0.21%)</title><rect x="98.8494%" y="1237" width="0.2092%" height="15" fill="rgb(210,134,47)" fg:x="945" fg:w="2"/><text x="99.0994%" y="1247.50"></text></g><g><title>dyld`dyld4::RuntimeState::_instantiateTLVs (1 samples, 0.10%)</title><rect x="99.0586%" y="1509" width="0.1046%" height="15" fill="rgb(237,24,49)" fg:x="947" fg:w="1"/><text x="99.3086%" y="1519.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.10%)</title><rect x="99.0586%" y="1493" width="0.1046%" height="15" fill="rgb(251,39,46)" fg:x="947" fg:w="1"/><text x="99.3086%" y="1503.50"></text></g><g><title>databend-query`core::ops::function::FnOnce::call_once{{vtable.shim}} (886 samples, 92.68%)</title><rect x="6.5900%" y="1573" width="92.6778%" height="15" fill="rgb(251,220,3)" fg:x="63" fg:w="886"/><text x="6.8400%" y="1583.50">databend-query`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>databend-query`std::thread::Builder::spawn_unchecked_::_{{closure}} (886 samples, 92.68%)</title><rect x="6.5900%" y="1557" width="92.6778%" height="15" fill="rgb(228,105,12)" fg:x="63" fg:w="886"/><text x="6.8400%" y="1567.50">databend-query`std::thread::Builder::spawn_unchecked_::_{{closure}}</text></g><g><title>databend-query`std::sys_common::thread_info::set (10 samples, 1.05%)</title><rect x="98.2218%" y="1541" width="1.0460%" height="15" fill="rgb(215,196,1)" fg:x="939" fg:w="10"/><text x="98.4718%" y="1551.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.21%)</title><rect x="99.0586%" y="1525" width="0.2092%" height="15" fill="rgb(214,33,39)" fg:x="947" fg:w="2"/><text x="99.3086%" y="1535.50"></text></g><g><title>dyld`memmove (1 samples, 0.10%)</title><rect x="99.1632%" y="1509" width="0.1046%" height="15" fill="rgb(220,19,52)" fg:x="948" fg:w="1"/><text x="99.4132%" y="1519.50"></text></g><g><title>databend-query`std::sys::unix::thread::Thread::new::thread_start (887 samples, 92.78%)</title><rect x="6.5900%" y="1589" width="92.7824%" height="15" fill="rgb(221,78,38)" fg:x="63" fg:w="887"/><text x="6.8400%" y="1599.50">databend-query`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>databend-query`std::sys::unix::stack_overflow::imp::make_handler (1 samples, 0.10%)</title><rect x="99.2678%" y="1573" width="0.1046%" height="15" fill="rgb(253,30,16)" fg:x="949" fg:w="1"/><text x="99.5178%" y="1583.50"></text></g><g><title>libsystem_kernel.dylib`__mmap (1 samples, 0.10%)</title><rect x="99.2678%" y="1557" width="0.1046%" height="15" fill="rgb(242,65,0)" fg:x="949" fg:w="1"/><text x="99.5178%" y="1567.50"></text></g><g><title>libsystem_kernel.dylib`__munmap (1 samples, 0.10%)</title><rect x="99.3724%" y="1589" width="0.1046%" height="15" fill="rgb(235,201,12)" fg:x="950" fg:w="1"/><text x="99.6224%" y="1599.50"></text></g><g><title>databend-query`arena_decay_stashed (1 samples, 0.10%)</title><rect x="99.4770%" y="1413" width="0.1046%" height="15" fill="rgb(233,161,9)" fg:x="951" fg:w="1"/><text x="99.7270%" y="1423.50"></text></g><g><title>databend-query`_rjem_je_extent_dalloc_wrapper (1 samples, 0.10%)</title><rect x="99.4770%" y="1397" width="0.1046%" height="15" fill="rgb(241,207,41)" fg:x="951" fg:w="1"/><text x="99.7270%" y="1407.50"></text></g><g><title>databend-query`extent_deregister (1 samples, 0.10%)</title><rect x="99.4770%" y="1381" width="0.1046%" height="15" fill="rgb(212,69,46)" fg:x="951" fg:w="1"/><text x="99.7270%" y="1391.50"></text></g><g><title>databend-query`extent_deregister_impl (1 samples, 0.10%)</title><rect x="99.4770%" y="1365" width="0.1046%" height="15" fill="rgb(239,69,45)" fg:x="951" fg:w="1"/><text x="99.7270%" y="1375.50"></text></g><g><title>databend-query`extent_unlock (1 samples, 0.10%)</title><rect x="99.4770%" y="1349" width="0.1046%" height="15" fill="rgb(242,117,48)" fg:x="951" fg:w="1"/><text x="99.7270%" y="1359.50"></text></g><g><title>databend-query`mutex_pool_unlock (1 samples, 0.10%)</title><rect x="99.4770%" y="1333" width="0.1046%" height="15" fill="rgb(228,41,36)" fg:x="951" fg:w="1"/><text x="99.7270%" y="1343.50"></text></g><g><title>databend-query`mutex_pool_assert_not_held (1 samples, 0.10%)</title><rect x="99.4770%" y="1317" width="0.1046%" height="15" fill="rgb(212,3,32)" fg:x="951" fg:w="1"/><text x="99.7270%" y="1327.50"></text></g><g><title>databend-query`malloc_mutex_assert_not_owner (1 samples, 0.10%)</title><rect x="99.4770%" y="1301" width="0.1046%" height="15" fill="rgb(233,41,49)" fg:x="951" fg:w="1"/><text x="99.7270%" y="1311.50"></text></g><g><title>databend-query`_rjem_je_arena_decay (2 samples, 0.21%)</title><rect x="99.4770%" y="1477" width="0.2092%" height="15" fill="rgb(252,170,49)" fg:x="951" fg:w="2"/><text x="99.7270%" y="1487.50"></text></g><g><title>databend-query`arena_decay_dirty (2 samples, 0.21%)</title><rect x="99.4770%" y="1461" width="0.2092%" height="15" fill="rgb(229,53,26)" fg:x="951" fg:w="2"/><text x="99.7270%" y="1471.50"></text></g><g><title>databend-query`arena_decay_impl (2 samples, 0.21%)</title><rect x="99.4770%" y="1445" width="0.2092%" height="15" fill="rgb(217,157,12)" fg:x="951" fg:w="2"/><text x="99.7270%" y="1455.50"></text></g><g><title>databend-query`arena_decay_to_limit (2 samples, 0.21%)</title><rect x="99.4770%" y="1429" width="0.2092%" height="15" fill="rgb(227,17,9)" fg:x="951" fg:w="2"/><text x="99.7270%" y="1439.50"></text></g><g><title>databend-query`arena_stash_decayed (1 samples, 0.10%)</title><rect x="99.5816%" y="1413" width="0.1046%" height="15" fill="rgb(218,84,12)" fg:x="952" fg:w="1"/><text x="99.8316%" y="1423.50"></text></g><g><title>databend-query`_rjem_je_extents_evict (1 samples, 0.10%)</title><rect x="99.5816%" y="1397" width="0.1046%" height="15" fill="rgb(212,79,24)" fg:x="952" fg:w="1"/><text x="99.8316%" y="1407.50"></text></g><g><title>databend-query`extent_try_delayed_coalesce (1 samples, 0.10%)</title><rect x="99.5816%" y="1381" width="0.1046%" height="15" fill="rgb(217,222,37)" fg:x="952" fg:w="1"/><text x="99.8316%" y="1391.50"></text></g><g><title>databend-query`extent_try_coalesce (1 samples, 0.10%)</title><rect x="99.5816%" y="1365" width="0.1046%" height="15" fill="rgb(246,208,8)" fg:x="952" fg:w="1"/><text x="99.8316%" y="1375.50"></text></g><g><title>databend-query`extent_try_coalesce_impl (1 samples, 0.10%)</title><rect x="99.5816%" y="1349" width="0.1046%" height="15" fill="rgb(244,133,10)" fg:x="952" fg:w="1"/><text x="99.8316%" y="1359.50"></text></g><g><title>databend-query`extent_coalesce (1 samples, 0.10%)</title><rect x="99.5816%" y="1333" width="0.1046%" height="15" fill="rgb(209,219,41)" fg:x="952" fg:w="1"/><text x="99.8316%" y="1343.50"></text></g><g><title>databend-query`extent_merge_impl (1 samples, 0.10%)</title><rect x="99.5816%" y="1317" width="0.1046%" height="15" fill="rgb(253,175,45)" fg:x="952" fg:w="1"/><text x="99.8316%" y="1327.50"></text></g><g><title>databend-query`extent_lock2 (1 samples, 0.10%)</title><rect x="99.5816%" y="1301" width="0.1046%" height="15" fill="rgb(235,100,37)" fg:x="952" fg:w="1"/><text x="99.8316%" y="1311.50"></text></g><g><title>databend-query`mutex_pool_lock2 (1 samples, 0.10%)</title><rect x="99.5816%" y="1285" width="0.1046%" height="15" fill="rgb(225,87,19)" fg:x="952" fg:w="1"/><text x="99.8316%" y="1295.50"></text></g><g><title>databend-query`mutex_pool_assert_not_held (1 samples, 0.10%)</title><rect x="99.5816%" y="1269" width="0.1046%" height="15" fill="rgb(217,152,17)" fg:x="952" fg:w="1"/><text x="99.8316%" y="1279.50"></text></g><g><title>databend-query`malloc_mutex_assert_not_owner (1 samples, 0.10%)</title><rect x="99.5816%" y="1253" width="0.1046%" height="15" fill="rgb(235,72,13)" fg:x="952" fg:w="1"/><text x="99.8316%" y="1263.50"></text></g><g><title>databend-query`_rjem_je_arena_dalloc_bin_junked_locked (1 samples, 0.10%)</title><rect x="99.7908%" y="1445" width="0.1046%" height="15" fill="rgb(233,140,18)" fg:x="954" fg:w="1"/><text x="100.0408%" y="1455.50"></text></g><g><title>databend-query`arena_dalloc_bin_locked_impl (1 samples, 0.10%)</title><rect x="99.7908%" y="1429" width="0.1046%" height="15" fill="rgb(207,212,28)" fg:x="954" fg:w="1"/><text x="100.0408%" y="1439.50"></text></g><g><title>databend-query`arena_slab_reg_dalloc (1 samples, 0.10%)</title><rect x="99.7908%" y="1413" width="0.1046%" height="15" fill="rgb(220,130,25)" fg:x="954" fg:w="1"/><text x="100.0408%" y="1423.50"></text></g><g><title>databend-query`arena_slab_regind (1 samples, 0.10%)</title><rect x="99.7908%" y="1397" width="0.1046%" height="15" fill="rgb(205,55,34)" fg:x="954" fg:w="1"/><text x="100.0408%" y="1407.50"></text></g><g><title>all (956 samples, 100%)</title><rect x="0.0000%" y="1637" width="100.0000%" height="15" fill="rgb(237,54,35)" fg:x="0" fg:w="956"/><text x="0.2500%" y="1647.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (893 samples, 93.41%)</title><rect x="6.5900%" y="1621" width="93.4100%" height="15" fill="rgb(208,67,23)" fg:x="63" fg:w="893"/><text x="6.8400%" y="1631.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (893 samples, 93.41%)</title><rect x="6.5900%" y="1605" width="93.4100%" height="15" fill="rgb(206,207,50)" fg:x="63" fg:w="893"/><text x="6.8400%" y="1615.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_exit (5 samples, 0.52%)</title><rect x="99.4770%" y="1589" width="0.5230%" height="15" fill="rgb(213,211,42)" fg:x="951" fg:w="5"/><text x="99.7270%" y="1599.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_tsd_cleanup (5 samples, 0.52%)</title><rect x="99.4770%" y="1573" width="0.5230%" height="15" fill="rgb(252,197,50)" fg:x="951" fg:w="5"/><text x="99.7270%" y="1583.50"></text></g><g><title>databend-query`tsd_cleanup_wrapper (5 samples, 0.52%)</title><rect x="99.4770%" y="1557" width="0.5230%" height="15" fill="rgb(251,211,41)" fg:x="951" fg:w="5"/><text x="99.7270%" y="1567.50"></text></g><g><title>databend-query`_rjem_je_tsd_cleanup (5 samples, 0.52%)</title><rect x="99.4770%" y="1541" width="0.5230%" height="15" fill="rgb(229,211,5)" fg:x="951" fg:w="5"/><text x="99.7270%" y="1551.50"></text></g><g><title>databend-query`tsd_do_data_cleanup (5 samples, 0.52%)</title><rect x="99.4770%" y="1525" width="0.5230%" height="15" fill="rgb(239,36,31)" fg:x="951" fg:w="5"/><text x="99.7270%" y="1535.50"></text></g><g><title>databend-query`_rjem_je_tcache_cleanup (5 samples, 0.52%)</title><rect x="99.4770%" y="1509" width="0.5230%" height="15" fill="rgb(248,67,31)" fg:x="951" fg:w="5"/><text x="99.7270%" y="1519.50"></text></g><g><title>databend-query`tcache_destroy (5 samples, 0.52%)</title><rect x="99.4770%" y="1493" width="0.5230%" height="15" fill="rgb(249,55,44)" fg:x="951" fg:w="5"/><text x="99.7270%" y="1503.50"></text></g><g><title>databend-query`tcache_flush_cache (3 samples, 0.31%)</title><rect x="99.6862%" y="1477" width="0.3138%" height="15" fill="rgb(216,82,12)" fg:x="953" fg:w="3"/><text x="99.9362%" y="1487.50"></text></g><g><title>databend-query`_rjem_je_tcache_bin_flush_small (3 samples, 0.31%)</title><rect x="99.6862%" y="1461" width="0.3138%" height="15" fill="rgb(242,174,1)" fg:x="953" fg:w="3"/><text x="99.9362%" y="1471.50"></text></g><g><title>databend-query`decay_ticker_get (1 samples, 0.10%)</title><rect x="99.8954%" y="1445" width="0.1046%" height="15" fill="rgb(208,120,29)" fg:x="955" fg:w="1"/><text x="100.1454%" y="1455.50"></text></g><g><title>databend-query`_rjem_je_arena_tdata_get_hard (1 samples, 0.10%)</title><rect x="99.8954%" y="1429" width="0.1046%" height="15" fill="rgb(221,105,43)" fg:x="955" fg:w="1"/><text x="100.1454%" y="1439.50"></text></g></svg></svg>