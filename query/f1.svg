<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="678" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="661.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="661.00"> </text><svg id="frames" x="10" width="1180" total_samples="190"><g><title>databend-query`databend_query::api::http_service::HttpService::build_router (1 samples, 0.53%)</title><rect x="0.0000%" y="437" width="0.5263%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="447.50"></text></g><g><title>databend-query`poem::route::router::Route::at (1 samples, 0.53%)</title><rect x="0.0000%" y="421" width="0.5263%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="431.50"></text></g><g><title>databend-query`memchr::memchr::fallback::memchr (1 samples, 0.53%)</title><rect x="0.0000%" y="405" width="0.5263%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="415.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 1.05%)</title><rect x="0.0000%" y="453" width="1.0526%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="2"/><text x="0.2500%" y="463.50"></text></g><g><title>databend-query`databend_query::servers::http::http_services::HttpHandler::build_router (1 samples, 0.53%)</title><rect x="0.5263%" y="437" width="0.5263%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.7763%" y="447.50"></text></g><g><title>databend-query`poem::route::router::Route::at (1 samples, 0.53%)</title><rect x="0.5263%" y="421" width="0.5263%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="0.7763%" y="431.50"></text></g><g><title>databend-query`regex::pool::Pool&lt;T&gt;::get_slow (1 samples, 0.53%)</title><rect x="0.5263%" y="405" width="0.5263%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="0.7763%" y="415.50"></text></g><g><title>databend-query`clap::build::command::App::new::new_inner (1 samples, 0.53%)</title><rect x="1.0526%" y="453" width="0.5263%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="1"/><text x="1.3026%" y="463.50"></text></g><g><title>databend-query`sled::db::Db::start_inner (1 samples, 0.53%)</title><rect x="1.5789%" y="405" width="0.5263%" height="15" fill="rgb(218,30,26)" fg:x="3" fg:w="1"/><text x="1.8289%" y="415.50"></text></g><g><title>databend-query`sled::pagecache::snapshot::read_snapshot_or_default (1 samples, 0.53%)</title><rect x="1.5789%" y="389" width="0.5263%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="1"/><text x="1.8289%" y="399.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.53%)</title><rect x="1.5789%" y="373" width="0.5263%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="1"/><text x="1.8289%" y="383.50"></text></g><g><title>databend-query`sled::meta::Meta::get_root (1 samples, 0.53%)</title><rect x="2.1053%" y="405" width="0.5263%" height="15" fill="rgb(240,193,28)" fg:x="4" fg:w="1"/><text x="2.3553%" y="415.50"></text></g><g><title>databend-query`std::fs::OpenOptions::_open (2 samples, 1.05%)</title><rect x="2.6316%" y="405" width="1.0526%" height="15" fill="rgb(216,20,37)" fg:x="5" fg:w="2"/><text x="2.8816%" y="415.50"></text></g><g><title>databend-query`std::sys::unix::fs::File::open_c (2 samples, 1.05%)</title><rect x="2.6316%" y="389" width="1.0526%" height="15" fill="rgb(206,188,39)" fg:x="5" fg:w="2"/><text x="2.8816%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__open (2 samples, 1.05%)</title><rect x="2.6316%" y="373" width="1.0526%" height="15" fill="rgb(217,207,13)" fg:x="5" fg:w="2"/><text x="2.8816%" y="383.50"></text></g><g><title>databend-query`std::sys::unix::fs::rename (1 samples, 0.53%)</title><rect x="3.6842%" y="405" width="0.5263%" height="15" fill="rgb(231,73,38)" fg:x="7" fg:w="1"/><text x="3.9342%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__rename (1 samples, 0.53%)</title><rect x="3.6842%" y="389" width="0.5263%" height="15" fill="rgb(225,20,46)" fg:x="7" fg:w="1"/><text x="3.9342%" y="399.50"></text></g><g><title>databend-query`sled::config::Config::open (6 samples, 3.16%)</title><rect x="1.5789%" y="421" width="3.1579%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="6"/><text x="1.8289%" y="431.50">dat..</text></g><g><title>libsystem_kernel.dylib`stat (1 samples, 0.53%)</title><rect x="4.2105%" y="405" width="0.5263%" height="15" fill="rgb(221,200,47)" fg:x="8" fg:w="1"/><text x="4.4605%" y="415.50"></text></g><g><title>databend-query`common_meta_sled_store::db::init_sled_db (7 samples, 3.68%)</title><rect x="1.5789%" y="453" width="3.6842%" height="15" fill="rgb(226,26,5)" fg:x="3" fg:w="7"/><text x="1.8289%" y="463.50">data..</text></g><g><title>databend-query`sled::open (7 samples, 3.68%)</title><rect x="1.5789%" y="437" width="3.6842%" height="15" fill="rgb(249,33,26)" fg:x="3" fg:w="7"/><text x="1.8289%" y="447.50">data..</text></g><g><title>libsystem_kernel.dylib`close (1 samples, 0.53%)</title><rect x="4.7368%" y="421" width="0.5263%" height="15" fill="rgb(235,183,28)" fg:x="9" fg:w="1"/><text x="4.9868%" y="431.50"></text></g><g><title>databend-query`crossbeam_channel::channel::bounded (1 samples, 0.53%)</title><rect x="5.2632%" y="437" width="0.5263%" height="15" fill="rgb(221,5,38)" fg:x="10" fg:w="1"/><text x="5.5132%" y="447.50"></text></g><g><title>databend-query`tracing_appender::non_blocking (1 samples, 0.53%)</title><rect x="5.7895%" y="437" width="0.5263%" height="15" fill="rgb(247,18,42)" fg:x="11" fg:w="1"/><text x="6.0395%" y="447.50"></text></g><g><title>databend-query`crossbeam_channel::channel::bounded (1 samples, 0.53%)</title><rect x="5.7895%" y="421" width="0.5263%" height="15" fill="rgb(241,131,45)" fg:x="11" fg:w="1"/><text x="6.0395%" y="431.50"></text></g><g><title>databend-query`regex::compile::Compiler::compile (1 samples, 0.53%)</title><rect x="6.3158%" y="341" width="0.5263%" height="15" fill="rgb(249,31,29)" fg:x="12" fg:w="1"/><text x="6.5658%" y="351.50"></text></g><g><title>databend-query`regex::compile::Compiler::c (1 samples, 0.53%)</title><rect x="6.3158%" y="325" width="0.5263%" height="15" fill="rgb(225,111,53)" fg:x="12" fg:w="1"/><text x="6.5658%" y="335.50"></text></g><g><title>databend-query`regex::compile::Compiler::c (1 samples, 0.53%)</title><rect x="6.3158%" y="309" width="0.5263%" height="15" fill="rgb(238,160,17)" fg:x="12" fg:w="1"/><text x="6.5658%" y="319.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_repeat_range (1 samples, 0.53%)</title><rect x="6.3158%" y="293" width="0.5263%" height="15" fill="rgb(214,148,48)" fg:x="12" fg:w="1"/><text x="6.5658%" y="303.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_concat (1 samples, 0.53%)</title><rect x="6.3158%" y="277" width="0.5263%" height="15" fill="rgb(232,36,49)" fg:x="12" fg:w="1"/><text x="6.5658%" y="287.50"></text></g><g><title>databend-query`regex::compile::Compiler::c (1 samples, 0.53%)</title><rect x="6.3158%" y="261" width="0.5263%" height="15" fill="rgb(209,103,24)" fg:x="12" fg:w="1"/><text x="6.5658%" y="271.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_repeat_one_or_more (1 samples, 0.53%)</title><rect x="6.3158%" y="245" width="0.5263%" height="15" fill="rgb(229,88,8)" fg:x="12" fg:w="1"/><text x="6.5658%" y="255.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_class (1 samples, 0.53%)</title><rect x="6.3158%" y="229" width="0.5263%" height="15" fill="rgb(213,181,19)" fg:x="12" fg:w="1"/><text x="6.5658%" y="239.50"></text></g><g><title>databend-query`regex::compile::CompileClass::c_utf8_seq (1 samples, 0.53%)</title><rect x="6.3158%" y="213" width="0.5263%" height="15" fill="rgb(254,191,54)" fg:x="12" fg:w="1"/><text x="6.5658%" y="223.50"></text></g><g><title>databend-query`regex::compile::SuffixCache::get (1 samples, 0.53%)</title><rect x="6.3158%" y="197" width="0.5263%" height="15" fill="rgb(241,83,37)" fg:x="12" fg:w="1"/><text x="6.5658%" y="207.50"></text></g><g><title>databend-query`common_tracing::logging::init_global_tracing (4 samples, 2.11%)</title><rect x="5.2632%" y="453" width="2.1053%" height="15" fill="rgb(233,36,39)" fg:x="10" fg:w="4"/><text x="5.5132%" y="463.50">d..</text></g><g><title>databend-query`tracing_subscriber::filter::env::EnvFilter::new (2 samples, 1.05%)</title><rect x="6.3158%" y="437" width="1.0526%" height="15" fill="rgb(226,3,54)" fg:x="12" fg:w="2"/><text x="6.5658%" y="447.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 1.05%)</title><rect x="6.3158%" y="421" width="1.0526%" height="15" fill="rgb(245,192,40)" fg:x="12" fg:w="2"/><text x="6.5658%" y="431.50"></text></g><g><title>databend-query`tracing_subscriber::filter::env::directive::Directive::parse (2 samples, 1.05%)</title><rect x="6.3158%" y="405" width="1.0526%" height="15" fill="rgb(238,167,29)" fg:x="12" fg:w="2"/><text x="6.5658%" y="415.50"></text></g><g><title>databend-query`&lt;tracing_subscriber::filter::env::directive::Directive::parse::DIRECTIVE_RE as core::ops::deref::Deref&gt;::deref (2 samples, 1.05%)</title><rect x="6.3158%" y="389" width="1.0526%" height="15" fill="rgb(232,182,51)" fg:x="12" fg:w="2"/><text x="6.5658%" y="399.50"></text></g><g><title>databend-query`regex::re_unicode::Regex::new (2 samples, 1.05%)</title><rect x="6.3158%" y="373" width="1.0526%" height="15" fill="rgb(231,60,39)" fg:x="12" fg:w="2"/><text x="6.5658%" y="383.50"></text></g><g><title>databend-query`regex::exec::ExecBuilder::build (2 samples, 1.05%)</title><rect x="6.3158%" y="357" width="1.0526%" height="15" fill="rgb(208,69,12)" fg:x="12" fg:w="2"/><text x="6.5658%" y="367.50"></text></g><g><title>databend-query`regex_syntax::parser::Parser::parse (1 samples, 0.53%)</title><rect x="6.8421%" y="341" width="0.5263%" height="15" fill="rgb(235,93,37)" fg:x="13" fg:w="1"/><text x="7.0921%" y="351.50"></text></g><g><title>databend-query`databend_query::config::outer_v0::Config::load (1 samples, 0.53%)</title><rect x="7.3684%" y="453" width="0.5263%" height="15" fill="rgb(213,116,39)" fg:x="14" fg:w="1"/><text x="7.6184%" y="463.50"></text></g><g><title>databend-query`serfig::builder::Builder&lt;V&gt;::build (1 samples, 0.53%)</title><rect x="7.3684%" y="437" width="0.5263%" height="15" fill="rgb(222,207,29)" fg:x="14" fg:w="1"/><text x="7.6184%" y="447.50"></text></g><g><title>databend-query`databend_query::config::outer_v0::_::_&lt;impl serde::ser::Serialize for databend_query::config::outer_v0::Config&gt;::serialize (1 samples, 0.53%)</title><rect x="7.3684%" y="421" width="0.5263%" height="15" fill="rgb(206,96,30)" fg:x="14" fg:w="1"/><text x="7.6184%" y="431.50"></text></g><g><title>databend-query`&lt;serde_bridge::ser::StructSerializer as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.53%)</title><rect x="7.3684%" y="405" width="0.5263%" height="15" fill="rgb(218,138,4)" fg:x="14" fg:w="1"/><text x="7.6184%" y="415.50"></text></g><g><title>databend-query`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.53%)</title><rect x="7.3684%" y="389" width="0.5263%" height="15" fill="rgb(250,191,14)" fg:x="14" fg:w="1"/><text x="7.6184%" y="399.50"></text></g><g><title>databend-query`&lt;common_contexts::dal::dal_runtime::DalRuntime as opendal::layers::layer::Layer&gt;::layer (1 samples, 0.53%)</title><rect x="7.8947%" y="437" width="0.5263%" height="15" fill="rgb(239,60,40)" fg:x="15" fg:w="1"/><text x="8.1447%" y="447.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.53%)</title><rect x="8.4211%" y="437" width="0.5263%" height="15" fill="rgb(206,27,48)" fg:x="16" fg:w="1"/><text x="8.6711%" y="447.50"></text></g><g><title>databend-query`common_meta_api::schema_api_impl::serialize_struct (1 samples, 0.53%)</title><rect x="8.4211%" y="421" width="0.5263%" height="15" fill="rgb(225,35,8)" fg:x="16" fg:w="1"/><text x="8.6711%" y="431.50"></text></g><g><title>databend-query`prost::encoding::uint64::encode (1 samples, 0.53%)</title><rect x="8.4211%" y="405" width="0.5263%" height="15" fill="rgb(250,213,24)" fg:x="16" fg:w="1"/><text x="8.6711%" y="415.50"></text></g><g><title>databend-query`std::rt::lang_start_internal (18 samples, 9.47%)</title><rect x="0.0000%" y="581" width="9.4737%" height="15" fill="rgb(247,123,22)" fg:x="0" fg:w="18"/><text x="0.2500%" y="591.50">databend-query..</text></g><g><title>databend-query`std::rt::lang_start::_{{closure}} (18 samples, 9.47%)</title><rect x="0.0000%" y="565" width="9.4737%" height="15" fill="rgb(231,138,38)" fg:x="0" fg:w="18"/><text x="0.2500%" y="575.50">databend-query..</text></g><g><title>databend-query`std::sys_common::backtrace::__rust_begin_short_backtrace (18 samples, 9.47%)</title><rect x="0.0000%" y="549" width="9.4737%" height="15" fill="rgb(231,145,46)" fg:x="0" fg:w="18"/><text x="0.2500%" y="559.50">databend-query..</text></g><g><title>databend-query`databend_query::main (18 samples, 9.47%)</title><rect x="0.0000%" y="533" width="9.4737%" height="15" fill="rgb(251,118,11)" fg:x="0" fg:w="18"/><text x="0.2500%" y="543.50">databend-query..</text></g><g><title>databend-query`tokio::runtime::handle::Handle::block_on (18 samples, 9.47%)</title><rect x="0.0000%" y="517" width="9.4737%" height="15" fill="rgb(217,147,25)" fg:x="0" fg:w="18"/><text x="0.2500%" y="527.50">databend-query..</text></g><g><title>databend-query`tokio::runtime::enter::Enter::block_on (18 samples, 9.47%)</title><rect x="0.0000%" y="501" width="9.4737%" height="15" fill="rgb(247,81,37)" fg:x="0" fg:w="18"/><text x="0.2500%" y="511.50">databend-query..</text></g><g><title>databend-query`std::thread::local::LocalKey&lt;T&gt;::with (18 samples, 9.47%)</title><rect x="0.0000%" y="485" width="9.4737%" height="15" fill="rgb(209,12,38)" fg:x="0" fg:w="18"/><text x="0.2500%" y="495.50">databend-query..</text></g><g><title>databend-query`databend_query::main::main_impl::_{{closure}} (18 samples, 9.47%)</title><rect x="0.0000%" y="469" width="9.4737%" height="15" fill="rgb(227,1,9)" fg:x="0" fg:w="18"/><text x="0.2500%" y="479.50">databend-query..</text></g><g><title>databend-query`databend_query::sessions::session_mgr::SessionManager::from_conf::_{{closure}} (3 samples, 1.58%)</title><rect x="7.8947%" y="453" width="1.5789%" height="15" fill="rgb(248,47,43)" fg:x="15" fg:w="3"/><text x="8.1447%" y="463.50"></text></g><g><title>databend-query`databend_query::catalogs::default::table_memory_meta::InMemoryMetas::init_db (1 samples, 0.53%)</title><rect x="8.9474%" y="437" width="0.5263%" height="15" fill="rgb(221,10,30)" fg:x="17" fg:w="1"/><text x="9.1974%" y="447.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.53%)</title><rect x="8.9474%" y="421" width="0.5263%" height="15" fill="rgb(210,229,1)" fg:x="17" fg:w="1"/><text x="9.1974%" y="431.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.53%)</title><rect x="8.9474%" y="405" width="0.5263%" height="15" fill="rgb(222,148,37)" fg:x="17" fg:w="1"/><text x="9.1974%" y="415.50"></text></g><g><title>dyld`start (19 samples, 10.00%)</title><rect x="0.0000%" y="613" width="10.0000%" height="15" fill="rgb(234,67,33)" fg:x="0" fg:w="19"/><text x="0.2500%" y="623.50">dyld`start</text></g><g><title>databend-query`main (19 samples, 10.00%)</title><rect x="0.0000%" y="597" width="10.0000%" height="15" fill="rgb(247,98,35)" fg:x="0" fg:w="19"/><text x="0.2500%" y="607.50">databend-query..</text></g><g><title>databend-query`std::sys_common::thread_info::set (1 samples, 0.53%)</title><rect x="9.4737%" y="581" width="0.5263%" height="15" fill="rgb(247,138,52)" fg:x="18" fg:w="1"/><text x="9.7237%" y="591.50"></text></g><g><title>databend-query`common_base::base::runtime_tracker::RuntimeTracker::on_start_thread::_{{closure}} (1 samples, 0.53%)</title><rect x="10.0000%" y="533" width="0.5263%" height="15" fill="rgb(213,79,30)" fg:x="19" fg:w="1"/><text x="10.2500%" y="543.50"></text></g><g><title>databend-query`_rjem_mallocx (1 samples, 0.53%)</title><rect x="10.0000%" y="517" width="0.5263%" height="15" fill="rgb(246,177,23)" fg:x="19" fg:w="1"/><text x="10.2500%" y="527.50"></text></g><g><title>databend-query`_rjem_je_tcache_alloc_small_hard (1 samples, 0.53%)</title><rect x="10.0000%" y="501" width="0.5263%" height="15" fill="rgb(230,62,27)" fg:x="19" fg:w="1"/><text x="10.2500%" y="511.50"></text></g><g><title>databend-query`_rjem_je_arena_tcache_fill_small (1 samples, 0.53%)</title><rect x="10.0000%" y="485" width="0.5263%" height="15" fill="rgb(216,154,8)" fg:x="19" fg:w="1"/><text x="10.2500%" y="495.50"></text></g><g><title>databend-query`arena_bin_malloc_hard (1 samples, 0.53%)</title><rect x="10.0000%" y="469" width="0.5263%" height="15" fill="rgb(244,35,45)" fg:x="19" fg:w="1"/><text x="10.2500%" y="479.50"></text></g><g><title>databend-query`_rjem_je_extent_alloc_wrapper (1 samples, 0.53%)</title><rect x="10.0000%" y="453" width="0.5263%" height="15" fill="rgb(251,115,12)" fg:x="19" fg:w="1"/><text x="10.2500%" y="463.50"></text></g><g><title>databend-query`_rjem_je_extent_alloc_mmap (1 samples, 0.53%)</title><rect x="10.0000%" y="437" width="0.5263%" height="15" fill="rgb(240,54,50)" fg:x="19" fg:w="1"/><text x="10.2500%" y="447.50"></text></g><g><title>databend-query`_rjem_je_pages_map (1 samples, 0.53%)</title><rect x="10.0000%" y="421" width="0.5263%" height="15" fill="rgb(233,84,52)" fg:x="19" fg:w="1"/><text x="10.2500%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__mmap (1 samples, 0.53%)</title><rect x="10.0000%" y="405" width="0.5263%" height="15" fill="rgb(207,117,47)" fg:x="19" fg:w="1"/><text x="10.2500%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;tokio::runtime::Runtime&gt; (1 samples, 0.53%)</title><rect x="10.5263%" y="533" width="0.5263%" height="15" fill="rgb(249,43,39)" fg:x="20" fg:w="1"/><text x="10.7763%" y="543.50"></text></g><g><title>databend-query`tokio::runtime::blocking::pool::BlockingPool::shutdown (1 samples, 0.53%)</title><rect x="10.5263%" y="517" width="0.5263%" height="15" fill="rgb(209,38,44)" fg:x="20" fg:w="1"/><text x="10.7763%" y="527.50"></text></g><g><title>databend-query`std::thread::JoinHandle&lt;T&gt;::join (1 samples, 0.53%)</title><rect x="10.5263%" y="501" width="0.5263%" height="15" fill="rgb(236,212,23)" fg:x="20" fg:w="1"/><text x="10.7763%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.53%)</title><rect x="10.5263%" y="485" width="0.5263%" height="15" fill="rgb(242,79,21)" fg:x="20" fg:w="1"/><text x="10.7763%" y="495.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;tokio::runtime::handle::Handle&gt; (1 samples, 0.53%)</title><rect x="11.0526%" y="533" width="0.5263%" height="15" fill="rgb(211,96,35)" fg:x="21" fg:w="1"/><text x="11.3026%" y="543.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.53%)</title><rect x="11.0526%" y="517" width="0.5263%" height="15" fill="rgb(253,215,40)" fg:x="21" fg:w="1"/><text x="11.3026%" y="527.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;tokio::runtime::thread_pool::worker::Shared&gt; (1 samples, 0.53%)</title><rect x="11.0526%" y="501" width="0.5263%" height="15" fill="rgb(211,81,21)" fg:x="21" fg:w="1"/><text x="11.3026%" y="511.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[tokio::runtime::thread_pool::worker::Remote]&gt;&gt; (1 samples, 0.53%)</title><rect x="11.0526%" y="485" width="0.5263%" height="15" fill="rgb(208,190,38)" fg:x="21" fg:w="1"/><text x="11.3026%" y="495.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.53%)</title><rect x="11.0526%" y="469" width="0.5263%" height="15" fill="rgb(235,213,38)" fg:x="21" fg:w="1"/><text x="11.3026%" y="479.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.53%)</title><rect x="11.0526%" y="453" width="0.5263%" height="15" fill="rgb(237,122,38)" fg:x="21" fg:w="1"/><text x="11.3026%" y="463.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;tokio::park::either::Either&lt;tokio::process::imp::driver::Driver,tokio::park::thread::ParkThread&gt;&gt; (1 samples, 0.53%)</title><rect x="11.0526%" y="437" width="0.5263%" height="15" fill="rgb(244,218,35)" fg:x="21" fg:w="1"/><text x="11.3026%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`close (1 samples, 0.53%)</title><rect x="11.0526%" y="421" width="0.5263%" height="15" fill="rgb(240,68,47)" fg:x="21" fg:w="1"/><text x="11.3026%" y="431.50"></text></g><g><title>databend-query`&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.53%)</title><rect x="11.5789%" y="501" width="0.5263%" height="15" fill="rgb(210,16,53)" fg:x="22" fg:w="1"/><text x="11.8289%" y="511.50"></text></g><g><title>databend-query`&lt;databend_query::pipelines::new::processors::resize_processor::ResizeProcessor as databend_query::pipelines::new::processors::processor::Processor&gt;::event (1 samples, 0.53%)</title><rect x="12.1053%" y="485" width="0.5263%" height="15" fill="rgb(235,124,12)" fg:x="23" fg:w="1"/><text x="12.3553%" y="495.50"></text></g><g><title>databend-query`&lt;databend_query::pipelines::new::processors::transforms::transform_hash_join::TransformHashJoinProbe as databend_query::pipelines::new::processors::processor::Processor&gt;::event (1 samples, 0.53%)</title><rect x="12.6316%" y="485" width="0.5263%" height="15" fill="rgb(224,169,11)" fg:x="24" fg:w="1"/><text x="12.8816%" y="495.50"></text></g><g><title>databend-query`_rjem_mallocx (1 samples, 0.53%)</title><rect x="13.1579%" y="485" width="0.5263%" height="15" fill="rgb(250,166,2)" fg:x="25" fg:w="1"/><text x="13.4079%" y="495.50"></text></g><g><title>databend-query`&lt;databend_query::pipelines::new::processors::sinks::sync_sink::Sinker&lt;T&gt; as databend_query::pipelines::new::processors::processor::Processor&gt;::event (1 samples, 0.53%)</title><rect x="14.7368%" y="469" width="0.5263%" height="15" fill="rgb(242,216,29)" fg:x="28" fg:w="1"/><text x="14.9868%" y="479.50"></text></g><g><title>databend-query`&lt;databend_query::pipelines::new::processors::transforms::transform::Transformer&lt;T&gt; as databend_query::pipelines::new::processors::processor::Processor&gt;::event (4 samples, 2.11%)</title><rect x="15.2632%" y="469" width="2.1053%" height="15" fill="rgb(230,116,27)" fg:x="29" fg:w="4"/><text x="15.5132%" y="479.50">d..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (46 samples, 24.21%)</title><rect x="17.3684%" y="469" width="24.2105%" height="15" fill="rgb(228,99,48)" fg:x="33" fg:w="46"/><text x="17.6184%" y="479.50">libsystem_platform.dylib`_platform_memm..</text></g><g><title>databend-query`databend_query::pipelines::new::executor::executor_graph::RunningGraph::schedule_queue (57 samples, 30.00%)</title><rect x="12.1053%" y="501" width="30.0000%" height="15" fill="rgb(253,11,6)" fg:x="23" fg:w="57"/><text x="12.3553%" y="511.50">databend-query`databend_query::pipelines::new::e..</text></g><g><title>databend-query`databend_query::pipelines::new::executor::executor_graph::ExecutingGraph::schedule_queue (54 samples, 28.42%)</title><rect x="13.6842%" y="485" width="28.4211%" height="15" fill="rgb(247,143,39)" fg:x="26" fg:w="54"/><text x="13.9342%" y="495.50">databend-query`databend_query::pipelines::new:..</text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (1 samples, 0.53%)</title><rect x="41.5789%" y="469" width="0.5263%" height="15" fill="rgb(236,97,10)" fg:x="79" fg:w="1"/><text x="41.8289%" y="479.50"></text></g><g><title>databend-query`databend_query::pipelines::new::executor::executor_graph::ScheduleQueue::schedule (6 samples, 3.16%)</title><rect x="42.1053%" y="501" width="3.1579%" height="15" fill="rgb(233,208,19)" fg:x="80" fg:w="6"/><text x="42.3553%" y="511.50">dat..</text></g><g><title>databend-query`databend_query::pipelines::new::executor::executor_graph::ScheduleQueue::schedule_tail (6 samples, 3.16%)</title><rect x="42.1053%" y="485" width="3.1579%" height="15" fill="rgb(216,164,2)" fg:x="80" fg:w="6"/><text x="42.3553%" y="495.50">dat..</text></g><g><title>databend-query`databend_query::pipelines::new::executor::executor_tasks::ExecutorTasksQueue::push_tasks (5 samples, 2.63%)</title><rect x="42.6316%" y="469" width="2.6316%" height="15" fill="rgb(220,129,5)" fg:x="81" fg:w="5"/><text x="42.8816%" y="479.50">da..</text></g><g><title>databend-query`parking_lot::raw_mutex::RawMutex::unlock_slow (5 samples, 2.63%)</title><rect x="42.6316%" y="453" width="2.6316%" height="15" fill="rgb(242,17,10)" fg:x="81" fg:w="5"/><text x="42.8816%" y="463.50">da..</text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (4 samples, 2.11%)</title><rect x="43.1579%" y="437" width="2.1053%" height="15" fill="rgb(242,107,0)" fg:x="82" fg:w="4"/><text x="43.4079%" y="447.50">l..</text></g><g><title>databend-query`parking_lot::condvar::Condvar::wait_until_internal (6 samples, 3.16%)</title><rect x="45.2632%" y="469" width="3.1579%" height="15" fill="rgb(251,28,31)" fg:x="86" fg:w="6"/><text x="45.5132%" y="479.50">dat..</text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (6 samples, 3.16%)</title><rect x="45.2632%" y="453" width="3.1579%" height="15" fill="rgb(233,223,10)" fg:x="86" fg:w="6"/><text x="45.5132%" y="463.50">lib..</text></g><g><title>databend-query`databend_query::pipelines::new::executor::executor_tasks::ExecutorTasksQueue::steal_task_to_context (7 samples, 3.68%)</title><rect x="45.2632%" y="501" width="3.6842%" height="15" fill="rgb(215,21,27)" fg:x="86" fg:w="7"/><text x="45.5132%" y="511.50">data..</text></g><g><title>databend-query`databend_query::pipelines::new::executor::executor_condvar::WorkersCondvar::wait (7 samples, 3.68%)</title><rect x="45.2632%" y="485" width="3.6842%" height="15" fill="rgb(232,23,21)" fg:x="86" fg:w="7"/><text x="45.5132%" y="495.50">data..</text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.53%)</title><rect x="48.4211%" y="469" width="0.5263%" height="15" fill="rgb(244,5,23)" fg:x="92" fg:w="1"/><text x="48.6711%" y="479.50"></text></g><g><title>databend-query`std::thread::park (1 samples, 0.53%)</title><rect x="48.9474%" y="437" width="0.5263%" height="15" fill="rgb(226,81,46)" fg:x="93" fg:w="1"/><text x="49.1974%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (9 samples, 4.74%)</title><rect x="49.4737%" y="437" width="4.7368%" height="15" fill="rgb(247,70,30)" fg:x="94" fg:w="9"/><text x="49.7237%" y="447.50">libsys..</text></g><g><title>databend-query`&lt;databend_query::pipelines::new::processors::sinks::sync_sink::Sinker&lt;T&gt; as databend_query::pipelines::new::processors::processor::Processor&gt;::process (11 samples, 5.79%)</title><rect x="48.9474%" y="485" width="5.7895%" height="15" fill="rgb(212,68,19)" fg:x="93" fg:w="11"/><text x="49.1974%" y="495.50">databen..</text></g><g><title>databend-query`&lt;databend_query::pipelines::new::executor::pipeline_pulling_executor::PullingSink as databend_query::pipelines::new::processors::sinks::sync_sink::Sink&gt;::consume (11 samples, 5.79%)</title><rect x="48.9474%" y="469" width="5.7895%" height="15" fill="rgb(240,187,13)" fg:x="93" fg:w="11"/><text x="49.1974%" y="479.50">databen..</text></g><g><title>databend-query`std::sync::mpsc::SyncSender&lt;T&gt;::send (11 samples, 5.79%)</title><rect x="48.9474%" y="453" width="5.7895%" height="15" fill="rgb(223,113,26)" fg:x="93" fg:w="11"/><text x="49.1974%" y="463.50">databen..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.53%)</title><rect x="54.2105%" y="437" width="0.5263%" height="15" fill="rgb(206,192,2)" fg:x="103" fg:w="1"/><text x="54.4605%" y="447.50"></text></g><g><title>databend-query`_rjem_sdallocx (1 samples, 0.53%)</title><rect x="54.7368%" y="469" width="0.5263%" height="15" fill="rgb(241,108,4)" fg:x="104" fg:w="1"/><text x="54.9868%" y="479.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.53%)</title><rect x="55.2632%" y="437" width="0.5263%" height="15" fill="rgb(247,173,49)" fg:x="105" fg:w="1"/><text x="55.5132%" y="447.50"></text></g><g><title>databend-query`_rjem_je_sdallocx_default (1 samples, 0.53%)</title><rect x="55.2632%" y="421" width="0.5263%" height="15" fill="rgb(224,114,35)" fg:x="105" fg:w="1"/><text x="55.5132%" y="431.50"></text></g><g><title>databend-query`_rjem_je_tcache_bin_flush_small (1 samples, 0.53%)</title><rect x="55.2632%" y="405" width="0.5263%" height="15" fill="rgb(245,159,27)" fg:x="105" fg:w="1"/><text x="55.5132%" y="415.50"></text></g><g><title>databend-query`arena_dalloc_bin_locked_impl (1 samples, 0.53%)</title><rect x="55.2632%" y="389" width="0.5263%" height="15" fill="rgb(245,172,44)" fg:x="105" fg:w="1"/><text x="55.5132%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_datablocks::data_block::DataBlock&gt; (2 samples, 1.05%)</title><rect x="55.2632%" y="469" width="1.0526%" height="15" fill="rgb(236,23,11)" fg:x="105" fg:w="2"/><text x="55.5132%" y="479.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 1.05%)</title><rect x="55.2632%" y="453" width="1.0526%" height="15" fill="rgb(205,117,38)" fg:x="105" fg:w="2"/><text x="55.5132%" y="463.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (1 samples, 0.53%)</title><rect x="55.7895%" y="437" width="0.5263%" height="15" fill="rgb(237,72,25)" fg:x="106" fg:w="1"/><text x="56.0395%" y="447.50"></text></g><g><title>databend-query`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.53%)</title><rect x="57.3684%" y="453" width="0.5263%" height="15" fill="rgb(244,70,9)" fg:x="109" fg:w="1"/><text x="57.6184%" y="463.50"></text></g><g><title>databend-query`_rjem_mallocx (1 samples, 0.53%)</title><rect x="57.8947%" y="453" width="0.5263%" height="15" fill="rgb(217,125,39)" fg:x="110" fg:w="1"/><text x="58.1447%" y="463.50"></text></g><g><title>databend-query`_rjem_sdallocx (1 samples, 0.53%)</title><rect x="58.4211%" y="453" width="0.5263%" height="15" fill="rgb(235,36,10)" fg:x="111" fg:w="1"/><text x="58.6711%" y="463.50"></text></g><g><title>databend-query`databend_query::pipelines::transforms::transform_expression_executor::ExpressionExecutor::execute (6 samples, 3.16%)</title><rect x="56.3158%" y="469" width="3.1579%" height="15" fill="rgb(251,123,47)" fg:x="107" fg:w="6"/><text x="56.5658%" y="479.50">dat..</text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.53%)</title><rect x="58.9474%" y="453" width="0.5263%" height="15" fill="rgb(221,13,13)" fg:x="112" fg:w="1"/><text x="59.1974%" y="463.50"></text></g><g><title>databend-query`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.53%)</title><rect x="58.9474%" y="437" width="0.5263%" height="15" fill="rgb(238,131,9)" fg:x="112" fg:w="1"/><text x="59.1974%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.53%)</title><rect x="59.4737%" y="469" width="0.5263%" height="15" fill="rgb(211,50,8)" fg:x="113" fg:w="1"/><text x="59.7237%" y="479.50"></text></g><g><title>databend-query`&lt;databend_query::pipelines::new::processors::transforms::transform::Transformer&lt;T&gt; as databend_query::pipelines::new::processors::processor::Processor&gt;::process (11 samples, 5.79%)</title><rect x="54.7368%" y="485" width="5.7895%" height="15" fill="rgb(245,182,24)" fg:x="104" fg:w="11"/><text x="54.9868%" y="495.50">databen..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.53%)</title><rect x="60.0000%" y="469" width="0.5263%" height="15" fill="rgb(242,14,37)" fg:x="114" fg:w="1"/><text x="60.2500%" y="479.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.53%)</title><rect x="61.0526%" y="453" width="0.5263%" height="15" fill="rgb(246,228,12)" fg:x="116" fg:w="1"/><text x="61.3026%" y="463.50"></text></g><g><title>databend-query`&lt;databend_query::pipelines::transforms::group_by::keys_ref::KeysRef as databend_query::common::hashtable::hash_table_key::HashTableKeyable&gt;::fast_hash (1 samples, 0.53%)</title><rect x="61.5789%" y="453" width="0.5263%" height="15" fill="rgb(213,55,15)" fg:x="117" fg:w="1"/><text x="61.8289%" y="463.50"></text></g><g><title>databend-query`&lt;ahash::random_state::DefaultRandomSource as ahash::random_state::RandomSource&gt;::get_fixed_seeds (1 samples, 0.53%)</title><rect x="61.5789%" y="437" width="0.5263%" height="15" fill="rgb(209,9,3)" fg:x="117" fg:w="1"/><text x="61.8289%" y="447.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.53%)</title><rect x="62.1053%" y="453" width="0.5263%" height="15" fill="rgb(230,59,30)" fg:x="118" fg:w="1"/><text x="62.3553%" y="463.50"></text></g><g><title>databend-query`alloc::raw_vec::finish_grow (1 samples, 0.53%)</title><rect x="62.1053%" y="437" width="0.5263%" height="15" fill="rgb(209,121,21)" fg:x="118" fg:w="1"/><text x="62.3553%" y="447.50"></text></g><g><title>databend-query`_rjem_rallocx (1 samples, 0.53%)</title><rect x="62.1053%" y="421" width="0.5263%" height="15" fill="rgb(220,109,13)" fg:x="118" fg:w="1"/><text x="62.3553%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.53%)</title><rect x="62.1053%" y="405" width="0.5263%" height="15" fill="rgb(232,18,1)" fg:x="118" fg:w="1"/><text x="62.3553%" y="415.50"></text></g><g><title>databend-query`common_datablocks::data_block::DataBlock::add_column (1 samples, 0.53%)</title><rect x="62.6316%" y="453" width="0.5263%" height="15" fill="rgb(215,41,42)" fg:x="119" fg:w="1"/><text x="62.8816%" y="463.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.53%)</title><rect x="62.6316%" y="437" width="0.5263%" height="15" fill="rgb(224,123,36)" fg:x="119" fg:w="1"/><text x="62.8816%" y="447.50"></text></g><g><title>databend-query`_rjem_mallocx (1 samples, 0.53%)</title><rect x="62.6316%" y="421" width="0.5263%" height="15" fill="rgb(240,125,3)" fg:x="119" fg:w="1"/><text x="62.8816%" y="431.50"></text></g><g><title>databend-query`&lt;common_datavalues::columns::primitive::mutable::MutablePrimitiveColumn&lt;T&gt; as common_datavalues::scalars::column::ScalarColumnBuilder&gt;::finish (1 samples, 0.53%)</title><rect x="63.1579%" y="405" width="0.5263%" height="15" fill="rgb(205,98,50)" fg:x="120" fg:w="1"/><text x="63.4079%" y="415.50"></text></g><g><title>databend-query`_rjem_mallocx (1 samples, 0.53%)</title><rect x="63.1579%" y="389" width="0.5263%" height="15" fill="rgb(205,185,37)" fg:x="120" fg:w="1"/><text x="63.4079%" y="399.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::new (2 samples, 1.05%)</title><rect x="63.6842%" y="405" width="1.0526%" height="15" fill="rgb(238,207,15)" fg:x="121" fg:w="2"/><text x="63.9342%" y="415.50"></text></g><g><title>databend-query`_rjem_mallocx (2 samples, 1.05%)</title><rect x="63.6842%" y="389" width="1.0526%" height="15" fill="rgb(213,199,42)" fg:x="121" fg:w="2"/><text x="63.9342%" y="399.50"></text></g><g><title>databend-query`_rjem_je_tcache_alloc_small_hard (2 samples, 1.05%)</title><rect x="63.6842%" y="373" width="1.0526%" height="15" fill="rgb(235,201,11)" fg:x="121" fg:w="2"/><text x="63.9342%" y="383.50"></text></g><g><title>databend-query`_rjem_je_arena_tcache_fill_small (2 samples, 1.05%)</title><rect x="63.6842%" y="357" width="1.0526%" height="15" fill="rgb(207,46,11)" fg:x="121" fg:w="2"/><text x="63.9342%" y="367.50"></text></g><g><title>databend-query`common_datavalues::columns::take::_&lt;impl common_datavalues::columns::series::Series&gt;::take (4 samples, 2.11%)</title><rect x="63.1579%" y="421" width="2.1053%" height="15" fill="rgb(241,35,35)" fg:x="120" fg:w="4"/><text x="63.4079%" y="431.50">d..</text></g><g><title>databend-query`common_datavalues::columns::column::Column::data_type_id (1 samples, 0.53%)</title><rect x="64.7368%" y="405" width="0.5263%" height="15" fill="rgb(243,32,47)" fg:x="123" fg:w="1"/><text x="64.9868%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_datavalues::types::data_type::DataTypeImpl&gt; (1 samples, 0.53%)</title><rect x="64.7368%" y="389" width="0.5263%" height="15" fill="rgb(247,202,23)" fg:x="123" fg:w="1"/><text x="64.9868%" y="399.50"></text></g><g><title>databend-query`common_datablocks::kernels::data_block_take::_&lt;impl common_datablocks::data_block::DataBlock&gt;::block_take_by_indices (5 samples, 2.63%)</title><rect x="63.1579%" y="453" width="2.6316%" height="15" fill="rgb(219,102,11)" fg:x="120" fg:w="5"/><text x="63.4079%" y="463.50">da..</text></g><g><title>databend-query`&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 2.63%)</title><rect x="63.1579%" y="437" width="2.6316%" height="15" fill="rgb(243,110,44)" fg:x="120" fg:w="5"/><text x="63.4079%" y="447.50">da..</text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.53%)</title><rect x="65.2632%" y="421" width="0.5263%" height="15" fill="rgb(222,74,54)" fg:x="124" fg:w="1"/><text x="65.5132%" y="431.50"></text></g><g><title>databend-query`core::iter::adapters::try_process (2 samples, 1.05%)</title><rect x="65.7895%" y="453" width="1.0526%" height="15" fill="rgb(216,99,12)" fg:x="125" fg:w="2"/><text x="66.0395%" y="463.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 1.05%)</title><rect x="65.7895%" y="437" width="1.0526%" height="15" fill="rgb(226,22,26)" fg:x="125" fg:w="2"/><text x="66.0395%" y="447.50"></text></g><g><title>databend-query`databend_query::common::expression_evaluator::ExpressionEvaluator::eval (2 samples, 1.05%)</title><rect x="65.7895%" y="421" width="1.0526%" height="15" fill="rgb(217,163,10)" fg:x="125" fg:w="2"/><text x="66.0395%" y="431.50"></text></g><g><title>databend-query`databend_query::common::expression_evaluator::ExpressionEvaluator::eval (2 samples, 1.05%)</title><rect x="65.7895%" y="405" width="1.0526%" height="15" fill="rgb(213,25,53)" fg:x="125" fg:w="2"/><text x="66.0395%" y="415.50"></text></g><g><title>databend-query`&lt;common_functions::scalars::arithmetics::arithmetic_modulo::ModuloFunctionImpl&lt;L,R,M,O&gt; as common_functions::scalars::function::Function&gt;::eval (2 samples, 1.05%)</title><rect x="65.7895%" y="389" width="1.0526%" height="15" fill="rgb(252,105,26)" fg:x="125" fg:w="2"/><text x="66.0395%" y="399.50"></text></g><g><title>databend-query`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 1.05%)</title><rect x="65.7895%" y="373" width="1.0526%" height="15" fill="rgb(220,39,43)" fg:x="125" fg:w="2"/><text x="66.0395%" y="383.50"></text></g><g><title>databend-query`databend_query::pipelines::new::executor::pipeline_executor::PipelineExecutor::execute_threads::_{{closure}} (106 samples, 55.79%)</title><rect x="11.5789%" y="533" width="55.7895%" height="15" fill="rgb(229,68,48)" fg:x="22" fg:w="106"/><text x="11.8289%" y="543.50">databend-query`databend_query::pipelines::new::executor::pipeline_executor::PipelineExecutor..</text></g><g><title>databend-query`databend_query::pipelines::new::executor::pipeline_executor::PipelineExecutor::execute_single_thread (106 samples, 55.79%)</title><rect x="11.5789%" y="517" width="55.7895%" height="15" fill="rgb(252,8,32)" fg:x="22" fg:w="106"/><text x="11.8289%" y="527.50">databend-query`databend_query::pipelines::new::executor::pipeline_executor::PipelineExecutor..</text></g><g><title>databend-query`databend_query::pipelines::new::executor::executor_worker_context::ExecutorWorkerContext::execute_task (35 samples, 18.42%)</title><rect x="48.9474%" y="501" width="18.4211%" height="15" fill="rgb(223,20,43)" fg:x="93" fg:w="35"/><text x="49.1974%" y="511.50">databend-query`databend_query..</text></g><g><title>databend-query`&lt;databend_query::pipelines::new::processors::transforms::transform_hash_join::TransformHashJoinProbe as databend_query::pipelines::new::processors::processor::Processor&gt;::process (13 samples, 6.84%)</title><rect x="60.5263%" y="485" width="6.8421%" height="15" fill="rgb(229,81,49)" fg:x="115" fg:w="13"/><text x="60.7763%" y="495.50">databend-..</text></g><g><title>databend-query`&lt;databend_query::pipelines::new::processors::transforms::hash_join::chaining_hash_table::ChainingHashTable as databend_query::pipelines::new::processors::transforms::hash_join::hash_table::HashJoinState&gt;::probe (13 samples, 6.84%)</title><rect x="60.5263%" y="469" width="6.8421%" height="15" fill="rgb(236,28,36)" fg:x="115" fg:w="13"/><text x="60.7763%" y="479.50">databend-..</text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.53%)</title><rect x="66.8421%" y="453" width="0.5263%" height="15" fill="rgb(249,185,26)" fg:x="127" fg:w="1"/><text x="67.0921%" y="463.50"></text></g><g><title>databend-query`&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park_until (3 samples, 1.58%)</title><rect x="67.3684%" y="517" width="1.5789%" height="15" fill="rgb(249,174,33)" fg:x="128" fg:w="3"/><text x="67.6184%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (3 samples, 1.58%)</title><rect x="67.3684%" y="501" width="1.5789%" height="15" fill="rgb(233,201,37)" fg:x="128" fg:w="3"/><text x="67.6184%" y="511.50"></text></g><g><title>databend-query`parking_lot::condvar::Condvar::wait_until_internal (4 samples, 2.11%)</title><rect x="67.3684%" y="533" width="2.1053%" height="15" fill="rgb(221,78,26)" fg:x="128" fg:w="4"/><text x="67.6184%" y="543.50">d..</text></g><g><title>databend-query`DYLD-STUB$$pthread_cond_timedwait (1 samples, 0.53%)</title><rect x="68.9474%" y="517" width="0.5263%" height="15" fill="rgb(250,127,30)" fg:x="131" fg:w="1"/><text x="69.1974%" y="527.50"></text></g><g><title>databend-query`sled::ebr::internal::Global::collect (1 samples, 0.53%)</title><rect x="69.4737%" y="533" width="0.5263%" height="15" fill="rgb(230,49,44)" fg:x="132" fg:w="1"/><text x="69.7237%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (11 samples, 5.79%)</title><rect x="70.0000%" y="485" width="5.7895%" height="15" fill="rgb(229,67,23)" fg:x="133" fg:w="11"/><text x="70.2500%" y="495.50">libsyst..</text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (1 samples, 0.53%)</title><rect x="75.7895%" y="485" width="0.5263%" height="15" fill="rgb(249,83,47)" fg:x="144" fg:w="1"/><text x="76.0395%" y="495.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.53%)</title><rect x="75.7895%" y="469" width="0.5263%" height="15" fill="rgb(215,43,3)" fg:x="144" fg:w="1"/><text x="76.0395%" y="479.50"></text></g><g><title>databend-query`parking_lot::condvar::Condvar::wait_until_internal (13 samples, 6.84%)</title><rect x="70.0000%" y="517" width="6.8421%" height="15" fill="rgb(238,154,13)" fg:x="133" fg:w="13"/><text x="70.2500%" y="527.50">databend-..</text></g><g><title>databend-query`&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park_until (13 samples, 6.84%)</title><rect x="70.0000%" y="501" width="6.8421%" height="15" fill="rgb(219,56,2)" fg:x="133" fg:w="13"/><text x="70.2500%" y="511.50">databend-..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.53%)</title><rect x="76.3158%" y="485" width="0.5263%" height="15" fill="rgb(233,0,4)" fg:x="145" fg:w="1"/><text x="76.5658%" y="495.50"></text></g><g><title>databend-query`sled::threadpool::queue::Queue::perform_work (14 samples, 7.37%)</title><rect x="70.0000%" y="533" width="7.3684%" height="15" fill="rgb(235,30,7)" fg:x="133" fg:w="14"/><text x="70.2500%" y="543.50">databend-q..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.53%)</title><rect x="76.8421%" y="517" width="0.5263%" height="15" fill="rgb(250,79,13)" fg:x="146" fg:w="1"/><text x="77.0921%" y="527.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 1.05%)</title><rect x="77.3684%" y="357" width="1.0526%" height="15" fill="rgb(211,146,34)" fg:x="147" fg:w="2"/><text x="77.6184%" y="367.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.53%)</title><rect x="77.8947%" y="341" width="0.5263%" height="15" fill="rgb(228,22,38)" fg:x="148" fg:w="1"/><text x="78.1447%" y="351.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.53%)</title><rect x="77.8947%" y="325" width="0.5263%" height="15" fill="rgb(235,168,5)" fg:x="148" fg:w="1"/><text x="78.1447%" y="335.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.53%)</title><rect x="77.8947%" y="309" width="0.5263%" height="15" fill="rgb(221,155,16)" fg:x="148" fg:w="1"/><text x="78.1447%" y="319.50"></text></g><g><title>databend-query`&lt;sled::iter::Iter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.53%)</title><rect x="77.8947%" y="293" width="0.5263%" height="15" fill="rgb(215,215,53)" fg:x="148" fg:w="1"/><text x="78.1447%" y="303.50"></text></g><g><title>databend-query`sled::iter::Iter::next_inner (1 samples, 0.53%)</title><rect x="77.8947%" y="277" width="0.5263%" height="15" fill="rgb(223,4,10)" fg:x="148" fg:w="1"/><text x="78.1447%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.53%)</title><rect x="77.8947%" y="261" width="0.5263%" height="15" fill="rgb(234,103,6)" fg:x="148" fg:w="1"/><text x="78.1447%" y="271.50"></text></g><g><title>databend-query`&lt;regex_syntax::utf8::Utf8Sequences as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.53%)</title><rect x="78.4211%" y="229" width="0.5263%" height="15" fill="rgb(227,97,0)" fg:x="149" fg:w="1"/><text x="78.6711%" y="239.50"></text></g><g><title>databend-query`regex::compile::Compiler::compile (2 samples, 1.05%)</title><rect x="78.4211%" y="293" width="1.0526%" height="15" fill="rgb(234,150,53)" fg:x="149" fg:w="2"/><text x="78.6711%" y="303.50"></text></g><g><title>databend-query`regex::compile::Compiler::c (2 samples, 1.05%)</title><rect x="78.4211%" y="277" width="1.0526%" height="15" fill="rgb(228,201,54)" fg:x="149" fg:w="2"/><text x="78.6711%" y="287.50"></text></g><g><title>databend-query`regex::compile::Compiler::c (2 samples, 1.05%)</title><rect x="78.4211%" y="261" width="1.0526%" height="15" fill="rgb(222,22,37)" fg:x="149" fg:w="2"/><text x="78.6711%" y="271.50"></text></g><g><title>databend-query`regex::compile::Compiler::c_class (2 samples, 1.05%)</title><rect x="78.4211%" y="245" width="1.0526%" height="15" fill="rgb(237,53,32)" fg:x="149" fg:w="2"/><text x="78.6711%" y="255.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.53%)</title><rect x="78.9474%" y="229" width="0.5263%" height="15" fill="rgb(233,25,53)" fg:x="150" fg:w="1"/><text x="79.1974%" y="239.50"></text></g><g><title>databend-query`alloc::raw_vec::finish_grow (1 samples, 0.53%)</title><rect x="78.9474%" y="213" width="0.5263%" height="15" fill="rgb(210,40,34)" fg:x="150" fg:w="1"/><text x="79.1974%" y="223.50"></text></g><g><title>databend-query`_rjem_rallocx (1 samples, 0.53%)</title><rect x="78.9474%" y="197" width="0.5263%" height="15" fill="rgb(241,220,44)" fg:x="150" fg:w="1"/><text x="79.1974%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.53%)</title><rect x="78.9474%" y="181" width="0.5263%" height="15" fill="rgb(235,28,35)" fg:x="150" fg:w="1"/><text x="79.1974%" y="191.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 2.63%)</title><rect x="77.3684%" y="389" width="2.6316%" height="15" fill="rgb(210,56,17)" fg:x="147" fg:w="5"/><text x="77.6184%" y="399.50">da..</text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 2.63%)</title><rect x="77.3684%" y="373" width="2.6316%" height="15" fill="rgb(224,130,29)" fg:x="147" fg:w="5"/><text x="77.6184%" y="383.50">da..</text></g><g><title>databend-query`databend_query::servers::mysql::mysql_federated::MySQLFederated::check (3 samples, 1.58%)</title><rect x="78.4211%" y="357" width="1.5789%" height="15" fill="rgb(235,212,8)" fg:x="149" fg:w="3"/><text x="78.6711%" y="367.50"></text></g><g><title>databend-query`databend_query::servers::mysql::mysql_federated::MySQLFederated::block_match_rule (3 samples, 1.58%)</title><rect x="78.4211%" y="341" width="1.5789%" height="15" fill="rgb(223,33,50)" fg:x="149" fg:w="3"/><text x="78.6711%" y="351.50"></text></g><g><title>databend-query`regex::re_set::unicode::RegexSet::new (3 samples, 1.58%)</title><rect x="78.4211%" y="325" width="1.5789%" height="15" fill="rgb(219,149,13)" fg:x="149" fg:w="3"/><text x="78.6711%" y="335.50"></text></g><g><title>databend-query`regex::exec::ExecBuilder::build (3 samples, 1.58%)</title><rect x="78.4211%" y="309" width="1.5789%" height="15" fill="rgb(250,156,29)" fg:x="149" fg:w="3"/><text x="78.6711%" y="319.50"></text></g><g><title>databend-query`regex_syntax::parser::Parser::parse (1 samples, 0.53%)</title><rect x="79.4737%" y="293" width="0.5263%" height="15" fill="rgb(216,193,19)" fg:x="151" fg:w="1"/><text x="79.7237%" y="303.50"></text></g><g><title>databend-query`regex_syntax::hir::translate::Translator::translate (1 samples, 0.53%)</title><rect x="79.4737%" y="277" width="0.5263%" height="15" fill="rgb(216,135,14)" fg:x="151" fg:w="1"/><text x="79.7237%" y="287.50"></text></g><g><title>databend-query`&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_post (1 samples, 0.53%)</title><rect x="79.4737%" y="261" width="0.5263%" height="15" fill="rgb(241,47,5)" fg:x="151" fg:w="1"/><text x="79.7237%" y="271.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.53%)</title><rect x="79.4737%" y="245" width="0.5263%" height="15" fill="rgb(233,42,35)" fg:x="151" fg:w="1"/><text x="79.7237%" y="255.50"></text></g><g><title>databend-query`_rjem_rallocx (1 samples, 0.53%)</title><rect x="79.4737%" y="229" width="0.5263%" height="15" fill="rgb(231,13,6)" fg:x="151" fg:w="1"/><text x="79.7237%" y="239.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;common_datablocks::data_block::DataBlock&gt;&gt; (1 samples, 0.53%)</title><rect x="80.0000%" y="389" width="0.5263%" height="15" fill="rgb(207,181,40)" fg:x="152" fg:w="1"/><text x="80.2500%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;dyn arrow2::array::Array&gt;&gt;&gt; (1 samples, 0.53%)</title><rect x="80.0000%" y="373" width="0.5263%" height="15" fill="rgb(254,173,49)" fg:x="152" fg:w="1"/><text x="80.2500%" y="383.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.53%)</title><rect x="80.0000%" y="357" width="0.5263%" height="15" fill="rgb(221,1,38)" fg:x="152" fg:w="1"/><text x="80.2500%" y="367.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.53%)</title><rect x="80.0000%" y="341" width="0.5263%" height="15" fill="rgb(206,124,46)" fg:x="152" fg:w="1"/><text x="80.2500%" y="351.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.53%)</title><rect x="80.0000%" y="325" width="0.5263%" height="15" fill="rgb(249,21,11)" fg:x="152" fg:w="1"/><text x="80.2500%" y="335.50"></text></g><g><title>databend-query`_rjem_je_sdallocx_default (1 samples, 0.53%)</title><rect x="80.0000%" y="309" width="0.5263%" height="15" fill="rgb(222,201,40)" fg:x="152" fg:w="1"/><text x="80.2500%" y="319.50"></text></g><g><title>databend-query`_rjem_je_tcache_bin_flush_small (1 samples, 0.53%)</title><rect x="80.0000%" y="293" width="0.5263%" height="15" fill="rgb(235,61,29)" fg:x="152" fg:w="1"/><text x="80.2500%" y="303.50"></text></g><g><title>databend-query`opensrv_mysql::resultset::QueryResultWriter&lt;W&gt;::completed (1 samples, 0.53%)</title><rect x="80.5263%" y="389" width="0.5263%" height="15" fill="rgb(219,207,3)" fg:x="153" fg:w="1"/><text x="80.7763%" y="399.50"></text></g><g><title>databend-query`&lt;opensrv_mysql::resultset::QueryResultWriter&lt;W&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.53%)</title><rect x="80.5263%" y="373" width="0.5263%" height="15" fill="rgb(222,56,46)" fg:x="153" fg:w="1"/><text x="80.7763%" y="383.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 4.21%)</title><rect x="77.3684%" y="437" width="4.2105%" height="15" fill="rgb(239,76,54)" fg:x="147" fg:w="8"/><text x="77.6184%" y="447.50">datab..</text></g><g><title>databend-query`opensrv_mysql::AsyncMysqlIntermediary&lt;B,S&gt;::run_with_options::_{{closure}} (8 samples, 4.21%)</title><rect x="77.3684%" y="421" width="4.2105%" height="15" fill="rgb(231,124,27)" fg:x="147" fg:w="8"/><text x="77.6184%" y="431.50">datab..</text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 4.21%)</title><rect x="77.3684%" y="405" width="4.2105%" height="15" fill="rgb(249,195,6)" fg:x="147" fg:w="8"/><text x="77.6184%" y="415.50">datab..</text></g><g><title>databend-query`opensrv_mysql::resultset::RowWriter&lt;W&gt;::write_col (1 samples, 0.53%)</title><rect x="81.0526%" y="389" width="0.5263%" height="15" fill="rgb(237,174,47)" fg:x="154" fg:w="1"/><text x="81.3026%" y="399.50"></text></g><g><title>databend-query`&lt;u64 as opensrv_mysql::value::encode::ToMysqlValue&gt;::to_mysql_text (1 samples, 0.53%)</title><rect x="81.0526%" y="373" width="0.5263%" height="15" fill="rgb(206,201,31)" fg:x="154" fg:w="1"/><text x="81.3026%" y="383.50"></text></g><g><title>databend-query`alloc::fmt::format (1 samples, 0.53%)</title><rect x="81.0526%" y="357" width="0.5263%" height="15" fill="rgb(231,57,52)" fg:x="154" fg:w="1"/><text x="81.3026%" y="367.50"></text></g><g><title>databend-query`core::fmt::write (1 samples, 0.53%)</title><rect x="81.0526%" y="341" width="0.5263%" height="15" fill="rgb(248,177,22)" fg:x="154" fg:w="1"/><text x="81.3026%" y="351.50"></text></g><g><title>databend-query`&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.53%)</title><rect x="81.0526%" y="325" width="0.5263%" height="15" fill="rgb(215,211,37)" fg:x="154" fg:w="1"/><text x="81.3026%" y="335.50"></text></g><g><title>databend-query`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.53%)</title><rect x="81.0526%" y="309" width="0.5263%" height="15" fill="rgb(241,128,51)" fg:x="154" fg:w="1"/><text x="81.3026%" y="319.50"></text></g><g><title>databend-query`alloc::raw_vec::finish_grow (1 samples, 0.53%)</title><rect x="81.0526%" y="293" width="0.5263%" height="15" fill="rgb(227,165,31)" fg:x="154" fg:w="1"/><text x="81.3026%" y="303.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.53%)</title><rect x="81.5789%" y="421" width="0.5263%" height="15" fill="rgb(228,167,24)" fg:x="155" fg:w="1"/><text x="81.8289%" y="431.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.53%)</title><rect x="81.5789%" y="405" width="0.5263%" height="15" fill="rgb(228,143,12)" fg:x="155" fg:w="1"/><text x="81.8289%" y="415.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.53%)</title><rect x="81.5789%" y="389" width="0.5263%" height="15" fill="rgb(249,149,8)" fg:x="155" fg:w="1"/><text x="81.8289%" y="399.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.53%)</title><rect x="81.5789%" y="373" width="0.5263%" height="15" fill="rgb(243,35,44)" fg:x="155" fg:w="1"/><text x="81.8289%" y="383.50"></text></g><g><title>databend-query`std::panicking::try (10 samples, 5.26%)</title><rect x="77.3684%" y="453" width="5.2632%" height="15" fill="rgb(246,89,9)" fg:x="147" fg:w="10"/><text x="77.6184%" y="463.50">databe..</text></g><g><title>databend-query`poem::server::Server&lt;L,A&gt;::run_with_graceful_shutdown::_{{closure}} (2 samples, 1.05%)</title><rect x="81.5789%" y="437" width="1.0526%" height="15" fill="rgb(233,213,13)" fg:x="155" fg:w="2"/><text x="81.8289%" y="447.50"></text></g><g><title>databend-query`tracing_core::event::Event::dispatch (1 samples, 0.53%)</title><rect x="82.1053%" y="421" width="0.5263%" height="15" fill="rgb(233,141,41)" fg:x="156" fg:w="1"/><text x="82.3553%" y="431.50"></text></g><g><title>databend-query`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event (1 samples, 0.53%)</title><rect x="82.1053%" y="405" width="0.5263%" height="15" fill="rgb(239,167,4)" fg:x="156" fg:w="1"/><text x="82.3553%" y="415.50"></text></g><g><title>databend-query`&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (1 samples, 0.53%)</title><rect x="82.1053%" y="389" width="0.5263%" height="15" fill="rgb(209,217,16)" fg:x="156" fg:w="1"/><text x="82.3553%" y="399.50"></text></g><g><title>databend-query`std::thread::local::fast::Key&lt;T&gt;::try_initialize (1 samples, 0.53%)</title><rect x="82.1053%" y="373" width="0.5263%" height="15" fill="rgb(219,88,35)" fg:x="156" fg:w="1"/><text x="82.3553%" y="383.50"></text></g><g><title>databend-query`std::sys::unix::thread_local_dtor::register_dtor (1 samples, 0.53%)</title><rect x="82.1053%" y="357" width="0.5263%" height="15" fill="rgb(220,193,23)" fg:x="156" fg:w="1"/><text x="82.3553%" y="367.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.53%)</title><rect x="82.1053%" y="341" width="0.5263%" height="15" fill="rgb(230,90,52)" fg:x="156" fg:w="1"/><text x="82.3553%" y="351.50"></text></g><g><title>databend-query`alloc::raw_vec::finish_grow (1 samples, 0.53%)</title><rect x="82.1053%" y="325" width="0.5263%" height="15" fill="rgb(252,106,19)" fg:x="156" fg:w="1"/><text x="82.3553%" y="335.50"></text></g><g><title>databend-query`_rjem_rallocx (1 samples, 0.53%)</title><rect x="82.1053%" y="309" width="0.5263%" height="15" fill="rgb(206,74,20)" fg:x="156" fg:w="1"/><text x="82.3553%" y="319.50"></text></g><g><title>databend-query`_rjem_je_arena_ralloc (1 samples, 0.53%)</title><rect x="82.1053%" y="293" width="0.5263%" height="15" fill="rgb(230,138,44)" fg:x="156" fg:w="1"/><text x="82.3553%" y="303.50"></text></g><g><title>databend-query`_rjem_je_tcache_alloc_small_hard (1 samples, 0.53%)</title><rect x="82.1053%" y="277" width="0.5263%" height="15" fill="rgb(235,182,43)" fg:x="156" fg:w="1"/><text x="82.3553%" y="287.50"></text></g><g><title>databend-query`_rjem_je_arena_tcache_fill_small (1 samples, 0.53%)</title><rect x="82.1053%" y="261" width="0.5263%" height="15" fill="rgb(242,16,51)" fg:x="156" fg:w="1"/><text x="82.3553%" y="271.50"></text></g><g><title>databend-query`arena_bin_malloc_hard (1 samples, 0.53%)</title><rect x="82.1053%" y="245" width="0.5263%" height="15" fill="rgb(248,9,4)" fg:x="156" fg:w="1"/><text x="82.3553%" y="255.50"></text></g><g><title>databend-query`_rjem_je_extent_alloc_wrapper (1 samples, 0.53%)</title><rect x="82.1053%" y="229" width="0.5263%" height="15" fill="rgb(210,31,22)" fg:x="156" fg:w="1"/><text x="82.3553%" y="239.50"></text></g><g><title>databend-query`_rjem_je_extent_alloc_mmap (1 samples, 0.53%)</title><rect x="82.1053%" y="213" width="0.5263%" height="15" fill="rgb(239,54,39)" fg:x="156" fg:w="1"/><text x="82.3553%" y="223.50"></text></g><g><title>databend-query`_rjem_je_pages_map (1 samples, 0.53%)</title><rect x="82.1053%" y="197" width="0.5263%" height="15" fill="rgb(230,99,41)" fg:x="156" fg:w="1"/><text x="82.3553%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__mmap (1 samples, 0.53%)</title><rect x="82.1053%" y="181" width="0.5263%" height="15" fill="rgb(253,106,12)" fg:x="156" fg:w="1"/><text x="82.3553%" y="191.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.53%)</title><rect x="82.6316%" y="405" width="0.5263%" height="15" fill="rgb(213,46,41)" fg:x="157" fg:w="1"/><text x="82.8816%" y="415.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.53%)</title><rect x="82.6316%" y="389" width="0.5263%" height="15" fill="rgb(215,133,35)" fg:x="157" fg:w="1"/><text x="82.8816%" y="399.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.53%)</title><rect x="82.6316%" y="373" width="0.5263%" height="15" fill="rgb(213,28,5)" fg:x="157" fg:w="1"/><text x="82.8816%" y="383.50"></text></g><g><title>databend-query`sled::transaction::TransactionalTrees::commit (1 samples, 0.53%)</title><rect x="82.6316%" y="357" width="0.5263%" height="15" fill="rgb(215,77,49)" fg:x="157" fg:w="1"/><text x="82.8816%" y="367.50"></text></g><g><title>databend-query`sled::tree::Tree::insert_inner (1 samples, 0.53%)</title><rect x="82.6316%" y="341" width="0.5263%" height="15" fill="rgb(248,100,22)" fg:x="157" fg:w="1"/><text x="82.8816%" y="351.50"></text></g><g><title>databend-query`sled::pagecache::PageCache::link (1 samples, 0.53%)</title><rect x="82.6316%" y="325" width="0.5263%" height="15" fill="rgb(208,67,9)" fg:x="157" fg:w="1"/><text x="82.8816%" y="335.50"></text></g><g><title>databend-query`sled::pagecache::reservation::Reservation::complete (1 samples, 0.53%)</title><rect x="82.6316%" y="309" width="0.5263%" height="15" fill="rgb(219,133,21)" fg:x="157" fg:w="1"/><text x="82.8816%" y="319.50"></text></g><g><title>databend-query`sled::pagecache::reservation::Reservation::flush (1 samples, 0.53%)</title><rect x="82.6316%" y="293" width="0.5263%" height="15" fill="rgb(246,46,29)" fg:x="157" fg:w="1"/><text x="82.8816%" y="303.50"></text></g><g><title>databend-query`sled::calculate_message_crc32 (1 samples, 0.53%)</title><rect x="82.6316%" y="277" width="0.5263%" height="15" fill="rgb(246,185,52)" fg:x="157" fg:w="1"/><text x="82.8816%" y="287.50"></text></g><g><title>databend-query`&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::log (1 samples, 0.53%)</title><rect x="82.6316%" y="261" width="0.5263%" height="15" fill="rgb(252,136,11)" fg:x="157" fg:w="1"/><text x="82.8816%" y="271.50"></text></g><g><title>databend-query`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (1 samples, 0.53%)</title><rect x="82.6316%" y="245" width="0.5263%" height="15" fill="rgb(219,138,53)" fg:x="157" fg:w="1"/><text x="82.8816%" y="255.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 1.05%)</title><rect x="82.6316%" y="437" width="1.0526%" height="15" fill="rgb(211,51,23)" fg:x="157" fg:w="2"/><text x="82.8816%" y="447.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 1.05%)</title><rect x="82.6316%" y="421" width="1.0526%" height="15" fill="rgb(247,221,28)" fg:x="157" fg:w="2"/><text x="82.8816%" y="431.50"></text></g><g><title>databend-query`common_metrics::recorder::label_counter (1 samples, 0.53%)</title><rect x="83.1579%" y="405" width="0.5263%" height="15" fill="rgb(251,222,45)" fg:x="158" fg:w="1"/><text x="83.4079%" y="415.50"></text></g><g><title>databend-query`metrics::key::Key::from_parts (1 samples, 0.53%)</title><rect x="83.1579%" y="389" width="0.5263%" height="15" fill="rgb(217,162,53)" fg:x="158" fg:w="1"/><text x="83.4079%" y="399.50"></text></g><g><title>databend-query`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.53%)</title><rect x="83.1579%" y="373" width="0.5263%" height="15" fill="rgb(229,93,14)" fg:x="158" fg:w="1"/><text x="83.4079%" y="383.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.53%)</title><rect x="83.6842%" y="373" width="0.5263%" height="15" fill="rgb(209,67,49)" fg:x="159" fg:w="1"/><text x="83.9342%" y="383.50"></text></g><g><title>databend-query`databend_query::sql::planner::binder::select::_&lt;impl databend_query::sql::planner::binder::Binder&gt;::bind_select_stmt::_{{closure}} (1 samples, 0.53%)</title><rect x="83.6842%" y="357" width="0.5263%" height="15" fill="rgb(213,87,29)" fg:x="159" fg:w="1"/><text x="83.9342%" y="367.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.53%)</title><rect x="83.6842%" y="341" width="0.5263%" height="15" fill="rgb(205,151,52)" fg:x="159" fg:w="1"/><text x="83.9342%" y="351.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.53%)</title><rect x="83.6842%" y="325" width="0.5263%" height="15" fill="rgb(253,215,39)" fg:x="159" fg:w="1"/><text x="83.9342%" y="335.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.53%)</title><rect x="83.6842%" y="309" width="0.5263%" height="15" fill="rgb(221,220,41)" fg:x="159" fg:w="1"/><text x="83.9342%" y="319.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.53%)</title><rect x="83.6842%" y="293" width="0.5263%" height="15" fill="rgb(218,133,21)" fg:x="159" fg:w="1"/><text x="83.9342%" y="303.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve::_{{closure}} (1 samples, 0.53%)</title><rect x="83.6842%" y="277" width="0.5263%" height="15" fill="rgb(221,193,43)" fg:x="159" fg:w="1"/><text x="83.9342%" y="287.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.53%)</title><rect x="83.6842%" y="261" width="0.5263%" height="15" fill="rgb(240,128,52)" fg:x="159" fg:w="1"/><text x="83.9342%" y="271.50"></text></g><g><title>databend-query`databend_query::sql::planner::semantic::type_check::TypeChecker::resolve::_{{closure}} (1 samples, 0.53%)</title><rect x="83.6842%" y="245" width="0.5263%" height="15" fill="rgb(253,114,12)" fg:x="159" fg:w="1"/><text x="83.9342%" y="255.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.53%)</title><rect x="83.6842%" y="229" width="0.5263%" height="15" fill="rgb(215,223,47)" fg:x="159" fg:w="1"/><text x="83.9342%" y="239.50"></text></g><g><title>databend-query`once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.53%)</title><rect x="83.6842%" y="213" width="0.5263%" height="15" fill="rgb(248,225,23)" fg:x="159" fg:w="1"/><text x="83.9342%" y="223.50"></text></g><g><title>databend-query`once_cell::imp::initialize_inner (1 samples, 0.53%)</title><rect x="83.6842%" y="197" width="0.5263%" height="15" fill="rgb(250,108,0)" fg:x="159" fg:w="1"/><text x="83.9342%" y="207.50"></text></g><g><title>databend-query`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (1 samples, 0.53%)</title><rect x="83.6842%" y="181" width="0.5263%" height="15" fill="rgb(228,208,7)" fg:x="159" fg:w="1"/><text x="83.9342%" y="191.50"></text></g><g><title>databend-query`core::ops::function::FnOnce::call_once (1 samples, 0.53%)</title><rect x="83.6842%" y="165" width="0.5263%" height="15" fill="rgb(244,45,10)" fg:x="159" fg:w="1"/><text x="83.9342%" y="175.50"></text></g><g><title>databend-query`common_functions::scalars::expressions::expression::ToCastFunction::register (1 samples, 0.53%)</title><rect x="83.6842%" y="149" width="0.5263%" height="15" fill="rgb(207,125,25)" fg:x="159" fg:w="1"/><text x="83.9342%" y="159.50"></text></g><g><title>databend-query`once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.53%)</title><rect x="83.6842%" y="133" width="0.5263%" height="15" fill="rgb(210,195,18)" fg:x="159" fg:w="1"/><text x="83.9342%" y="143.50"></text></g><g><title>databend-query`once_cell::imp::initialize_inner (1 samples, 0.53%)</title><rect x="83.6842%" y="117" width="0.5263%" height="15" fill="rgb(249,80,12)" fg:x="159" fg:w="1"/><text x="83.9342%" y="127.50"></text></g><g><title>databend-query`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (1 samples, 0.53%)</title><rect x="83.6842%" y="101" width="0.5263%" height="15" fill="rgb(221,65,9)" fg:x="159" fg:w="1"/><text x="83.9342%" y="111.50"></text></g><g><title>databend-query`core::ops::function::FnOnce::call_once (1 samples, 0.53%)</title><rect x="83.6842%" y="85" width="0.5263%" height="15" fill="rgb(235,49,36)" fg:x="159" fg:w="1"/><text x="83.9342%" y="95.50"></text></g><g><title>databend-query`common_datavalues::types::type_factory::TypeFactory::register (1 samples, 0.53%)</title><rect x="83.6842%" y="69" width="0.5263%" height="15" fill="rgb(225,32,20)" fg:x="159" fg:w="1"/><text x="83.9342%" y="79.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.53%)</title><rect x="83.6842%" y="53" width="0.5263%" height="15" fill="rgb(215,141,46)" fg:x="159" fg:w="1"/><text x="83.9342%" y="63.50"></text></g><g><title>databend-query`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.53%)</title><rect x="83.6842%" y="37" width="0.5263%" height="15" fill="rgb(250,160,47)" fg:x="159" fg:w="1"/><text x="83.9342%" y="47.50"></text></g><g><title>databend-query`alloc::slice::merge_sort (1 samples, 0.53%)</title><rect x="84.2105%" y="373" width="0.5263%" height="15" fill="rgb(216,222,40)" fg:x="160" fg:w="1"/><text x="84.4605%" y="383.50"></text></g><g><title>databend-query`common_ast::parser::parse_sql (1 samples, 0.53%)</title><rect x="84.7368%" y="373" width="0.5263%" height="15" fill="rgb(234,217,39)" fg:x="161" fg:w="1"/><text x="84.9868%" y="383.50"></text></g><g><title>databend-query`common_ast::parser::statement::statements (1 samples, 0.53%)</title><rect x="84.7368%" y="357" width="0.5263%" height="15" fill="rgb(207,178,40)" fg:x="161" fg:w="1"/><text x="84.9868%" y="367.50"></text></g><g><title>databend-query`common_ast::parser::statement::statement (1 samples, 0.53%)</title><rect x="84.7368%" y="341" width="0.5263%" height="15" fill="rgb(221,136,13)" fg:x="161" fg:w="1"/><text x="84.9868%" y="351.50"></text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 2.11%)</title><rect x="83.6842%" y="405" width="2.1053%" height="15" fill="rgb(249,199,10)" fg:x="159" fg:w="4"/><text x="83.9342%" y="415.50">d..</text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 2.11%)</title><rect x="83.6842%" y="389" width="2.1053%" height="15" fill="rgb(249,222,13)" fg:x="159" fg:w="4"/><text x="83.9342%" y="399.50">d..</text></g><g><title>databend-query`databend_query::pipelines::new::executor::pipeline_executor::PipelineExecutor::create (1 samples, 0.53%)</title><rect x="85.2632%" y="373" width="0.5263%" height="15" fill="rgb(244,185,38)" fg:x="162" fg:w="1"/><text x="85.5132%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;databend_query::pipelines::new::executor::executor_graph::ScheduleQueue&gt; (1 samples, 0.53%)</title><rect x="85.2632%" y="357" width="0.5263%" height="15" fill="rgb(236,202,9)" fg:x="162" fg:w="1"/><text x="85.5132%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;[databend_query::pipelines::new::processors::processor::ProcessorPtr]&gt; (1 samples, 0.53%)</title><rect x="85.2632%" y="341" width="0.5263%" height="15" fill="rgb(250,229,37)" fg:x="162" fg:w="1"/><text x="85.5132%" y="351.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.53%)</title><rect x="85.7895%" y="341" width="0.5263%" height="15" fill="rgb(206,174,23)" fg:x="163" fg:w="1"/><text x="86.0395%" y="351.50"></text></g><g><title>databend-query`std::sync::mpsc::sync::wait (12 samples, 6.32%)</title><rect x="86.3158%" y="341" width="6.3158%" height="15" fill="rgb(211,33,43)" fg:x="164" fg:w="12"/><text x="86.5658%" y="351.50">databend..</text></g><g><title>databend-query`std::thread::park (12 samples, 6.32%)</title><rect x="86.3158%" y="325" width="6.3158%" height="15" fill="rgb(245,58,50)" fg:x="164" fg:w="12"/><text x="86.5658%" y="335.50">databend..</text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (10 samples, 5.26%)</title><rect x="87.3684%" y="309" width="5.2632%" height="15" fill="rgb(244,68,36)" fg:x="166" fg:w="10"/><text x="87.6184%" y="319.50">libsys..</text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (1 samples, 0.53%)</title><rect x="92.6316%" y="341" width="0.5263%" height="15" fill="rgb(232,229,15)" fg:x="176" fg:w="1"/><text x="92.8816%" y="351.50"></text></g><g><title>databend-query`&lt;common_streams::stream_abort::AbortStream as futures_core::stream::Stream&gt;::poll_next (15 samples, 7.89%)</title><rect x="85.7895%" y="389" width="7.8947%" height="15" fill="rgb(254,30,23)" fg:x="163" fg:w="15"/><text x="86.0395%" y="399.50">databend-qu..</text></g><g><title>databend-query`&lt;databend_query::interpreters::stream::processor_executor_stream::ProcessorExecutorStream as futures_core::stream::Stream&gt;::poll_next (15 samples, 7.89%)</title><rect x="85.7895%" y="373" width="7.8947%" height="15" fill="rgb(235,160,14)" fg:x="163" fg:w="15"/><text x="86.0395%" y="383.50">databend-qu..</text></g><g><title>databend-query`std::sync::mpsc::Receiver&lt;T&gt;::recv (15 samples, 7.89%)</title><rect x="85.7895%" y="357" width="7.8947%" height="15" fill="rgb(212,155,44)" fg:x="163" fg:w="15"/><text x="86.0395%" y="367.50">databend-qu..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.53%)</title><rect x="93.1579%" y="341" width="0.5263%" height="15" fill="rgb(226,2,50)" fg:x="177" fg:w="1"/><text x="93.4079%" y="351.50"></text></g><g><title>databend-query`tokio::runtime::task::raw::poll (33 samples, 17.37%)</title><rect x="77.3684%" y="533" width="17.3684%" height="15" fill="rgb(234,177,6)" fg:x="147" fg:w="33"/><text x="77.6184%" y="543.50">databend-query`tokio::runti..</text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::run (33 samples, 17.37%)</title><rect x="77.3684%" y="517" width="17.3684%" height="15" fill="rgb(217,24,9)" fg:x="147" fg:w="33"/><text x="77.6184%" y="527.50">databend-query`tokio::runti..</text></g><g><title>databend-query`tokio::runtime::thread_pool::worker::Context::run_task (33 samples, 17.37%)</title><rect x="77.3684%" y="501" width="17.3684%" height="15" fill="rgb(220,13,46)" fg:x="147" fg:w="33"/><text x="77.6184%" y="511.50">databend-query`tokio::runti..</text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (33 samples, 17.37%)</title><rect x="77.3684%" y="485" width="17.3684%" height="15" fill="rgb(239,221,27)" fg:x="147" fg:w="33"/><text x="77.6184%" y="495.50">databend-query`tokio::runti..</text></g><g><title>databend-query`tokio::runtime::task::harness::poll_future (33 samples, 17.37%)</title><rect x="77.3684%" y="469" width="17.3684%" height="15" fill="rgb(222,198,25)" fg:x="147" fg:w="33"/><text x="77.6184%" y="479.50">databend-query`tokio::runti..</text></g><g><title>databend-query`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (23 samples, 12.11%)</title><rect x="82.6316%" y="453" width="12.1053%" height="15" fill="rgb(211,99,13)" fg:x="157" fg:w="23"/><text x="82.8816%" y="463.50">databend-query`tok..</text></g><g><title>databend-query`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (21 samples, 11.05%)</title><rect x="83.6842%" y="437" width="11.0526%" height="15" fill="rgb(232,111,31)" fg:x="159" fg:w="21"/><text x="83.9342%" y="447.50">databend-query`&lt;..</text></g><g><title>databend-query`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (21 samples, 11.05%)</title><rect x="83.6842%" y="421" width="11.0526%" height="15" fill="rgb(245,82,37)" fg:x="159" fg:w="21"/><text x="83.9342%" y="431.50">databend-query`&lt;..</text></g><g><title>databend-query`&lt;tokio_stream::stream_ext::collect::Collect&lt;T,U&gt; as core::future::future::Future&gt;::poll (17 samples, 8.95%)</title><rect x="85.7895%" y="405" width="8.9474%" height="15" fill="rgb(227,149,46)" fg:x="163" fg:w="17"/><text x="86.0395%" y="415.50">databend-quer..</text></g><g><title>databend-query`tokio_stream::stream_ext::collect::_&lt;impl tokio_stream::stream_ext::collect::sealed::FromStreamPriv&lt;core::result::Result&lt;T,E&gt;&gt; for core::result::Result&lt;U,E&gt;&gt;::extend (2 samples, 1.05%)</title><rect x="93.6842%" y="389" width="1.0526%" height="15" fill="rgb(218,36,50)" fg:x="178" fg:w="2"/><text x="93.9342%" y="399.50"></text></g><g><title>databend-query`std::sys_common::backtrace::__rust_begin_short_backtrace (164 samples, 86.32%)</title><rect x="10.0000%" y="549" width="86.3158%" height="15" fill="rgb(226,80,48)" fg:x="19" fg:w="164"/><text x="10.2500%" y="559.50">databend-query`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>libsystem_kernel.dylib`__fcntl (3 samples, 1.58%)</title><rect x="94.7368%" y="533" width="1.5789%" height="15" fill="rgb(238,224,15)" fg:x="180" fg:w="3"/><text x="94.9868%" y="543.50"></text></g><g><title>databend-query`_rjem_je_tcache_alloc_small_hard (1 samples, 0.53%)</title><rect x="96.3158%" y="517" width="0.5263%" height="15" fill="rgb(241,136,10)" fg:x="183" fg:w="1"/><text x="96.5658%" y="527.50"></text></g><g><title>databend-query`_rjem_je_arena_tcache_fill_small (1 samples, 0.53%)</title><rect x="96.3158%" y="501" width="0.5263%" height="15" fill="rgb(208,32,45)" fg:x="183" fg:w="1"/><text x="96.5658%" y="511.50"></text></g><g><title>databend-query`arena_bin_malloc_hard (1 samples, 0.53%)</title><rect x="96.3158%" y="485" width="0.5263%" height="15" fill="rgb(207,135,9)" fg:x="183" fg:w="1"/><text x="96.5658%" y="495.50"></text></g><g><title>databend-query`_rjem_je_extent_alloc_wrapper (1 samples, 0.53%)</title><rect x="96.3158%" y="469" width="0.5263%" height="15" fill="rgb(206,86,44)" fg:x="183" fg:w="1"/><text x="96.5658%" y="479.50"></text></g><g><title>databend-query`_rjem_je_extent_alloc_mmap (1 samples, 0.53%)</title><rect x="96.3158%" y="453" width="0.5263%" height="15" fill="rgb(245,177,15)" fg:x="183" fg:w="1"/><text x="96.5658%" y="463.50"></text></g><g><title>databend-query`_rjem_je_pages_map (1 samples, 0.53%)</title><rect x="96.3158%" y="437" width="0.5263%" height="15" fill="rgb(206,64,50)" fg:x="183" fg:w="1"/><text x="96.5658%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__mmap (1 samples, 0.53%)</title><rect x="96.3158%" y="421" width="0.5263%" height="15" fill="rgb(234,36,40)" fg:x="183" fg:w="1"/><text x="96.5658%" y="431.50"></text></g><g><title>databend-query`std::sys::unix::thread::Thread::new::thread_start (166 samples, 87.37%)</title><rect x="10.0000%" y="581" width="87.3684%" height="15" fill="rgb(213,64,8)" fg:x="19" fg:w="166"/><text x="10.2500%" y="591.50">databend-query`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>databend-query`core::ops::function::FnOnce::call_once{{vtable.shim}} (166 samples, 87.37%)</title><rect x="10.0000%" y="565" width="87.3684%" height="15" fill="rgb(210,75,36)" fg:x="19" fg:w="166"/><text x="10.2500%" y="575.50">databend-query`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>databend-query`std::sys_common::thread_info::set (2 samples, 1.05%)</title><rect x="96.3158%" y="549" width="1.0526%" height="15" fill="rgb(229,88,21)" fg:x="183" fg:w="2"/><text x="96.5658%" y="559.50"></text></g><g><title>databend-query`_rjem_mallocx (2 samples, 1.05%)</title><rect x="96.3158%" y="533" width="1.0526%" height="15" fill="rgb(252,204,47)" fg:x="183" fg:w="2"/><text x="96.5658%" y="543.50"></text></g><g><title>databend-query`_rjem_je_tsd_fetch_slow (1 samples, 0.53%)</title><rect x="96.8421%" y="517" width="0.5263%" height="15" fill="rgb(208,77,27)" fg:x="184" fg:w="1"/><text x="97.0921%" y="527.50"></text></g><g><title>databend-query`_rjem_je_tsd_tcache_enabled_data_init (1 samples, 0.53%)</title><rect x="96.8421%" y="501" width="0.5263%" height="15" fill="rgb(221,76,26)" fg:x="184" fg:w="1"/><text x="97.0921%" y="511.50"></text></g><g><title>databend-query`_rjem_je_tsd_tcache_data_init (1 samples, 0.53%)</title><rect x="96.8421%" y="485" width="0.5263%" height="15" fill="rgb(225,139,18)" fg:x="184" fg:w="1"/><text x="97.0921%" y="495.50"></text></g><g><title>databend-query`_rjem_je_arena_choose_hard (1 samples, 0.53%)</title><rect x="96.8421%" y="469" width="0.5263%" height="15" fill="rgb(230,137,11)" fg:x="184" fg:w="1"/><text x="97.0921%" y="479.50"></text></g><g><title>databend-query`_rjem_je_malloc_mutex_lock_slow (1 samples, 0.53%)</title><rect x="96.8421%" y="453" width="0.5263%" height="15" fill="rgb(212,28,1)" fg:x="184" fg:w="1"/><text x="97.0921%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.53%)</title><rect x="96.8421%" y="437" width="0.5263%" height="15" fill="rgb(248,164,17)" fg:x="184" fg:w="1"/><text x="97.0921%" y="447.50"></text></g><g><title>all (190 samples, 100%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(222,171,42)" fg:x="0" fg:w="190"/><text x="0.2500%" y="639.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (171 samples, 90.00%)</title><rect x="10.0000%" y="613" width="90.0000%" height="15" fill="rgb(243,84,45)" fg:x="19" fg:w="171"/><text x="10.2500%" y="623.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (171 samples, 90.00%)</title><rect x="10.0000%" y="597" width="90.0000%" height="15" fill="rgb(252,49,23)" fg:x="19" fg:w="171"/><text x="10.2500%" y="607.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_exit (5 samples, 2.63%)</title><rect x="97.3684%" y="581" width="2.6316%" height="15" fill="rgb(215,19,7)" fg:x="185" fg:w="5"/><text x="97.6184%" y="591.50">li..</text></g><g><title>libsystem_pthread.dylib`_pthread_tsd_cleanup (5 samples, 2.63%)</title><rect x="97.3684%" y="565" width="2.6316%" height="15" fill="rgb(238,81,41)" fg:x="185" fg:w="5"/><text x="97.6184%" y="575.50">li..</text></g><g><title>databend-query`tsd_cleanup_wrapper (5 samples, 2.63%)</title><rect x="97.3684%" y="549" width="2.6316%" height="15" fill="rgb(210,199,37)" fg:x="185" fg:w="5"/><text x="97.6184%" y="559.50">da..</text></g><g><title>databend-query`_rjem_je_tsd_cleanup (5 samples, 2.63%)</title><rect x="97.3684%" y="533" width="2.6316%" height="15" fill="rgb(244,192,49)" fg:x="185" fg:w="5"/><text x="97.6184%" y="543.50">da..</text></g><g><title>databend-query`tcache_destroy (5 samples, 2.63%)</title><rect x="97.3684%" y="517" width="2.6316%" height="15" fill="rgb(226,211,11)" fg:x="185" fg:w="5"/><text x="97.6184%" y="527.50">da..</text></g><g><title>databend-query`_rjem_je_arena_decay (5 samples, 2.63%)</title><rect x="97.3684%" y="501" width="2.6316%" height="15" fill="rgb(236,162,54)" fg:x="185" fg:w="5"/><text x="97.6184%" y="511.50">da..</text></g><g><title>databend-query`arena_decay_impl (5 samples, 2.63%)</title><rect x="97.3684%" y="485" width="2.6316%" height="15" fill="rgb(220,229,9)" fg:x="185" fg:w="5"/><text x="97.6184%" y="495.50">da..</text></g><g><title>databend-query`arena_decay_to_limit (5 samples, 2.63%)</title><rect x="97.3684%" y="469" width="2.6316%" height="15" fill="rgb(250,87,22)" fg:x="185" fg:w="5"/><text x="97.6184%" y="479.50">da..</text></g><g><title>databend-query`_rjem_je_extent_dalloc_wrapper (5 samples, 2.63%)</title><rect x="97.3684%" y="453" width="2.6316%" height="15" fill="rgb(239,43,17)" fg:x="185" fg:w="5"/><text x="97.6184%" y="463.50">da..</text></g><g><title>databend-query`_rjem_je_extent_dalloc_mmap (5 samples, 2.63%)</title><rect x="97.3684%" y="437" width="2.6316%" height="15" fill="rgb(231,177,25)" fg:x="185" fg:w="5"/><text x="97.6184%" y="447.50">da..</text></g><g><title>libsystem_kernel.dylib`__munmap (5 samples, 2.63%)</title><rect x="97.3684%" y="421" width="2.6316%" height="15" fill="rgb(219,179,1)" fg:x="185" fg:w="5"/><text x="97.6184%" y="431.50">li..</text></g></svg></svg>