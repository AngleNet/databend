use common_io::prelude::position_neon;

#[test]
fn test_position_neon() {
    #[cfg(all(any(target_arch = "aarch64"), target_feature = "neon"))]
    {
        assert_eq!(3, position_neon::<true, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>(&[1, 2, 3, 4, 5, 6, 7]));
        assert_eq!(7, position_neon::<true, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>(&[1, 2, 3, 4, 5, 6, 7]));
        assert_eq!(1, position_neon::<false, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>(&[1, 2, 3, 4, 5, 6, 7]));
        assert_eq!(2, position_neon::<false, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>(&[1, 2, 3, 4, 5, 6, 7]));

        assert_eq!(5, position_neon::<true, 18, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>(&[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]));
        assert_eq!(17, position_neon::<true, 18, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>(&[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]));

        assert_eq!(1, position_neon::<false, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>(&[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]));
        assert_eq!(16, position_neon::<false, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16>(&[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]));
    }
}